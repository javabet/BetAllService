// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_baccarat_def.proto

package game_baccarat_protocols;

public final class GameBaccaratDef {
  private GameBaccaratDef() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code game_baccarat_protocols.e_server_msg_type}
   */
  public enum e_server_msg_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>e_mst_start_c2l = 10000;</code>
     *
     * <pre>
     *客户端到服务端
     * </pre>
     */
    e_mst_start_c2l(0, 10000),
    /**
     * <code>e_mst_c2l_get_room_info = 10001;</code>
     *
     * <pre>
     *得到房间
     * </pre>
     */
    e_mst_c2l_get_room_info(1, 10001),
    /**
     * <code>e_mst_c2l_enter_room = 10002;</code>
     *
     * <pre>
     *进入房间
     * </pre>
     */
    e_mst_c2l_enter_room(2, 10002),
    /**
     * <code>e_mst_c2l_leave_room = 10003;</code>
     *
     * <pre>
     *离开房间
     * </pre>
     */
    e_mst_c2l_leave_room(3, 10003),
    /**
     * <code>e_mst_c2l_add_bet = 10004;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    e_mst_c2l_add_bet(4, 10004),
    /**
     * <code>e_mst_c2l_repeat_bet = 10005;</code>
     *
     * <pre>
     *重复押注
     * </pre>
     */
    e_mst_c2l_repeat_bet(5, 10005),
    /**
     * <code>e_mst_c2l_clear_bet = 10006;</code>
     *
     * <pre>
     *押注清零
     * </pre>
     */
    e_mst_c2l_clear_bet(6, 10006),
    /**
     * <code>e_mst_c2l_get_room_scene_info = 10007;</code>
     *
     * <pre>
     *获得桌子内信息
     * </pre>
     */
    e_mst_c2l_get_room_scene_info(7, 10007),
    /**
     * <code>e_mst_c2l_check_state = 10008;</code>
     *
     * <pre>
     *检测游戏状态
     * </pre>
     */
    e_mst_c2l_check_state(8, 10008),
    /**
     * <code>e_mst_c2l_gm = 10009;</code>
     *
     * <pre>
     *GM
     * </pre>
     */
    e_mst_c2l_gm(9, 10009),
    /**
     * <code>e_mst_c2l_ask_for_banker = 10010;</code>
     *
     * <pre>
     *上庄
     * </pre>
     */
    e_mst_c2l_ask_for_banker(10, 10010),
    /**
     * <code>e_mst_c2l_leave_banker = 10011;</code>
     *
     * <pre>
     *下庄
     * </pre>
     */
    e_mst_c2l_leave_banker(11, 10011),
    /**
     * <code>e_mst_c2l_ask_first_for_banker = 10012;</code>
     *
     * <pre>
     *抢庄
     * </pre>
     */
    e_mst_c2l_ask_first_for_banker(12, 10012),
    /**
     * <code>e_mst_c2l_ask_player_list = 10013;</code>
     *
     * <pre>
     *请求玩家列表
     * </pre>
     */
    e_mst_c2l_ask_player_list(13, 10013),
    /**
     * <code>e_mst_c2l_ask_banker_list = 10014;</code>
     *
     * <pre>
     *请求上庄列表
     * </pre>
     */
    e_mst_c2l_ask_banker_list(14, 10014),
    /**
     * <code>e_mst_c2l_ask_history_list = 10015;</code>
     *
     * <pre>
     *请求牌路
     * </pre>
     */
    e_mst_c2l_ask_history_list(15, 10015),
    /**
     * <code>e_mst_c2l_leave_list_banker = 10017;</code>
     *
     * <pre>
     *下庄列表
     * </pre>
     */
    e_mst_c2l_leave_list_banker(16, 10017),
    /**
     * <code>e_mst_c2l_ask_playerlist = 10018;</code>
     *
     * <pre>
     *请求玩家列表
     * </pre>
     */
    e_mst_c2l_ask_playerlist(17, 10018),
    /**
     * <code>e_mst_c2l_debug = 10100;</code>
     *
     * <pre>
     *控制
     * </pre>
     */
    e_mst_c2l_debug(18, 10100),
    /**
     * <code>e_mst_start_l2c = 15000;</code>
     */
    e_mst_start_l2c(19, 15000),
    /**
     * <code>e_mst_l2c_get_room_info_result = 15001;</code>
     *
     * <pre>
     *得到房间返回
     * </pre>
     */
    e_mst_l2c_get_room_info_result(20, 15001),
    /**
     * <code>e_mst_l2c_enter_room_result = 15002;</code>
     *
     * <pre>
     *进入房间
     * </pre>
     */
    e_mst_l2c_enter_room_result(21, 15002),
    /**
     * <code>e_mst_l2c_leave_room_result = 15003;</code>
     *
     * <pre>
     *离开房间
     * </pre>
     */
    e_mst_l2c_leave_room_result(22, 15003),
    /**
     * <code>e_mst_l2c_add_bet = 15004;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    e_mst_l2c_add_bet(23, 15004),
    /**
     * <code>e_mst_l2c_repeat_bet = 15005;</code>
     *
     * <pre>
     *重复押注
     * </pre>
     */
    e_mst_l2c_repeat_bet(24, 15005),
    /**
     * <code>e_mst_l2c_clear_bet = 15006;</code>
     *
     * <pre>
     *押注清零
     * </pre>
     */
    e_mst_l2c_clear_bet(25, 15006),
    /**
     * <code>e_mst_l2c_bc_begin_bet = 15007;</code>
     *
     * <pre>
     *通知开始下注
     * </pre>
     */
    e_mst_l2c_bc_begin_bet(26, 15007),
    /**
     * <code>e_mst_l2c_bc_begin_award = 15008;</code>
     *
     * <pre>
     *通知开奖
     * </pre>
     */
    e_mst_l2c_bc_begin_award(27, 15008),
    /**
     * <code>e_mst_l2c_bc_total_bet_info = 15009;</code>
     *
     * <pre>
     *通知所以玩家下注信息
     * </pre>
     */
    e_mst_l2c_bc_total_bet_info(28, 15009),
    /**
     * <code>e_mst_l2c_get_room_scene_info = 15010;</code>
     *
     * <pre>
     *获得桌子内信息
     * </pre>
     */
    e_mst_l2c_get_room_scene_info(29, 15010),
    /**
     * <code>e_mst_l2c_check_state_result = 15013;</code>
     *
     * <pre>
     *检测游戏状态
     * </pre>
     */
    e_mst_l2c_check_state_result(30, 15013),
    /**
     * <code>e_mst_l2c_bc_accept_gift = 15015;</code>
     *
     * <pre>
     *广播桌子内玩家收到礼物
     * </pre>
     */
    e_mst_l2c_bc_accept_gift(31, 15015),
    /**
     * <code>e_mst_l2c_ask_for_banker = 15016;</code>
     *
     * <pre>
     *上庄
     * </pre>
     */
    e_mst_l2c_ask_for_banker(32, 15016),
    /**
     * <code>e_mst_l2c_leave_banker = 15017;</code>
     *
     * <pre>
     *下庄
     * </pre>
     */
    e_mst_l2c_leave_banker(33, 15017),
    /**
     * <code>e_mst_l2c_ask_first_for_banker = 15018;</code>
     *
     * <pre>
     *抢庄
     * </pre>
     */
    e_mst_l2c_ask_first_for_banker(34, 15018),
    /**
     * <code>e_mst_l2c_bc_change_banker = 15019;</code>
     *
     * <pre>
     *通知更换庄家
     * </pre>
     */
    e_mst_l2c_bc_change_banker(35, 15019),
    /**
     * <code>e_mst_l2c_ask_player_list = 15020;</code>
     *
     * <pre>
     *请求玩家列表返回
     * </pre>
     */
    e_mst_l2c_ask_player_list(36, 15020),
    /**
     * <code>e_mst_l2c_ask_banker_list = 15021;</code>
     *
     * <pre>
     *请求上庄列表返回
     * </pre>
     */
    e_mst_l2c_ask_banker_list(37, 15021),
    /**
     * <code>e_mst_l2c_ask_history_list = 15022;</code>
     *
     * <pre>
     *请求牌路返回
     * </pre>
     */
    e_mst_l2c_ask_history_list(38, 15022),
    /**
     * <code>e_mst_l2c_bc_rob_banker_info = 15023;</code>
     *
     * <pre>
     *通知抢庄信息
     * </pre>
     */
    e_mst_l2c_bc_rob_banker_info(39, 15023),
    /**
     * <code>e_mst_l2c_leave_list_banker = 15028;</code>
     *
     * <pre>
     *下庄列表
     * </pre>
     */
    e_mst_l2c_leave_list_banker(40, 15028),
    /**
     * <code>e_mst_attention_needLeave = 15029;</code>
     */
    e_mst_attention_needLeave(41, 15029),
    /**
     * <code>e_mst_l2c_playerlist_result = 15030;</code>
     *
     * <pre>
     *玩家列表结果
     * </pre>
     */
    e_mst_l2c_playerlist_result(42, 15030),
    /**
     * <code>e_mst_l2c_notify_sceneinfo = 15101;</code>
     *
     * <pre>
     *通知场景信息
     * </pre>
     */
    e_mst_l2c_notify_sceneinfo(43, 15101),
    /**
     * <code>e_mst_l2c_debug_result = 15102;</code>
     *
     * <pre>
     *控制返回
     * </pre>
     */
    e_mst_l2c_debug_result(44, 15102),
    /**
     * <code>e_mst_clend_index = 20000;</code>
     */
    e_mst_clend_index(45, 20000),
    ;

    /**
     * <code>e_mst_start_c2l = 10000;</code>
     *
     * <pre>
     *客户端到服务端
     * </pre>
     */
    public static final int e_mst_start_c2l_VALUE = 10000;
    /**
     * <code>e_mst_c2l_get_room_info = 10001;</code>
     *
     * <pre>
     *得到房间
     * </pre>
     */
    public static final int e_mst_c2l_get_room_info_VALUE = 10001;
    /**
     * <code>e_mst_c2l_enter_room = 10002;</code>
     *
     * <pre>
     *进入房间
     * </pre>
     */
    public static final int e_mst_c2l_enter_room_VALUE = 10002;
    /**
     * <code>e_mst_c2l_leave_room = 10003;</code>
     *
     * <pre>
     *离开房间
     * </pre>
     */
    public static final int e_mst_c2l_leave_room_VALUE = 10003;
    /**
     * <code>e_mst_c2l_add_bet = 10004;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    public static final int e_mst_c2l_add_bet_VALUE = 10004;
    /**
     * <code>e_mst_c2l_repeat_bet = 10005;</code>
     *
     * <pre>
     *重复押注
     * </pre>
     */
    public static final int e_mst_c2l_repeat_bet_VALUE = 10005;
    /**
     * <code>e_mst_c2l_clear_bet = 10006;</code>
     *
     * <pre>
     *押注清零
     * </pre>
     */
    public static final int e_mst_c2l_clear_bet_VALUE = 10006;
    /**
     * <code>e_mst_c2l_get_room_scene_info = 10007;</code>
     *
     * <pre>
     *获得桌子内信息
     * </pre>
     */
    public static final int e_mst_c2l_get_room_scene_info_VALUE = 10007;
    /**
     * <code>e_mst_c2l_check_state = 10008;</code>
     *
     * <pre>
     *检测游戏状态
     * </pre>
     */
    public static final int e_mst_c2l_check_state_VALUE = 10008;
    /**
     * <code>e_mst_c2l_gm = 10009;</code>
     *
     * <pre>
     *GM
     * </pre>
     */
    public static final int e_mst_c2l_gm_VALUE = 10009;
    /**
     * <code>e_mst_c2l_ask_for_banker = 10010;</code>
     *
     * <pre>
     *上庄
     * </pre>
     */
    public static final int e_mst_c2l_ask_for_banker_VALUE = 10010;
    /**
     * <code>e_mst_c2l_leave_banker = 10011;</code>
     *
     * <pre>
     *下庄
     * </pre>
     */
    public static final int e_mst_c2l_leave_banker_VALUE = 10011;
    /**
     * <code>e_mst_c2l_ask_first_for_banker = 10012;</code>
     *
     * <pre>
     *抢庄
     * </pre>
     */
    public static final int e_mst_c2l_ask_first_for_banker_VALUE = 10012;
    /**
     * <code>e_mst_c2l_ask_player_list = 10013;</code>
     *
     * <pre>
     *请求玩家列表
     * </pre>
     */
    public static final int e_mst_c2l_ask_player_list_VALUE = 10013;
    /**
     * <code>e_mst_c2l_ask_banker_list = 10014;</code>
     *
     * <pre>
     *请求上庄列表
     * </pre>
     */
    public static final int e_mst_c2l_ask_banker_list_VALUE = 10014;
    /**
     * <code>e_mst_c2l_ask_history_list = 10015;</code>
     *
     * <pre>
     *请求牌路
     * </pre>
     */
    public static final int e_mst_c2l_ask_history_list_VALUE = 10015;
    /**
     * <code>e_mst_c2l_leave_list_banker = 10017;</code>
     *
     * <pre>
     *下庄列表
     * </pre>
     */
    public static final int e_mst_c2l_leave_list_banker_VALUE = 10017;
    /**
     * <code>e_mst_c2l_ask_playerlist = 10018;</code>
     *
     * <pre>
     *请求玩家列表
     * </pre>
     */
    public static final int e_mst_c2l_ask_playerlist_VALUE = 10018;
    /**
     * <code>e_mst_c2l_debug = 10100;</code>
     *
     * <pre>
     *控制
     * </pre>
     */
    public static final int e_mst_c2l_debug_VALUE = 10100;
    /**
     * <code>e_mst_start_l2c = 15000;</code>
     */
    public static final int e_mst_start_l2c_VALUE = 15000;
    /**
     * <code>e_mst_l2c_get_room_info_result = 15001;</code>
     *
     * <pre>
     *得到房间返回
     * </pre>
     */
    public static final int e_mst_l2c_get_room_info_result_VALUE = 15001;
    /**
     * <code>e_mst_l2c_enter_room_result = 15002;</code>
     *
     * <pre>
     *进入房间
     * </pre>
     */
    public static final int e_mst_l2c_enter_room_result_VALUE = 15002;
    /**
     * <code>e_mst_l2c_leave_room_result = 15003;</code>
     *
     * <pre>
     *离开房间
     * </pre>
     */
    public static final int e_mst_l2c_leave_room_result_VALUE = 15003;
    /**
     * <code>e_mst_l2c_add_bet = 15004;</code>
     *
     * <pre>
     *下注
     * </pre>
     */
    public static final int e_mst_l2c_add_bet_VALUE = 15004;
    /**
     * <code>e_mst_l2c_repeat_bet = 15005;</code>
     *
     * <pre>
     *重复押注
     * </pre>
     */
    public static final int e_mst_l2c_repeat_bet_VALUE = 15005;
    /**
     * <code>e_mst_l2c_clear_bet = 15006;</code>
     *
     * <pre>
     *押注清零
     * </pre>
     */
    public static final int e_mst_l2c_clear_bet_VALUE = 15006;
    /**
     * <code>e_mst_l2c_bc_begin_bet = 15007;</code>
     *
     * <pre>
     *通知开始下注
     * </pre>
     */
    public static final int e_mst_l2c_bc_begin_bet_VALUE = 15007;
    /**
     * <code>e_mst_l2c_bc_begin_award = 15008;</code>
     *
     * <pre>
     *通知开奖
     * </pre>
     */
    public static final int e_mst_l2c_bc_begin_award_VALUE = 15008;
    /**
     * <code>e_mst_l2c_bc_total_bet_info = 15009;</code>
     *
     * <pre>
     *通知所以玩家下注信息
     * </pre>
     */
    public static final int e_mst_l2c_bc_total_bet_info_VALUE = 15009;
    /**
     * <code>e_mst_l2c_get_room_scene_info = 15010;</code>
     *
     * <pre>
     *获得桌子内信息
     * </pre>
     */
    public static final int e_mst_l2c_get_room_scene_info_VALUE = 15010;
    /**
     * <code>e_mst_l2c_check_state_result = 15013;</code>
     *
     * <pre>
     *检测游戏状态
     * </pre>
     */
    public static final int e_mst_l2c_check_state_result_VALUE = 15013;
    /**
     * <code>e_mst_l2c_bc_accept_gift = 15015;</code>
     *
     * <pre>
     *广播桌子内玩家收到礼物
     * </pre>
     */
    public static final int e_mst_l2c_bc_accept_gift_VALUE = 15015;
    /**
     * <code>e_mst_l2c_ask_for_banker = 15016;</code>
     *
     * <pre>
     *上庄
     * </pre>
     */
    public static final int e_mst_l2c_ask_for_banker_VALUE = 15016;
    /**
     * <code>e_mst_l2c_leave_banker = 15017;</code>
     *
     * <pre>
     *下庄
     * </pre>
     */
    public static final int e_mst_l2c_leave_banker_VALUE = 15017;
    /**
     * <code>e_mst_l2c_ask_first_for_banker = 15018;</code>
     *
     * <pre>
     *抢庄
     * </pre>
     */
    public static final int e_mst_l2c_ask_first_for_banker_VALUE = 15018;
    /**
     * <code>e_mst_l2c_bc_change_banker = 15019;</code>
     *
     * <pre>
     *通知更换庄家
     * </pre>
     */
    public static final int e_mst_l2c_bc_change_banker_VALUE = 15019;
    /**
     * <code>e_mst_l2c_ask_player_list = 15020;</code>
     *
     * <pre>
     *请求玩家列表返回
     * </pre>
     */
    public static final int e_mst_l2c_ask_player_list_VALUE = 15020;
    /**
     * <code>e_mst_l2c_ask_banker_list = 15021;</code>
     *
     * <pre>
     *请求上庄列表返回
     * </pre>
     */
    public static final int e_mst_l2c_ask_banker_list_VALUE = 15021;
    /**
     * <code>e_mst_l2c_ask_history_list = 15022;</code>
     *
     * <pre>
     *请求牌路返回
     * </pre>
     */
    public static final int e_mst_l2c_ask_history_list_VALUE = 15022;
    /**
     * <code>e_mst_l2c_bc_rob_banker_info = 15023;</code>
     *
     * <pre>
     *通知抢庄信息
     * </pre>
     */
    public static final int e_mst_l2c_bc_rob_banker_info_VALUE = 15023;
    /**
     * <code>e_mst_l2c_leave_list_banker = 15028;</code>
     *
     * <pre>
     *下庄列表
     * </pre>
     */
    public static final int e_mst_l2c_leave_list_banker_VALUE = 15028;
    /**
     * <code>e_mst_attention_needLeave = 15029;</code>
     */
    public static final int e_mst_attention_needLeave_VALUE = 15029;
    /**
     * <code>e_mst_l2c_playerlist_result = 15030;</code>
     *
     * <pre>
     *玩家列表结果
     * </pre>
     */
    public static final int e_mst_l2c_playerlist_result_VALUE = 15030;
    /**
     * <code>e_mst_l2c_notify_sceneinfo = 15101;</code>
     *
     * <pre>
     *通知场景信息
     * </pre>
     */
    public static final int e_mst_l2c_notify_sceneinfo_VALUE = 15101;
    /**
     * <code>e_mst_l2c_debug_result = 15102;</code>
     *
     * <pre>
     *控制返回
     * </pre>
     */
    public static final int e_mst_l2c_debug_result_VALUE = 15102;
    /**
     * <code>e_mst_clend_index = 20000;</code>
     */
    public static final int e_mst_clend_index_VALUE = 20000;


    public final int getNumber() { return value; }

    public static e_server_msg_type valueOf(int value) {
      switch (value) {
        case 10000: return e_mst_start_c2l;
        case 10001: return e_mst_c2l_get_room_info;
        case 10002: return e_mst_c2l_enter_room;
        case 10003: return e_mst_c2l_leave_room;
        case 10004: return e_mst_c2l_add_bet;
        case 10005: return e_mst_c2l_repeat_bet;
        case 10006: return e_mst_c2l_clear_bet;
        case 10007: return e_mst_c2l_get_room_scene_info;
        case 10008: return e_mst_c2l_check_state;
        case 10009: return e_mst_c2l_gm;
        case 10010: return e_mst_c2l_ask_for_banker;
        case 10011: return e_mst_c2l_leave_banker;
        case 10012: return e_mst_c2l_ask_first_for_banker;
        case 10013: return e_mst_c2l_ask_player_list;
        case 10014: return e_mst_c2l_ask_banker_list;
        case 10015: return e_mst_c2l_ask_history_list;
        case 10017: return e_mst_c2l_leave_list_banker;
        case 10018: return e_mst_c2l_ask_playerlist;
        case 10100: return e_mst_c2l_debug;
        case 15000: return e_mst_start_l2c;
        case 15001: return e_mst_l2c_get_room_info_result;
        case 15002: return e_mst_l2c_enter_room_result;
        case 15003: return e_mst_l2c_leave_room_result;
        case 15004: return e_mst_l2c_add_bet;
        case 15005: return e_mst_l2c_repeat_bet;
        case 15006: return e_mst_l2c_clear_bet;
        case 15007: return e_mst_l2c_bc_begin_bet;
        case 15008: return e_mst_l2c_bc_begin_award;
        case 15009: return e_mst_l2c_bc_total_bet_info;
        case 15010: return e_mst_l2c_get_room_scene_info;
        case 15013: return e_mst_l2c_check_state_result;
        case 15015: return e_mst_l2c_bc_accept_gift;
        case 15016: return e_mst_l2c_ask_for_banker;
        case 15017: return e_mst_l2c_leave_banker;
        case 15018: return e_mst_l2c_ask_first_for_banker;
        case 15019: return e_mst_l2c_bc_change_banker;
        case 15020: return e_mst_l2c_ask_player_list;
        case 15021: return e_mst_l2c_ask_banker_list;
        case 15022: return e_mst_l2c_ask_history_list;
        case 15023: return e_mst_l2c_bc_rob_banker_info;
        case 15028: return e_mst_l2c_leave_list_banker;
        case 15029: return e_mst_attention_needLeave;
        case 15030: return e_mst_l2c_playerlist_result;
        case 15101: return e_mst_l2c_notify_sceneinfo;
        case 15102: return e_mst_l2c_debug_result;
        case 20000: return e_mst_clend_index;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_server_msg_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_server_msg_type>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_server_msg_type>() {
            public e_server_msg_type findValueByNumber(int number) {
              return e_server_msg_type.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return game_baccarat_protocols.GameBaccaratDef.getDescriptor().getEnumTypes().get(0);
    }

    private static final e_server_msg_type[] VALUES = values();

    public static e_server_msg_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_server_msg_type(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:game_baccarat_protocols.e_server_msg_type)
  }

  /**
   * Protobuf enum {@code game_baccarat_protocols.e_game_state}
   */
  public enum e_game_state
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>e_state_game_begin = 0;</code>
     *
     * <pre>
     *游戏开始
     * </pre>
     */
    e_state_game_begin(0, 0),
    /**
     * <code>e_state_game_bet = 1;</code>
     *
     * <pre>
     *押注期间
     * </pre>
     */
    e_state_game_bet(1, 1),
    /**
     * <code>e_state_game_award = 2;</code>
     *
     * <pre>
     *开奖期间
     * </pre>
     */
    e_state_game_award(2, 2),
    ;

    /**
     * <code>e_state_game_begin = 0;</code>
     *
     * <pre>
     *游戏开始
     * </pre>
     */
    public static final int e_state_game_begin_VALUE = 0;
    /**
     * <code>e_state_game_bet = 1;</code>
     *
     * <pre>
     *押注期间
     * </pre>
     */
    public static final int e_state_game_bet_VALUE = 1;
    /**
     * <code>e_state_game_award = 2;</code>
     *
     * <pre>
     *开奖期间
     * </pre>
     */
    public static final int e_state_game_award_VALUE = 2;


    public final int getNumber() { return value; }

    public static e_game_state valueOf(int value) {
      switch (value) {
        case 0: return e_state_game_begin;
        case 1: return e_state_game_bet;
        case 2: return e_state_game_award;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_game_state>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_game_state>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_game_state>() {
            public e_game_state findValueByNumber(int number) {
              return e_game_state.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return game_baccarat_protocols.GameBaccaratDef.getDescriptor().getEnumTypes().get(1);
    }

    private static final e_game_state[] VALUES = values();

    public static e_game_state valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_game_state(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:game_baccarat_protocols.e_game_state)
  }

  /**
   * Protobuf enum {@code game_baccarat_protocols.e_card_flower}
   */
  public enum e_card_flower
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>e_flower_diamond = 0;</code>
     *
     * <pre>
     *方块
     * </pre>
     */
    e_flower_diamond(0, 0),
    /**
     * <code>e_flower_club = 1;</code>
     *
     * <pre>
     *梅花
     * </pre>
     */
    e_flower_club(1, 1),
    /**
     * <code>e_flower_spade = 2;</code>
     *
     * <pre>
     *黑桃
     * </pre>
     */
    e_flower_spade(2, 2),
    /**
     * <code>e_flower_heart = 3;</code>
     *
     * <pre>
     *红心
     * </pre>
     */
    e_flower_heart(3, 3),
    ;

    /**
     * <code>e_flower_diamond = 0;</code>
     *
     * <pre>
     *方块
     * </pre>
     */
    public static final int e_flower_diamond_VALUE = 0;
    /**
     * <code>e_flower_club = 1;</code>
     *
     * <pre>
     *梅花
     * </pre>
     */
    public static final int e_flower_club_VALUE = 1;
    /**
     * <code>e_flower_spade = 2;</code>
     *
     * <pre>
     *黑桃
     * </pre>
     */
    public static final int e_flower_spade_VALUE = 2;
    /**
     * <code>e_flower_heart = 3;</code>
     *
     * <pre>
     *红心
     * </pre>
     */
    public static final int e_flower_heart_VALUE = 3;


    public final int getNumber() { return value; }

    public static e_card_flower valueOf(int value) {
      switch (value) {
        case 0: return e_flower_diamond;
        case 1: return e_flower_club;
        case 2: return e_flower_spade;
        case 3: return e_flower_heart;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_card_flower>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_card_flower>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_card_flower>() {
            public e_card_flower findValueByNumber(int number) {
              return e_card_flower.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return game_baccarat_protocols.GameBaccaratDef.getDescriptor().getEnumTypes().get(2);
    }

    private static final e_card_flower[] VALUES = values();

    public static e_card_flower valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_card_flower(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:game_baccarat_protocols.e_card_flower)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027game_baccarat_def.proto\022\027game_baccarat" +
      "_protocols*\207\013\n\021e_server_msg_type\022\024\n\017e_ms" +
      "t_start_c2l\020\220N\022\034\n\027e_mst_c2l_get_room_inf" +
      "o\020\221N\022\031\n\024e_mst_c2l_enter_room\020\222N\022\031\n\024e_mst" +
      "_c2l_leave_room\020\223N\022\026\n\021e_mst_c2l_add_bet\020" +
      "\224N\022\031\n\024e_mst_c2l_repeat_bet\020\225N\022\030\n\023e_mst_c" +
      "2l_clear_bet\020\226N\022\"\n\035e_mst_c2l_get_room_sc" +
      "ene_info\020\227N\022\032\n\025e_mst_c2l_check_state\020\230N\022" +
      "\021\n\014e_mst_c2l_gm\020\231N\022\035\n\030e_mst_c2l_ask_for_" +
      "banker\020\232N\022\033\n\026e_mst_c2l_leave_banker\020\233N\022#",
      "\n\036e_mst_c2l_ask_first_for_banker\020\234N\022\036\n\031e" +
      "_mst_c2l_ask_player_list\020\235N\022\036\n\031e_mst_c2l" +
      "_ask_banker_list\020\236N\022\037\n\032e_mst_c2l_ask_his" +
      "tory_list\020\237N\022 \n\033e_mst_c2l_leave_list_ban" +
      "ker\020\241N\022\035\n\030e_mst_c2l_ask_playerlist\020\242N\022\024\n" +
      "\017e_mst_c2l_debug\020\364N\022\024\n\017e_mst_start_l2c\020\230" +
      "u\022#\n\036e_mst_l2c_get_room_info_result\020\231u\022 " +
      "\n\033e_mst_l2c_enter_room_result\020\232u\022 \n\033e_ms" +
      "t_l2c_leave_room_result\020\233u\022\026\n\021e_mst_l2c_" +
      "add_bet\020\234u\022\031\n\024e_mst_l2c_repeat_bet\020\235u\022\030\n",
      "\023e_mst_l2c_clear_bet\020\236u\022\033\n\026e_mst_l2c_bc_" +
      "begin_bet\020\237u\022\035\n\030e_mst_l2c_bc_begin_award" +
      "\020\240u\022 \n\033e_mst_l2c_bc_total_bet_info\020\241u\022\"\n" +
      "\035e_mst_l2c_get_room_scene_info\020\242u\022!\n\034e_m" +
      "st_l2c_check_state_result\020\245u\022\035\n\030e_mst_l2" +
      "c_bc_accept_gift\020\247u\022\035\n\030e_mst_l2c_ask_for" +
      "_banker\020\250u\022\033\n\026e_mst_l2c_leave_banker\020\251u\022" +
      "#\n\036e_mst_l2c_ask_first_for_banker\020\252u\022\037\n\032" +
      "e_mst_l2c_bc_change_banker\020\253u\022\036\n\031e_mst_l" +
      "2c_ask_player_list\020\254u\022\036\n\031e_mst_l2c_ask_b",
      "anker_list\020\255u\022\037\n\032e_mst_l2c_ask_history_l" +
      "ist\020\256u\022!\n\034e_mst_l2c_bc_rob_banker_info\020\257" +
      "u\022 \n\033e_mst_l2c_leave_list_banker\020\264u\022\036\n\031e" +
      "_mst_attention_needLeave\020\265u\022 \n\033e_mst_l2c" +
      "_playerlist_result\020\266u\022\037\n\032e_mst_l2c_notif" +
      "y_sceneinfo\020\375u\022\033\n\026e_mst_l2c_debug_result" +
      "\020\376u\022\027\n\021e_mst_clend_index\020\240\234\001*T\n\014e_game_s" +
      "tate\022\026\n\022e_state_game_begin\020\000\022\024\n\020e_state_" +
      "game_bet\020\001\022\026\n\022e_state_game_award\020\002*`\n\re_" +
      "card_flower\022\024\n\020e_flower_diamond\020\000\022\021\n\re_f",
      "lower_club\020\001\022\022\n\016e_flower_spade\020\002\022\022\n\016e_fl" +
      "ower_heart\020\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
