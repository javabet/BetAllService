// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_guanyun_protocol.proto

package game_guanyuan_protocols;

public final class GameGuanyunProtocol {
  private GameGuanyunProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code game_guanyuan_protocols.e_action_type}
   *
   * <pre>
   *操作类型
   * </pre>
   */
  public enum e_action_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>e_action_skip = 1;</code>
     *
     * <pre>
     *过
     * </pre>
     */
    e_action_skip(0, 1),
    /**
     * <code>e_action_out_card = 2;</code>
     *
     * <pre>
     *出牌
     * </pre>
     */
    e_action_out_card(1, 2),
    /**
     * <code>e_action_eat_card = 3;</code>
     *
     * <pre>
     *吃牌
     * </pre>
     */
    e_action_eat_card(2, 3),
    /**
     * <code>e_action_gang = 4;</code>
     *
     * <pre>
     *杠
     * </pre>
     */
    e_action_gang(3, 4),
    /**
     * <code>e_action_peng = 5;</code>
     *
     * <pre>
     *碰
     * </pre>
     */
    e_action_peng(4, 5),
    /**
     * <code>e_action_ting = 6;</code>
     *
     * <pre>
     *叫听
     * </pre>
     */
    e_action_ting(5, 6),
    /**
     * <code>e_action_hu = 7;</code>
     *
     * <pre>
     *胡
     * </pre>
     */
    e_action_hu(6, 7),
    /**
     * <code>e_action_ready = 8;</code>
     *
     * <pre>
     *准备
     * </pre>
     */
    e_action_ready(7, 8),
    /**
     * <code>e_action_unready = 9;</code>
     *
     * <pre>
     *取消准备
     * </pre>
     */
    e_action_unready(8, 9),
    /**
     * <code>e_action_mo_card = 10;</code>
     *
     * <pre>
     *玩家摸一张牌 服务器向客户端发送
     * </pre>
     */
    e_action_mo_card(9, 10),
    ;

    /**
     * <code>e_action_skip = 1;</code>
     *
     * <pre>
     *过
     * </pre>
     */
    public static final int e_action_skip_VALUE = 1;
    /**
     * <code>e_action_out_card = 2;</code>
     *
     * <pre>
     *出牌
     * </pre>
     */
    public static final int e_action_out_card_VALUE = 2;
    /**
     * <code>e_action_eat_card = 3;</code>
     *
     * <pre>
     *吃牌
     * </pre>
     */
    public static final int e_action_eat_card_VALUE = 3;
    /**
     * <code>e_action_gang = 4;</code>
     *
     * <pre>
     *杠
     * </pre>
     */
    public static final int e_action_gang_VALUE = 4;
    /**
     * <code>e_action_peng = 5;</code>
     *
     * <pre>
     *碰
     * </pre>
     */
    public static final int e_action_peng_VALUE = 5;
    /**
     * <code>e_action_ting = 6;</code>
     *
     * <pre>
     *叫听
     * </pre>
     */
    public static final int e_action_ting_VALUE = 6;
    /**
     * <code>e_action_hu = 7;</code>
     *
     * <pre>
     *胡
     * </pre>
     */
    public static final int e_action_hu_VALUE = 7;
    /**
     * <code>e_action_ready = 8;</code>
     *
     * <pre>
     *准备
     * </pre>
     */
    public static final int e_action_ready_VALUE = 8;
    /**
     * <code>e_action_unready = 9;</code>
     *
     * <pre>
     *取消准备
     * </pre>
     */
    public static final int e_action_unready_VALUE = 9;
    /**
     * <code>e_action_mo_card = 10;</code>
     *
     * <pre>
     *玩家摸一张牌 服务器向客户端发送
     * </pre>
     */
    public static final int e_action_mo_card_VALUE = 10;


    public final int getNumber() { return value; }

    public static e_action_type valueOf(int value) {
      switch (value) {
        case 1: return e_action_skip;
        case 2: return e_action_out_card;
        case 3: return e_action_eat_card;
        case 4: return e_action_gang;
        case 5: return e_action_peng;
        case 6: return e_action_ting;
        case 7: return e_action_hu;
        case 8: return e_action_ready;
        case 9: return e_action_unready;
        case 10: return e_action_mo_card;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_action_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_action_type>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_action_type>() {
            public e_action_type findValueByNumber(int number) {
              return e_action_type.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.getDescriptor().getEnumTypes().get(0);
    }

    private static final e_action_type[] VALUES = values();

    public static e_action_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_action_type(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:game_guanyuan_protocols.e_action_type)
  }

  /**
   * Protobuf enum {@code game_guanyuan_protocols.e_player_ation_type}
   *
   * <pre>
   *玩家能操作的类型
   * </pre>
   */
  public enum e_player_ation_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>e_player_ation_peng = 1;</code>
     */
    e_player_ation_peng(0, 1),
    /**
     * <code>e_player_ation_hu = 2;</code>
     */
    e_player_ation_hu(1, 2),
    /**
     * <code>e_player_ation_ting = 3;</code>
     *
     * <pre>
     *叫听
     * </pre>
     */
    e_player_ation_ting(2, 3),
    /**
     * <code>e_player_ation_gang_an = 4;</code>
     *
     * <pre>
     *暗杠
     * </pre>
     */
    e_player_ation_gang_an(3, 4),
    /**
     * <code>e_player_ation_gang_wang = 5;</code>
     *
     * <pre>
     *弯杠
     * </pre>
     */
    e_player_ation_gang_wang(4, 5),
    /**
     * <code>e_player_ation_gang_ming = 6;</code>
     *
     * <pre>
     *明杠
     * </pre>
     */
    e_player_ation_gang_ming(5, 6),
    ;

    /**
     * <code>e_player_ation_peng = 1;</code>
     */
    public static final int e_player_ation_peng_VALUE = 1;
    /**
     * <code>e_player_ation_hu = 2;</code>
     */
    public static final int e_player_ation_hu_VALUE = 2;
    /**
     * <code>e_player_ation_ting = 3;</code>
     *
     * <pre>
     *叫听
     * </pre>
     */
    public static final int e_player_ation_ting_VALUE = 3;
    /**
     * <code>e_player_ation_gang_an = 4;</code>
     *
     * <pre>
     *暗杠
     * </pre>
     */
    public static final int e_player_ation_gang_an_VALUE = 4;
    /**
     * <code>e_player_ation_gang_wang = 5;</code>
     *
     * <pre>
     *弯杠
     * </pre>
     */
    public static final int e_player_ation_gang_wang_VALUE = 5;
    /**
     * <code>e_player_ation_gang_ming = 6;</code>
     *
     * <pre>
     *明杠
     * </pre>
     */
    public static final int e_player_ation_gang_ming_VALUE = 6;


    public final int getNumber() { return value; }

    public static e_player_ation_type valueOf(int value) {
      switch (value) {
        case 1: return e_player_ation_peng;
        case 2: return e_player_ation_hu;
        case 3: return e_player_ation_ting;
        case 4: return e_player_ation_gang_an;
        case 5: return e_player_ation_gang_wang;
        case 6: return e_player_ation_gang_ming;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_player_ation_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_player_ation_type>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_player_ation_type>() {
            public e_player_ation_type findValueByNumber(int number) {
              return e_player_ation_type.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.getDescriptor().getEnumTypes().get(1);
    }

    private static final e_player_ation_type[] VALUES = values();

    public static e_player_ation_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_player_ation_type(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:game_guanyuan_protocols.e_player_ation_type)
  }

  /**
   * Protobuf enum {@code game_guanyuan_protocols.e_game_status_type}
   *
   * <pre>
   *当前游戏的状态
   * </pre>
   */
  public enum e_game_status_type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>e_game_waiting = 1;</code>
     *
     * <pre>
     *正在等待玩家的阶段
     * </pre>
     */
    e_game_waiting(0, 1),
    /**
     * <code>e_game_ready = 2;</code>
     *
     * <pre>
     *玩家满了，正在准备阶段
     * </pre>
     */
    e_game_ready(1, 2),
    /**
     * <code>e_game_gameing = 3;</code>
     *
     * <pre>
     *游戏开始阶段
     * </pre>
     */
    e_game_gameing(2, 3),
    /**
     * <code>e_game_circle_over = 4;</code>
     *
     * <pre>
     *一局结束时
     * </pre>
     */
    e_game_circle_over(3, 4),
    /**
     * <code>e_game_game_over = 5;</code>
     *
     * <pre>
     *游戏结束时
     * </pre>
     */
    e_game_game_over(4, 5),
    ;

    /**
     * <code>e_game_waiting = 1;</code>
     *
     * <pre>
     *正在等待玩家的阶段
     * </pre>
     */
    public static final int e_game_waiting_VALUE = 1;
    /**
     * <code>e_game_ready = 2;</code>
     *
     * <pre>
     *玩家满了，正在准备阶段
     * </pre>
     */
    public static final int e_game_ready_VALUE = 2;
    /**
     * <code>e_game_gameing = 3;</code>
     *
     * <pre>
     *游戏开始阶段
     * </pre>
     */
    public static final int e_game_gameing_VALUE = 3;
    /**
     * <code>e_game_circle_over = 4;</code>
     *
     * <pre>
     *一局结束时
     * </pre>
     */
    public static final int e_game_circle_over_VALUE = 4;
    /**
     * <code>e_game_game_over = 5;</code>
     *
     * <pre>
     *游戏结束时
     * </pre>
     */
    public static final int e_game_game_over_VALUE = 5;


    public final int getNumber() { return value; }

    public static e_game_status_type valueOf(int value) {
      switch (value) {
        case 1: return e_game_waiting;
        case 2: return e_game_ready;
        case 3: return e_game_gameing;
        case 4: return e_game_circle_over;
        case 5: return e_game_game_over;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<e_game_status_type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<e_game_status_type>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<e_game_status_type>() {
            public e_game_status_type findValueByNumber(int number) {
              return e_game_status_type.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.getDescriptor().getEnumTypes().get(2);
    }

    private static final e_game_status_type[] VALUES = values();

    public static e_game_status_type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private e_game_status_type(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:game_guanyuan_protocols.e_game_status_type)
  }

  public interface packetc2l_check_stateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetc2l_check_state}
   *
   * <pre>
   *检测游戏状态		//重连之后判断是否在桌子中
   * </pre>
   */
  public static final class packetc2l_check_state extends
      com.google.protobuf.GeneratedMessage
      implements packetc2l_check_stateOrBuilder {
    // Use packetc2l_check_state.newBuilder() to construct.
    private packetc2l_check_state(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetc2l_check_state(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetc2l_check_state defaultInstance;
    public static packetc2l_check_state getDefaultInstance() {
      return defaultInstance;
    }

    public packetc2l_check_state getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetc2l_check_state(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_check_state_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_check_state_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state.Builder.class);
    }

    public static com.google.protobuf.Parser<packetc2l_check_state> PARSER =
        new com.google.protobuf.AbstractParser<packetc2l_check_state>() {
      public packetc2l_check_state parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetc2l_check_state(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetc2l_check_state> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_check_state;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetc2l_check_state}
     *
     * <pre>
     *检测游戏状态		//重连之后判断是否在桌子中
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_stateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_check_state_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_check_state_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_check_state;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_check_state_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state result = new game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_check_state) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_check_state;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_check_state;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetc2l_check_state)
    }

    static {
      defaultInstance = new packetc2l_check_state(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetc2l_check_state)
  }

  public interface packetl2c_check_state_resultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional int32 result = 2 [default = 0];
    /**
     * <code>optional int32 result = 2 [default = 0];</code>
     *
     * <pre>
     * 0:不在,1:在room中,2:在table中
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>optional int32 result = 2 [default = 0];</code>
     *
     * <pre>
     * 0:不在,1:在room中,2:在table中
     * </pre>
     */
    int getResult();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_check_state_result}
   *
   * <pre>
   *检测状态
   * </pre>
   */
  public static final class packetl2c_check_state_result extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_check_state_resultOrBuilder {
    // Use packetl2c_check_state_result.newBuilder() to construct.
    private packetl2c_check_state_result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_check_state_result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_check_state_result defaultInstance;
    public static packetl2c_check_state_result getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_check_state_result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_check_state_result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              result_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_check_state_result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_check_state_result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_check_state_result> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_check_state_result>() {
      public packetl2c_check_state_result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_check_state_result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_check_state_result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional int32 result = 2 [default = 0];
    public static final int RESULT_FIELD_NUMBER = 2;
    private int result_;
    /**
     * <code>optional int32 result = 2 [default = 0];</code>
     *
     * <pre>
     * 0:不在,1:在room中,2:在table中
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 result = 2 [default = 0];</code>
     *
     * <pre>
     * 0:不在,1:在room中,2:在table中
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_check_state_result;
      result_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, result_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, result_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_check_state_result}
     *
     * <pre>
     *检测状态
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_resultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_check_state_result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_check_state_result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_check_state_result;
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_check_state_result_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_check_state_result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_check_state_result;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_check_state_result;
        onChanged();
        return this;
      }

      // optional int32 result = 2 [default = 0];
      private int result_ ;
      /**
       * <code>optional int32 result = 2 [default = 0];</code>
       *
       * <pre>
       * 0:不在,1:在room中,2:在table中
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 result = 2 [default = 0];</code>
       *
       * <pre>
       * 0:不在,1:在room中,2:在table中
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>optional int32 result = 2 [default = 0];</code>
       *
       * <pre>
       * 0:不在,1:在room中,2:在table中
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000002;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 result = 2 [default = 0];</code>
       *
       * <pre>
       * 0:不在,1:在room中,2:在table中
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000002);
        result_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_check_state_result)
    }

    static {
      defaultInstance = new packetl2c_check_state_result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_check_state_result)
  }

  public interface packetc2l_get_scene_infoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetc2l_get_scene_info}
   *
   * <pre>
   *获得房间信息
   * </pre>
   */
  public static final class packetc2l_get_scene_info extends
      com.google.protobuf.GeneratedMessage
      implements packetc2l_get_scene_infoOrBuilder {
    // Use packetc2l_get_scene_info.newBuilder() to construct.
    private packetc2l_get_scene_info(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetc2l_get_scene_info(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetc2l_get_scene_info defaultInstance;
    public static packetc2l_get_scene_info getDefaultInstance() {
      return defaultInstance;
    }

    public packetc2l_get_scene_info getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetc2l_get_scene_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_get_scene_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_get_scene_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info.Builder.class);
    }

    public static com.google.protobuf.Parser<packetc2l_get_scene_info> PARSER =
        new com.google.protobuf.AbstractParser<packetc2l_get_scene_info>() {
      public packetc2l_get_scene_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetc2l_get_scene_info(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetc2l_get_scene_info> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_get_scene_info;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetc2l_get_scene_info}
     *
     * <pre>
     *获得房间信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_get_scene_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_get_scene_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_get_scene_info;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_get_scene_info_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info result = new game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_get_scene_info) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_get_scene_info;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_get_scene_info;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetc2l_get_scene_info)
    }

    static {
      defaultInstance = new packetc2l_get_scene_info(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetc2l_get_scene_info)
  }

  public interface packetl2c_get_scene_info_resultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_scene_info_result];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_scene_info_result];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_scene_info_result];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    msg_type_def.MsgTypeDef.e_msg_result_def getResult();

    // optional .game_guanyuan_protocols.e_game_status_type status = 3;
    /**
     * <code>optional .game_guanyuan_protocols.e_game_status_type status = 3;</code>
     *
     * <pre>
     *当前的房间的状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional .game_guanyuan_protocols.e_game_status_type status = 3;</code>
     *
     * <pre>
     *当前的房间的状态
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.e_game_status_type getStatus();

    // repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
     *
     * <pre>
     *当前玩家的信息
     * </pre>
     */
    java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info> 
        getUserInfosList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
     *
     * <pre>
     *当前玩家的信息
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info getUserInfos(int index);
    /**
     * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
     *
     * <pre>
     *当前玩家的信息
     * </pre>
     */
    int getUserInfosCount();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
     *
     * <pre>
     *当前玩家的信息
     * </pre>
     */
    java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder> 
        getUserInfosOrBuilderList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
     *
     * <pre>
     *当前玩家的信息
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder getUserInfosOrBuilder(
        int index);

    // optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;
    /**
     * <code>optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;</code>
     *
     * <pre>
     *当前房间的基础信息
     * </pre>
     */
    boolean hasBaseRoomRuleInfo();
    /**
     * <code>optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;</code>
     *
     * <pre>
     *当前房间的基础信息
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info getBaseRoomRuleInfo();
    /**
     * <code>optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;</code>
     *
     * <pre>
     *当前房间的基础信息
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_infoOrBuilder getBaseRoomRuleInfoOrBuilder();

    // optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;
    /**
     * <code>optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;</code>
     *
     * <pre>
     *正在游戏时的状态
     * </pre>
     */
    boolean hasGamingInfo();
    /**
     * <code>optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;</code>
     *
     * <pre>
     *正在游戏时的状态
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info getGamingInfo();
    /**
     * <code>optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;</code>
     *
     * <pre>
     *正在游戏时的状态
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_infoOrBuilder getGamingInfoOrBuilder();

    // optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;
    /**
     * <code>optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;</code>
     *
     * <pre>
     *如果有此存在，则表示当前正在处理于解散的请求
     * </pre>
     */
    boolean hasDisRoomInfo();
    /**
     * <code>optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;</code>
     *
     * <pre>
     *如果有此存在，则表示当前正在处理于解散的请求
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info getDisRoomInfo();
    /**
     * <code>optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;</code>
     *
     * <pre>
     *如果有此存在，则表示当前正在处理于解散的请求
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_infoOrBuilder getDisRoomInfoOrBuilder();

    // optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;
    /**
     * <code>optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;</code>
     *
     * <pre>
     *一局结束时的状态信息
     * </pre>
     */
    boolean hasCircleOverInfo();
    /**
     * <code>optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;</code>
     *
     * <pre>
     *一局结束时的状态信息
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info getCircleOverInfo();
    /**
     * <code>optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;</code>
     *
     * <pre>
     *一局结束时的状态信息
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_infoOrBuilder getCircleOverInfoOrBuilder();

    // optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;
    /**
     * <code>optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;</code>
     *
     * <pre>
     *游戏全部结束时的状态信息
     * </pre>
     */
    boolean hasGameOverInfo();
    /**
     * <code>optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;</code>
     *
     * <pre>
     *游戏全部结束时的状态信息
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info getGameOverInfo();
    /**
     * <code>optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;</code>
     *
     * <pre>
     *游戏全部结束时的状态信息
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_infoOrBuilder getGameOverInfoOrBuilder();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_get_scene_info_result}
   *
   * <pre>
   *房间信息返回
   * </pre>
   */
  public static final class packetl2c_get_scene_info_result extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_get_scene_info_resultOrBuilder {
    // Use packetl2c_get_scene_info_result.newBuilder() to construct.
    private packetl2c_get_scene_info_result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_get_scene_info_result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_get_scene_info_result defaultInstance;
    public static packetl2c_get_scene_info_result getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_get_scene_info_result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_get_scene_info_result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              msg_type_def.MsgTypeDef.e_msg_result_def value = msg_type_def.MsgTypeDef.e_msg_result_def.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                result_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyunProtocol.e_game_status_type value = game_guanyuan_protocols.GameGuanyunProtocol.e_game_status_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                status_ = value;
              }
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                userInfos_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info>();
                mutable_bitField0_ |= 0x00000008;
              }
              userInfos_.add(input.readMessage(game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = baseRoomRuleInfo_.toBuilder();
              }
              baseRoomRuleInfo_ = input.readMessage(game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseRoomRuleInfo_);
                baseRoomRuleInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 50: {
              game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = gamingInfo_.toBuilder();
              }
              gamingInfo_ = input.readMessage(game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gamingInfo_);
                gamingInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 58: {
              game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = disRoomInfo_.toBuilder();
              }
              disRoomInfo_ = input.readMessage(game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(disRoomInfo_);
                disRoomInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 66: {
              game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = circleOverInfo_.toBuilder();
              }
              circleOverInfo_ = input.readMessage(game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(circleOverInfo_);
                circleOverInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 74: {
              game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = gameOverInfo_.toBuilder();
              }
              gameOverInfo_ = input.readMessage(game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gameOverInfo_);
                gameOverInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          userInfos_ = java.util.Collections.unmodifiableList(userInfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_get_scene_info_result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_get_scene_info_result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_get_scene_info_result> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_get_scene_info_result>() {
      public packetl2c_get_scene_info_result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_get_scene_info_result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_get_scene_info_result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_scene_info_result];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_scene_info_result];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_scene_info_result];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
    public static final int RESULT_FIELD_NUMBER = 2;
    private msg_type_def.MsgTypeDef.e_msg_result_def result_;
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    public msg_type_def.MsgTypeDef.e_msg_result_def getResult() {
      return result_;
    }

    // optional .game_guanyuan_protocols.e_game_status_type status = 3;
    public static final int STATUS_FIELD_NUMBER = 3;
    private game_guanyuan_protocols.GameGuanyunProtocol.e_game_status_type status_;
    /**
     * <code>optional .game_guanyuan_protocols.e_game_status_type status = 3;</code>
     *
     * <pre>
     *当前的房间的状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_game_status_type status = 3;</code>
     *
     * <pre>
     *当前的房间的状态
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.e_game_status_type getStatus() {
      return status_;
    }

    // repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;
    public static final int USER_INFOS_FIELD_NUMBER = 4;
    private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info> userInfos_;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
     *
     * <pre>
     *当前玩家的信息
     * </pre>
     */
    public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info> getUserInfosList() {
      return userInfos_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
     *
     * <pre>
     *当前玩家的信息
     * </pre>
     */
    public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder> 
        getUserInfosOrBuilderList() {
      return userInfos_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
     *
     * <pre>
     *当前玩家的信息
     * </pre>
     */
    public int getUserInfosCount() {
      return userInfos_.size();
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
     *
     * <pre>
     *当前玩家的信息
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info getUserInfos(int index) {
      return userInfos_.get(index);
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
     *
     * <pre>
     *当前玩家的信息
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder getUserInfosOrBuilder(
        int index) {
      return userInfos_.get(index);
    }

    // optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;
    public static final int BASE_ROOM_RULE_INFO_FIELD_NUMBER = 5;
    private game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info baseRoomRuleInfo_;
    /**
     * <code>optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;</code>
     *
     * <pre>
     *当前房间的基础信息
     * </pre>
     */
    public boolean hasBaseRoomRuleInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;</code>
     *
     * <pre>
     *当前房间的基础信息
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info getBaseRoomRuleInfo() {
      return baseRoomRuleInfo_;
    }
    /**
     * <code>optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;</code>
     *
     * <pre>
     *当前房间的基础信息
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_infoOrBuilder getBaseRoomRuleInfoOrBuilder() {
      return baseRoomRuleInfo_;
    }

    // optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;
    public static final int GAMING_INFO_FIELD_NUMBER = 6;
    private game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info gamingInfo_;
    /**
     * <code>optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;</code>
     *
     * <pre>
     *正在游戏时的状态
     * </pre>
     */
    public boolean hasGamingInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;</code>
     *
     * <pre>
     *正在游戏时的状态
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info getGamingInfo() {
      return gamingInfo_;
    }
    /**
     * <code>optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;</code>
     *
     * <pre>
     *正在游戏时的状态
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_infoOrBuilder getGamingInfoOrBuilder() {
      return gamingInfo_;
    }

    // optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;
    public static final int DIS_ROOM_INFO_FIELD_NUMBER = 7;
    private game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info disRoomInfo_;
    /**
     * <code>optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;</code>
     *
     * <pre>
     *如果有此存在，则表示当前正在处理于解散的请求
     * </pre>
     */
    public boolean hasDisRoomInfo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;</code>
     *
     * <pre>
     *如果有此存在，则表示当前正在处理于解散的请求
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info getDisRoomInfo() {
      return disRoomInfo_;
    }
    /**
     * <code>optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;</code>
     *
     * <pre>
     *如果有此存在，则表示当前正在处理于解散的请求
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_infoOrBuilder getDisRoomInfoOrBuilder() {
      return disRoomInfo_;
    }

    // optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;
    public static final int CIRCLE_OVER_INFO_FIELD_NUMBER = 8;
    private game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info circleOverInfo_;
    /**
     * <code>optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;</code>
     *
     * <pre>
     *一局结束时的状态信息
     * </pre>
     */
    public boolean hasCircleOverInfo() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;</code>
     *
     * <pre>
     *一局结束时的状态信息
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info getCircleOverInfo() {
      return circleOverInfo_;
    }
    /**
     * <code>optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;</code>
     *
     * <pre>
     *一局结束时的状态信息
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_infoOrBuilder getCircleOverInfoOrBuilder() {
      return circleOverInfo_;
    }

    // optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;
    public static final int GAME_OVER_INFO_FIELD_NUMBER = 9;
    private game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info gameOverInfo_;
    /**
     * <code>optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;</code>
     *
     * <pre>
     *游戏全部结束时的状态信息
     * </pre>
     */
    public boolean hasGameOverInfo() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;</code>
     *
     * <pre>
     *游戏全部结束时的状态信息
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info getGameOverInfo() {
      return gameOverInfo_;
    }
    /**
     * <code>optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;</code>
     *
     * <pre>
     *游戏全部结束时的状态信息
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_infoOrBuilder getGameOverInfoOrBuilder() {
      return gameOverInfo_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_get_scene_info_result;
      result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
      status_ = game_guanyuan_protocols.GameGuanyunProtocol.e_game_status_type.e_game_waiting;
      userInfos_ = java.util.Collections.emptyList();
      baseRoomRuleInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.getDefaultInstance();
      gamingInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.getDefaultInstance();
      disRoomInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.getDefaultInstance();
      circleOverInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.getDefaultInstance();
      gameOverInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, result_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, status_.getNumber());
      }
      for (int i = 0; i < userInfos_.size(); i++) {
        output.writeMessage(4, userInfos_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, baseRoomRuleInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(6, gamingInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, disRoomInfo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(8, circleOverInfo_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(9, gameOverInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, result_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, status_.getNumber());
      }
      for (int i = 0; i < userInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, userInfos_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, baseRoomRuleInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, gamingInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, disRoomInfo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, circleOverInfo_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, gameOverInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_get_scene_info_result}
     *
     * <pre>
     *房间信息返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_resultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_get_scene_info_result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_get_scene_info_result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUserInfosFieldBuilder();
          getBaseRoomRuleInfoFieldBuilder();
          getGamingInfoFieldBuilder();
          getDisRoomInfoFieldBuilder();
          getCircleOverInfoFieldBuilder();
          getGameOverInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_get_scene_info_result;
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = game_guanyuan_protocols.GameGuanyunProtocol.e_game_status_type.e_game_waiting;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (userInfosBuilder_ == null) {
          userInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          userInfosBuilder_.clear();
        }
        if (baseRoomRuleInfoBuilder_ == null) {
          baseRoomRuleInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.getDefaultInstance();
        } else {
          baseRoomRuleInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (gamingInfoBuilder_ == null) {
          gamingInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.getDefaultInstance();
        } else {
          gamingInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (disRoomInfoBuilder_ == null) {
          disRoomInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.getDefaultInstance();
        } else {
          disRoomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (circleOverInfoBuilder_ == null) {
          circleOverInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.getDefaultInstance();
        } else {
          circleOverInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (gameOverInfoBuilder_ == null) {
          gameOverInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.getDefaultInstance();
        } else {
          gameOverInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_get_scene_info_result_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.status_ = status_;
        if (userInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            userInfos_ = java.util.Collections.unmodifiableList(userInfos_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.userInfos_ = userInfos_;
        } else {
          result.userInfos_ = userInfosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        if (baseRoomRuleInfoBuilder_ == null) {
          result.baseRoomRuleInfo_ = baseRoomRuleInfo_;
        } else {
          result.baseRoomRuleInfo_ = baseRoomRuleInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        if (gamingInfoBuilder_ == null) {
          result.gamingInfo_ = gamingInfo_;
        } else {
          result.gamingInfo_ = gamingInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        if (disRoomInfoBuilder_ == null) {
          result.disRoomInfo_ = disRoomInfo_;
        } else {
          result.disRoomInfo_ = disRoomInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        if (circleOverInfoBuilder_ == null) {
          result.circleOverInfo_ = circleOverInfo_;
        } else {
          result.circleOverInfo_ = circleOverInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        if (gameOverInfoBuilder_ == null) {
          result.gameOverInfo_ = gameOverInfo_;
        } else {
          result.gameOverInfo_ = gameOverInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (userInfosBuilder_ == null) {
          if (!other.userInfos_.isEmpty()) {
            if (userInfos_.isEmpty()) {
              userInfos_ = other.userInfos_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureUserInfosIsMutable();
              userInfos_.addAll(other.userInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.userInfos_.isEmpty()) {
            if (userInfosBuilder_.isEmpty()) {
              userInfosBuilder_.dispose();
              userInfosBuilder_ = null;
              userInfos_ = other.userInfos_;
              bitField0_ = (bitField0_ & ~0x00000008);
              userInfosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getUserInfosFieldBuilder() : null;
            } else {
              userInfosBuilder_.addAllMessages(other.userInfos_);
            }
          }
        }
        if (other.hasBaseRoomRuleInfo()) {
          mergeBaseRoomRuleInfo(other.getBaseRoomRuleInfo());
        }
        if (other.hasGamingInfo()) {
          mergeGamingInfo(other.getGamingInfo());
        }
        if (other.hasDisRoomInfo()) {
          mergeDisRoomInfo(other.getDisRoomInfo());
        }
        if (other.hasCircleOverInfo()) {
          mergeCircleOverInfo(other.getCircleOverInfo());
        }
        if (other.hasGameOverInfo()) {
          mergeGameOverInfo(other.getGameOverInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_get_scene_info_result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_scene_info_result];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_get_scene_info_result;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_scene_info_result];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_scene_info_result];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_scene_info_result];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_scene_info_result];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_get_scene_info_result;
        onChanged();
        return this;
      }

      // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
      private msg_type_def.MsgTypeDef.e_msg_result_def result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public msg_type_def.MsgTypeDef.e_msg_result_def getResult() {
        return result_;
      }
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public Builder setResult(msg_type_def.MsgTypeDef.e_msg_result_def value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000002);
        result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
        onChanged();
        return this;
      }

      // optional .game_guanyuan_protocols.e_game_status_type status = 3;
      private game_guanyuan_protocols.GameGuanyunProtocol.e_game_status_type status_ = game_guanyuan_protocols.GameGuanyunProtocol.e_game_status_type.e_game_waiting;
      /**
       * <code>optional .game_guanyuan_protocols.e_game_status_type status = 3;</code>
       *
       * <pre>
       *当前的房间的状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_game_status_type status = 3;</code>
       *
       * <pre>
       *当前的房间的状态
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.e_game_status_type getStatus() {
        return status_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_game_status_type status = 3;</code>
       *
       * <pre>
       *当前的房间的状态
       * </pre>
       */
      public Builder setStatus(game_guanyuan_protocols.GameGuanyunProtocol.e_game_status_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_game_status_type status = 3;</code>
       *
       * <pre>
       *当前的房间的状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = game_guanyuan_protocols.GameGuanyunProtocol.e_game_status_type.e_game_waiting;
        onChanged();
        return this;
      }

      // repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;
      private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info> userInfos_ =
        java.util.Collections.emptyList();
      private void ensureUserInfosIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          userInfos_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info>(userInfos_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder> userInfosBuilder_;

      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info> getUserInfosList() {
        if (userInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(userInfos_);
        } else {
          return userInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public int getUserInfosCount() {
        if (userInfosBuilder_ == null) {
          return userInfos_.size();
        } else {
          return userInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info getUserInfos(int index) {
        if (userInfosBuilder_ == null) {
          return userInfos_.get(index);
        } else {
          return userInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public Builder setUserInfos(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info value) {
        if (userInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUserInfosIsMutable();
          userInfos_.set(index, value);
          onChanged();
        } else {
          userInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public Builder setUserInfos(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder builderForValue) {
        if (userInfosBuilder_ == null) {
          ensureUserInfosIsMutable();
          userInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          userInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public Builder addUserInfos(game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info value) {
        if (userInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUserInfosIsMutable();
          userInfos_.add(value);
          onChanged();
        } else {
          userInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public Builder addUserInfos(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info value) {
        if (userInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUserInfosIsMutable();
          userInfos_.add(index, value);
          onChanged();
        } else {
          userInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public Builder addUserInfos(
          game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder builderForValue) {
        if (userInfosBuilder_ == null) {
          ensureUserInfosIsMutable();
          userInfos_.add(builderForValue.build());
          onChanged();
        } else {
          userInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public Builder addUserInfos(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder builderForValue) {
        if (userInfosBuilder_ == null) {
          ensureUserInfosIsMutable();
          userInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          userInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public Builder addAllUserInfos(
          java.lang.Iterable<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info> values) {
        if (userInfosBuilder_ == null) {
          ensureUserInfosIsMutable();
          super.addAll(values, userInfos_);
          onChanged();
        } else {
          userInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public Builder clearUserInfos() {
        if (userInfosBuilder_ == null) {
          userInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          userInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public Builder removeUserInfos(int index) {
        if (userInfosBuilder_ == null) {
          ensureUserInfosIsMutable();
          userInfos_.remove(index);
          onChanged();
        } else {
          userInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder getUserInfosBuilder(
          int index) {
        return getUserInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder getUserInfosOrBuilder(
          int index) {
        if (userInfosBuilder_ == null) {
          return userInfos_.get(index);  } else {
          return userInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder> 
           getUserInfosOrBuilderList() {
        if (userInfosBuilder_ != null) {
          return userInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(userInfos_);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder addUserInfosBuilder() {
        return getUserInfosFieldBuilder().addBuilder(
            game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder addUserInfosBuilder(
          int index) {
        return getUserInfosFieldBuilder().addBuilder(
            index, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_user_info user_infos = 4;</code>
       *
       * <pre>
       *当前玩家的信息
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder> 
           getUserInfosBuilderList() {
        return getUserInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder> 
          getUserInfosFieldBuilder() {
        if (userInfosBuilder_ == null) {
          userInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder>(
                  userInfos_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          userInfos_ = null;
        }
        return userInfosBuilder_;
      }

      // optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;
      private game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info baseRoomRuleInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_infoOrBuilder> baseRoomRuleInfoBuilder_;
      /**
       * <code>optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;</code>
       *
       * <pre>
       *当前房间的基础信息
       * </pre>
       */
      public boolean hasBaseRoomRuleInfo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;</code>
       *
       * <pre>
       *当前房间的基础信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info getBaseRoomRuleInfo() {
        if (baseRoomRuleInfoBuilder_ == null) {
          return baseRoomRuleInfo_;
        } else {
          return baseRoomRuleInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;</code>
       *
       * <pre>
       *当前房间的基础信息
       * </pre>
       */
      public Builder setBaseRoomRuleInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info value) {
        if (baseRoomRuleInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseRoomRuleInfo_ = value;
          onChanged();
        } else {
          baseRoomRuleInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;</code>
       *
       * <pre>
       *当前房间的基础信息
       * </pre>
       */
      public Builder setBaseRoomRuleInfo(
          game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.Builder builderForValue) {
        if (baseRoomRuleInfoBuilder_ == null) {
          baseRoomRuleInfo_ = builderForValue.build();
          onChanged();
        } else {
          baseRoomRuleInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;</code>
       *
       * <pre>
       *当前房间的基础信息
       * </pre>
       */
      public Builder mergeBaseRoomRuleInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info value) {
        if (baseRoomRuleInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              baseRoomRuleInfo_ != game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.getDefaultInstance()) {
            baseRoomRuleInfo_ =
              game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.newBuilder(baseRoomRuleInfo_).mergeFrom(value).buildPartial();
          } else {
            baseRoomRuleInfo_ = value;
          }
          onChanged();
        } else {
          baseRoomRuleInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;</code>
       *
       * <pre>
       *当前房间的基础信息
       * </pre>
       */
      public Builder clearBaseRoomRuleInfo() {
        if (baseRoomRuleInfoBuilder_ == null) {
          baseRoomRuleInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.getDefaultInstance();
          onChanged();
        } else {
          baseRoomRuleInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;</code>
       *
       * <pre>
       *当前房间的基础信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.Builder getBaseRoomRuleInfoBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getBaseRoomRuleInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;</code>
       *
       * <pre>
       *当前房间的基础信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_infoOrBuilder getBaseRoomRuleInfoOrBuilder() {
        if (baseRoomRuleInfoBuilder_ != null) {
          return baseRoomRuleInfoBuilder_.getMessageOrBuilder();
        } else {
          return baseRoomRuleInfo_;
        }
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_base_room_rule_info base_room_rule_info = 5;</code>
       *
       * <pre>
       *当前房间的基础信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_infoOrBuilder> 
          getBaseRoomRuleInfoFieldBuilder() {
        if (baseRoomRuleInfoBuilder_ == null) {
          baseRoomRuleInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_infoOrBuilder>(
                  baseRoomRuleInfo_,
                  getParentForChildren(),
                  isClean());
          baseRoomRuleInfo_ = null;
        }
        return baseRoomRuleInfoBuilder_;
      }

      // optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;
      private game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info gamingInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_infoOrBuilder> gamingInfoBuilder_;
      /**
       * <code>optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;</code>
       *
       * <pre>
       *正在游戏时的状态
       * </pre>
       */
      public boolean hasGamingInfo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;</code>
       *
       * <pre>
       *正在游戏时的状态
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info getGamingInfo() {
        if (gamingInfoBuilder_ == null) {
          return gamingInfo_;
        } else {
          return gamingInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;</code>
       *
       * <pre>
       *正在游戏时的状态
       * </pre>
       */
      public Builder setGamingInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info value) {
        if (gamingInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gamingInfo_ = value;
          onChanged();
        } else {
          gamingInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;</code>
       *
       * <pre>
       *正在游戏时的状态
       * </pre>
       */
      public Builder setGamingInfo(
          game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.Builder builderForValue) {
        if (gamingInfoBuilder_ == null) {
          gamingInfo_ = builderForValue.build();
          onChanged();
        } else {
          gamingInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;</code>
       *
       * <pre>
       *正在游戏时的状态
       * </pre>
       */
      public Builder mergeGamingInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info value) {
        if (gamingInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              gamingInfo_ != game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.getDefaultInstance()) {
            gamingInfo_ =
              game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.newBuilder(gamingInfo_).mergeFrom(value).buildPartial();
          } else {
            gamingInfo_ = value;
          }
          onChanged();
        } else {
          gamingInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;</code>
       *
       * <pre>
       *正在游戏时的状态
       * </pre>
       */
      public Builder clearGamingInfo() {
        if (gamingInfoBuilder_ == null) {
          gamingInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.getDefaultInstance();
          onChanged();
        } else {
          gamingInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;</code>
       *
       * <pre>
       *正在游戏时的状态
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.Builder getGamingInfoBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getGamingInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;</code>
       *
       * <pre>
       *正在游戏时的状态
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_infoOrBuilder getGamingInfoOrBuilder() {
        if (gamingInfoBuilder_ != null) {
          return gamingInfoBuilder_.getMessageOrBuilder();
        } else {
          return gamingInfo_;
        }
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_status_gaming_info gaming_info = 6;</code>
       *
       * <pre>
       *正在游戏时的状态
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_infoOrBuilder> 
          getGamingInfoFieldBuilder() {
        if (gamingInfoBuilder_ == null) {
          gamingInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_infoOrBuilder>(
                  gamingInfo_,
                  getParentForChildren(),
                  isClean());
          gamingInfo_ = null;
        }
        return gamingInfoBuilder_;
      }

      // optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;
      private game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info disRoomInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_infoOrBuilder> disRoomInfoBuilder_;
      /**
       * <code>optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;</code>
       *
       * <pre>
       *如果有此存在，则表示当前正在处理于解散的请求
       * </pre>
       */
      public boolean hasDisRoomInfo() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;</code>
       *
       * <pre>
       *如果有此存在，则表示当前正在处理于解散的请求
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info getDisRoomInfo() {
        if (disRoomInfoBuilder_ == null) {
          return disRoomInfo_;
        } else {
          return disRoomInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;</code>
       *
       * <pre>
       *如果有此存在，则表示当前正在处理于解散的请求
       * </pre>
       */
      public Builder setDisRoomInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info value) {
        if (disRoomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          disRoomInfo_ = value;
          onChanged();
        } else {
          disRoomInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;</code>
       *
       * <pre>
       *如果有此存在，则表示当前正在处理于解散的请求
       * </pre>
       */
      public Builder setDisRoomInfo(
          game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.Builder builderForValue) {
        if (disRoomInfoBuilder_ == null) {
          disRoomInfo_ = builderForValue.build();
          onChanged();
        } else {
          disRoomInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;</code>
       *
       * <pre>
       *如果有此存在，则表示当前正在处理于解散的请求
       * </pre>
       */
      public Builder mergeDisRoomInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info value) {
        if (disRoomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              disRoomInfo_ != game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.getDefaultInstance()) {
            disRoomInfo_ =
              game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.newBuilder(disRoomInfo_).mergeFrom(value).buildPartial();
          } else {
            disRoomInfo_ = value;
          }
          onChanged();
        } else {
          disRoomInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;</code>
       *
       * <pre>
       *如果有此存在，则表示当前正在处理于解散的请求
       * </pre>
       */
      public Builder clearDisRoomInfo() {
        if (disRoomInfoBuilder_ == null) {
          disRoomInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.getDefaultInstance();
          onChanged();
        } else {
          disRoomInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;</code>
       *
       * <pre>
       *如果有此存在，则表示当前正在处理于解散的请求
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.Builder getDisRoomInfoBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getDisRoomInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;</code>
       *
       * <pre>
       *如果有此存在，则表示当前正在处理于解散的请求
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_infoOrBuilder getDisRoomInfoOrBuilder() {
        if (disRoomInfoBuilder_ != null) {
          return disRoomInfoBuilder_.getMessageOrBuilder();
        } else {
          return disRoomInfo_;
        }
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_dis_room_info dis_room_info = 7;</code>
       *
       * <pre>
       *如果有此存在，则表示当前正在处理于解散的请求
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_infoOrBuilder> 
          getDisRoomInfoFieldBuilder() {
        if (disRoomInfoBuilder_ == null) {
          disRoomInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_infoOrBuilder>(
                  disRoomInfo_,
                  getParentForChildren(),
                  isClean());
          disRoomInfo_ = null;
        }
        return disRoomInfoBuilder_;
      }

      // optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;
      private game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info circleOverInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_infoOrBuilder> circleOverInfoBuilder_;
      /**
       * <code>optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;</code>
       *
       * <pre>
       *一局结束时的状态信息
       * </pre>
       */
      public boolean hasCircleOverInfo() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;</code>
       *
       * <pre>
       *一局结束时的状态信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info getCircleOverInfo() {
        if (circleOverInfoBuilder_ == null) {
          return circleOverInfo_;
        } else {
          return circleOverInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;</code>
       *
       * <pre>
       *一局结束时的状态信息
       * </pre>
       */
      public Builder setCircleOverInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info value) {
        if (circleOverInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          circleOverInfo_ = value;
          onChanged();
        } else {
          circleOverInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;</code>
       *
       * <pre>
       *一局结束时的状态信息
       * </pre>
       */
      public Builder setCircleOverInfo(
          game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.Builder builderForValue) {
        if (circleOverInfoBuilder_ == null) {
          circleOverInfo_ = builderForValue.build();
          onChanged();
        } else {
          circleOverInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;</code>
       *
       * <pre>
       *一局结束时的状态信息
       * </pre>
       */
      public Builder mergeCircleOverInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info value) {
        if (circleOverInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              circleOverInfo_ != game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.getDefaultInstance()) {
            circleOverInfo_ =
              game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.newBuilder(circleOverInfo_).mergeFrom(value).buildPartial();
          } else {
            circleOverInfo_ = value;
          }
          onChanged();
        } else {
          circleOverInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;</code>
       *
       * <pre>
       *一局结束时的状态信息
       * </pre>
       */
      public Builder clearCircleOverInfo() {
        if (circleOverInfoBuilder_ == null) {
          circleOverInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.getDefaultInstance();
          onChanged();
        } else {
          circleOverInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;</code>
       *
       * <pre>
       *一局结束时的状态信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.Builder getCircleOverInfoBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getCircleOverInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;</code>
       *
       * <pre>
       *一局结束时的状态信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_infoOrBuilder getCircleOverInfoOrBuilder() {
        if (circleOverInfoBuilder_ != null) {
          return circleOverInfoBuilder_.getMessageOrBuilder();
        } else {
          return circleOverInfo_;
        }
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_circle_over_info circle_over_info = 8;</code>
       *
       * <pre>
       *一局结束时的状态信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_infoOrBuilder> 
          getCircleOverInfoFieldBuilder() {
        if (circleOverInfoBuilder_ == null) {
          circleOverInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_infoOrBuilder>(
                  circleOverInfo_,
                  getParentForChildren(),
                  isClean());
          circleOverInfo_ = null;
        }
        return circleOverInfoBuilder_;
      }

      // optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;
      private game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info gameOverInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_infoOrBuilder> gameOverInfoBuilder_;
      /**
       * <code>optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;</code>
       *
       * <pre>
       *游戏全部结束时的状态信息
       * </pre>
       */
      public boolean hasGameOverInfo() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;</code>
       *
       * <pre>
       *游戏全部结束时的状态信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info getGameOverInfo() {
        if (gameOverInfoBuilder_ == null) {
          return gameOverInfo_;
        } else {
          return gameOverInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;</code>
       *
       * <pre>
       *游戏全部结束时的状态信息
       * </pre>
       */
      public Builder setGameOverInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info value) {
        if (gameOverInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gameOverInfo_ = value;
          onChanged();
        } else {
          gameOverInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;</code>
       *
       * <pre>
       *游戏全部结束时的状态信息
       * </pre>
       */
      public Builder setGameOverInfo(
          game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.Builder builderForValue) {
        if (gameOverInfoBuilder_ == null) {
          gameOverInfo_ = builderForValue.build();
          onChanged();
        } else {
          gameOverInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;</code>
       *
       * <pre>
       *游戏全部结束时的状态信息
       * </pre>
       */
      public Builder mergeGameOverInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info value) {
        if (gameOverInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              gameOverInfo_ != game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.getDefaultInstance()) {
            gameOverInfo_ =
              game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.newBuilder(gameOverInfo_).mergeFrom(value).buildPartial();
          } else {
            gameOverInfo_ = value;
          }
          onChanged();
        } else {
          gameOverInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;</code>
       *
       * <pre>
       *游戏全部结束时的状态信息
       * </pre>
       */
      public Builder clearGameOverInfo() {
        if (gameOverInfoBuilder_ == null) {
          gameOverInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.getDefaultInstance();
          onChanged();
        } else {
          gameOverInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;</code>
       *
       * <pre>
       *游戏全部结束时的状态信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.Builder getGameOverInfoBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getGameOverInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;</code>
       *
       * <pre>
       *游戏全部结束时的状态信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_infoOrBuilder getGameOverInfoOrBuilder() {
        if (gameOverInfoBuilder_ != null) {
          return gameOverInfoBuilder_.getMessageOrBuilder();
        } else {
          return gameOverInfo_;
        }
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_game_over_info game_over_info = 9;</code>
       *
       * <pre>
       *游戏全部结束时的状态信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_infoOrBuilder> 
          getGameOverInfoFieldBuilder() {
        if (gameOverInfoBuilder_ == null) {
          gameOverInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_infoOrBuilder>(
                  gameOverInfo_,
                  getParentForChildren(),
                  isClean());
          gameOverInfo_ = null;
        }
        return gameOverInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_get_scene_info_result)
    }

    static {
      defaultInstance = new packetl2c_get_scene_info_result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_get_scene_info_result)
  }

  public interface msg_base_room_rule_infoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 circle_count = 1;
    /**
     * <code>optional int32 circle_count = 1;</code>
     *
     * <pre>
     *局数
     * </pre>
     */
    boolean hasCircleCount();
    /**
     * <code>optional int32 circle_count = 1;</code>
     *
     * <pre>
     *局数
     * </pre>
     */
    int getCircleCount();

    // optional int32 card_cost = 2;
    /**
     * <code>optional int32 card_cost = 2;</code>
     *
     * <pre>
     *房卡消耗数量
     * </pre>
     */
    boolean hasCardCost();
    /**
     * <code>optional int32 card_cost = 2;</code>
     *
     * <pre>
     *房卡消耗数量
     * </pre>
     */
    int getCardCost();

    // optional int32 cost_type = 3;
    /**
     * <code>optional int32 cost_type = 3;</code>
     *
     * <pre>
     *1-创建者扣门卡,2-AA制
     * </pre>
     */
    boolean hasCostType();
    /**
     * <code>optional int32 cost_type = 3;</code>
     *
     * <pre>
     *1-创建者扣门卡,2-AA制
     * </pre>
     */
    int getCostType();

    // optional int32 base_score = 4;
    /**
     * <code>optional int32 base_score = 4;</code>
     *
     * <pre>
     *底分，默认为1
     * </pre>
     */
    boolean hasBaseScore();
    /**
     * <code>optional int32 base_score = 4;</code>
     *
     * <pre>
     *底分，默认为1
     * </pre>
     */
    int getBaseScore();

    // optional int32 hua_type = 5;
    /**
     * <code>optional int32 hua_type = 5;</code>
     *
     * <pre>
     *0:四花,	1:20花	2:28花
     * </pre>
     */
    boolean hasHuaType();
    /**
     * <code>optional int32 hua_type = 5;</code>
     *
     * <pre>
     *0:四花,	1:20花	2:28花
     * </pre>
     */
    int getHuaType();

    // optional int32 bao_type = 6;
    /**
     * <code>optional int32 bao_type = 6;</code>
     *
     * <pre>
     * 0:1包1     1：一包三
     * </pre>
     */
    boolean hasBaoType();
    /**
     * <code>optional int32 bao_type = 6;</code>
     *
     * <pre>
     * 0:1包1     1：一包三
     * </pre>
     */
    int getBaoType();

    // optional int32 hu_type = 7;
    /**
     * <code>optional int32 hu_type = 7;</code>
     *
     * <pre>
     *0:截胡  1：一炮多胡
     * </pre>
     */
    boolean hasHuType();
    /**
     * <code>optional int32 hu_type = 7;</code>
     *
     * <pre>
     *0:截胡  1：一炮多胡
     * </pre>
     */
    int getHuType();

    // optional uint32 room_id = 8;
    /**
     * <code>optional uint32 room_id = 8;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    boolean hasRoomId();
    /**
     * <code>optional uint32 room_id = 8;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    int getRoomId();

    // optional uint64 creator_id = 9;
    /**
     * <code>optional uint64 creator_id = 9;</code>
     *
     * <pre>
     *房间创建者	
     * </pre>
     */
    boolean hasCreatorId();
    /**
     * <code>optional uint64 creator_id = 9;</code>
     *
     * <pre>
     *房间创建者	
     * </pre>
     */
    long getCreatorId();

    // optional int64 create_time = 10;
    /**
     * <code>optional int64 create_time = 10;</code>
     */
    boolean hasCreateTime();
    /**
     * <code>optional int64 create_time = 10;</code>
     */
    long getCreateTime();

    // optional int32 baseHua = 11;
    /**
     * <code>optional int32 baseHua = 11;</code>
     *
     * <pre>
     *底花值
     * </pre>
     */
    boolean hasBaseHua();
    /**
     * <code>optional int32 baseHua = 11;</code>
     *
     * <pre>
     *底花值
     * </pre>
     */
    int getBaseHua();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.msg_base_room_rule_info}
   *
   * <pre>
   *房间的规则信息
   * </pre>
   */
  public static final class msg_base_room_rule_info extends
      com.google.protobuf.GeneratedMessage
      implements msg_base_room_rule_infoOrBuilder {
    // Use msg_base_room_rule_info.newBuilder() to construct.
    private msg_base_room_rule_info(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private msg_base_room_rule_info(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final msg_base_room_rule_info defaultInstance;
    public static msg_base_room_rule_info getDefaultInstance() {
      return defaultInstance;
    }

    public msg_base_room_rule_info getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private msg_base_room_rule_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              circleCount_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cardCost_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              costType_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              baseScore_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              huaType_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              baoType_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              huType_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              roomId_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              creatorId_ = input.readUInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              createTime_ = input.readInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              baseHua_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_base_room_rule_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_base_room_rule_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.Builder.class);
    }

    public static com.google.protobuf.Parser<msg_base_room_rule_info> PARSER =
        new com.google.protobuf.AbstractParser<msg_base_room_rule_info>() {
      public msg_base_room_rule_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new msg_base_room_rule_info(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<msg_base_room_rule_info> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 circle_count = 1;
    public static final int CIRCLE_COUNT_FIELD_NUMBER = 1;
    private int circleCount_;
    /**
     * <code>optional int32 circle_count = 1;</code>
     *
     * <pre>
     *局数
     * </pre>
     */
    public boolean hasCircleCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 circle_count = 1;</code>
     *
     * <pre>
     *局数
     * </pre>
     */
    public int getCircleCount() {
      return circleCount_;
    }

    // optional int32 card_cost = 2;
    public static final int CARD_COST_FIELD_NUMBER = 2;
    private int cardCost_;
    /**
     * <code>optional int32 card_cost = 2;</code>
     *
     * <pre>
     *房卡消耗数量
     * </pre>
     */
    public boolean hasCardCost() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 card_cost = 2;</code>
     *
     * <pre>
     *房卡消耗数量
     * </pre>
     */
    public int getCardCost() {
      return cardCost_;
    }

    // optional int32 cost_type = 3;
    public static final int COST_TYPE_FIELD_NUMBER = 3;
    private int costType_;
    /**
     * <code>optional int32 cost_type = 3;</code>
     *
     * <pre>
     *1-创建者扣门卡,2-AA制
     * </pre>
     */
    public boolean hasCostType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 cost_type = 3;</code>
     *
     * <pre>
     *1-创建者扣门卡,2-AA制
     * </pre>
     */
    public int getCostType() {
      return costType_;
    }

    // optional int32 base_score = 4;
    public static final int BASE_SCORE_FIELD_NUMBER = 4;
    private int baseScore_;
    /**
     * <code>optional int32 base_score = 4;</code>
     *
     * <pre>
     *底分，默认为1
     * </pre>
     */
    public boolean hasBaseScore() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 base_score = 4;</code>
     *
     * <pre>
     *底分，默认为1
     * </pre>
     */
    public int getBaseScore() {
      return baseScore_;
    }

    // optional int32 hua_type = 5;
    public static final int HUA_TYPE_FIELD_NUMBER = 5;
    private int huaType_;
    /**
     * <code>optional int32 hua_type = 5;</code>
     *
     * <pre>
     *0:四花,	1:20花	2:28花
     * </pre>
     */
    public boolean hasHuaType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 hua_type = 5;</code>
     *
     * <pre>
     *0:四花,	1:20花	2:28花
     * </pre>
     */
    public int getHuaType() {
      return huaType_;
    }

    // optional int32 bao_type = 6;
    public static final int BAO_TYPE_FIELD_NUMBER = 6;
    private int baoType_;
    /**
     * <code>optional int32 bao_type = 6;</code>
     *
     * <pre>
     * 0:1包1     1：一包三
     * </pre>
     */
    public boolean hasBaoType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 bao_type = 6;</code>
     *
     * <pre>
     * 0:1包1     1：一包三
     * </pre>
     */
    public int getBaoType() {
      return baoType_;
    }

    // optional int32 hu_type = 7;
    public static final int HU_TYPE_FIELD_NUMBER = 7;
    private int huType_;
    /**
     * <code>optional int32 hu_type = 7;</code>
     *
     * <pre>
     *0:截胡  1：一炮多胡
     * </pre>
     */
    public boolean hasHuType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 hu_type = 7;</code>
     *
     * <pre>
     *0:截胡  1：一炮多胡
     * </pre>
     */
    public int getHuType() {
      return huType_;
    }

    // optional uint32 room_id = 8;
    public static final int ROOM_ID_FIELD_NUMBER = 8;
    private int roomId_;
    /**
     * <code>optional uint32 room_id = 8;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 room_id = 8;</code>
     *
     * <pre>
     *房间号
     * </pre>
     */
    public int getRoomId() {
      return roomId_;
    }

    // optional uint64 creator_id = 9;
    public static final int CREATOR_ID_FIELD_NUMBER = 9;
    private long creatorId_;
    /**
     * <code>optional uint64 creator_id = 9;</code>
     *
     * <pre>
     *房间创建者	
     * </pre>
     */
    public boolean hasCreatorId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint64 creator_id = 9;</code>
     *
     * <pre>
     *房间创建者	
     * </pre>
     */
    public long getCreatorId() {
      return creatorId_;
    }

    // optional int64 create_time = 10;
    public static final int CREATE_TIME_FIELD_NUMBER = 10;
    private long createTime_;
    /**
     * <code>optional int64 create_time = 10;</code>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 create_time = 10;</code>
     */
    public long getCreateTime() {
      return createTime_;
    }

    // optional int32 baseHua = 11;
    public static final int BASEHUA_FIELD_NUMBER = 11;
    private int baseHua_;
    /**
     * <code>optional int32 baseHua = 11;</code>
     *
     * <pre>
     *底花值
     * </pre>
     */
    public boolean hasBaseHua() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 baseHua = 11;</code>
     *
     * <pre>
     *底花值
     * </pre>
     */
    public int getBaseHua() {
      return baseHua_;
    }

    private void initFields() {
      circleCount_ = 0;
      cardCost_ = 0;
      costType_ = 0;
      baseScore_ = 0;
      huaType_ = 0;
      baoType_ = 0;
      huType_ = 0;
      roomId_ = 0;
      creatorId_ = 0L;
      createTime_ = 0L;
      baseHua_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, circleCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cardCost_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, costType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, baseScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, huaType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, baoType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, huType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, roomId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt64(9, creatorId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(10, createTime_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, baseHua_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, circleCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cardCost_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, costType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, baseScore_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, huaType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, baoType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, huType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, roomId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, creatorId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, createTime_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, baseHua_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.msg_base_room_rule_info}
     *
     * <pre>
     *房间的规则信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_base_room_rule_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_base_room_rule_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        circleCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardCost_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        costType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        baseScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        huaType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        baoType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        huType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        roomId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        creatorId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        createTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        baseHua_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_base_room_rule_info_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info build() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info result = new game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.circleCount_ = circleCount_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardCost_ = cardCost_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.costType_ = costType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.baseScore_ = baseScore_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.huaType_ = huaType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.baoType_ = baoType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.huType_ = huType_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.creatorId_ = creatorId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.baseHua_ = baseHua_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info.getDefaultInstance()) return this;
        if (other.hasCircleCount()) {
          setCircleCount(other.getCircleCount());
        }
        if (other.hasCardCost()) {
          setCardCost(other.getCardCost());
        }
        if (other.hasCostType()) {
          setCostType(other.getCostType());
        }
        if (other.hasBaseScore()) {
          setBaseScore(other.getBaseScore());
        }
        if (other.hasHuaType()) {
          setHuaType(other.getHuaType());
        }
        if (other.hasBaoType()) {
          setBaoType(other.getBaoType());
        }
        if (other.hasHuType()) {
          setHuType(other.getHuType());
        }
        if (other.hasRoomId()) {
          setRoomId(other.getRoomId());
        }
        if (other.hasCreatorId()) {
          setCreatorId(other.getCreatorId());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasBaseHua()) {
          setBaseHua(other.getBaseHua());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.msg_base_room_rule_info) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 circle_count = 1;
      private int circleCount_ ;
      /**
       * <code>optional int32 circle_count = 1;</code>
       *
       * <pre>
       *局数
       * </pre>
       */
      public boolean hasCircleCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 circle_count = 1;</code>
       *
       * <pre>
       *局数
       * </pre>
       */
      public int getCircleCount() {
        return circleCount_;
      }
      /**
       * <code>optional int32 circle_count = 1;</code>
       *
       * <pre>
       *局数
       * </pre>
       */
      public Builder setCircleCount(int value) {
        bitField0_ |= 0x00000001;
        circleCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 circle_count = 1;</code>
       *
       * <pre>
       *局数
       * </pre>
       */
      public Builder clearCircleCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        circleCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 card_cost = 2;
      private int cardCost_ ;
      /**
       * <code>optional int32 card_cost = 2;</code>
       *
       * <pre>
       *房卡消耗数量
       * </pre>
       */
      public boolean hasCardCost() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 card_cost = 2;</code>
       *
       * <pre>
       *房卡消耗数量
       * </pre>
       */
      public int getCardCost() {
        return cardCost_;
      }
      /**
       * <code>optional int32 card_cost = 2;</code>
       *
       * <pre>
       *房卡消耗数量
       * </pre>
       */
      public Builder setCardCost(int value) {
        bitField0_ |= 0x00000002;
        cardCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_cost = 2;</code>
       *
       * <pre>
       *房卡消耗数量
       * </pre>
       */
      public Builder clearCardCost() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cardCost_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cost_type = 3;
      private int costType_ ;
      /**
       * <code>optional int32 cost_type = 3;</code>
       *
       * <pre>
       *1-创建者扣门卡,2-AA制
       * </pre>
       */
      public boolean hasCostType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 cost_type = 3;</code>
       *
       * <pre>
       *1-创建者扣门卡,2-AA制
       * </pre>
       */
      public int getCostType() {
        return costType_;
      }
      /**
       * <code>optional int32 cost_type = 3;</code>
       *
       * <pre>
       *1-创建者扣门卡,2-AA制
       * </pre>
       */
      public Builder setCostType(int value) {
        bitField0_ |= 0x00000004;
        costType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cost_type = 3;</code>
       *
       * <pre>
       *1-创建者扣门卡,2-AA制
       * </pre>
       */
      public Builder clearCostType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        costType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 base_score = 4;
      private int baseScore_ ;
      /**
       * <code>optional int32 base_score = 4;</code>
       *
       * <pre>
       *底分，默认为1
       * </pre>
       */
      public boolean hasBaseScore() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 base_score = 4;</code>
       *
       * <pre>
       *底分，默认为1
       * </pre>
       */
      public int getBaseScore() {
        return baseScore_;
      }
      /**
       * <code>optional int32 base_score = 4;</code>
       *
       * <pre>
       *底分，默认为1
       * </pre>
       */
      public Builder setBaseScore(int value) {
        bitField0_ |= 0x00000008;
        baseScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 base_score = 4;</code>
       *
       * <pre>
       *底分，默认为1
       * </pre>
       */
      public Builder clearBaseScore() {
        bitField0_ = (bitField0_ & ~0x00000008);
        baseScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hua_type = 5;
      private int huaType_ ;
      /**
       * <code>optional int32 hua_type = 5;</code>
       *
       * <pre>
       *0:四花,	1:20花	2:28花
       * </pre>
       */
      public boolean hasHuaType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 hua_type = 5;</code>
       *
       * <pre>
       *0:四花,	1:20花	2:28花
       * </pre>
       */
      public int getHuaType() {
        return huaType_;
      }
      /**
       * <code>optional int32 hua_type = 5;</code>
       *
       * <pre>
       *0:四花,	1:20花	2:28花
       * </pre>
       */
      public Builder setHuaType(int value) {
        bitField0_ |= 0x00000010;
        huaType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hua_type = 5;</code>
       *
       * <pre>
       *0:四花,	1:20花	2:28花
       * </pre>
       */
      public Builder clearHuaType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        huaType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 bao_type = 6;
      private int baoType_ ;
      /**
       * <code>optional int32 bao_type = 6;</code>
       *
       * <pre>
       * 0:1包1     1：一包三
       * </pre>
       */
      public boolean hasBaoType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 bao_type = 6;</code>
       *
       * <pre>
       * 0:1包1     1：一包三
       * </pre>
       */
      public int getBaoType() {
        return baoType_;
      }
      /**
       * <code>optional int32 bao_type = 6;</code>
       *
       * <pre>
       * 0:1包1     1：一包三
       * </pre>
       */
      public Builder setBaoType(int value) {
        bitField0_ |= 0x00000020;
        baoType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bao_type = 6;</code>
       *
       * <pre>
       * 0:1包1     1：一包三
       * </pre>
       */
      public Builder clearBaoType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        baoType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hu_type = 7;
      private int huType_ ;
      /**
       * <code>optional int32 hu_type = 7;</code>
       *
       * <pre>
       *0:截胡  1：一炮多胡
       * </pre>
       */
      public boolean hasHuType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 hu_type = 7;</code>
       *
       * <pre>
       *0:截胡  1：一炮多胡
       * </pre>
       */
      public int getHuType() {
        return huType_;
      }
      /**
       * <code>optional int32 hu_type = 7;</code>
       *
       * <pre>
       *0:截胡  1：一炮多胡
       * </pre>
       */
      public Builder setHuType(int value) {
        bitField0_ |= 0x00000040;
        huType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hu_type = 7;</code>
       *
       * <pre>
       *0:截胡  1：一炮多胡
       * </pre>
       */
      public Builder clearHuType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        huType_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 room_id = 8;
      private int roomId_ ;
      /**
       * <code>optional uint32 room_id = 8;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 room_id = 8;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public int getRoomId() {
        return roomId_;
      }
      /**
       * <code>optional uint32 room_id = 8;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder setRoomId(int value) {
        bitField0_ |= 0x00000080;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 room_id = 8;</code>
       *
       * <pre>
       *房间号
       * </pre>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        roomId_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 creator_id = 9;
      private long creatorId_ ;
      /**
       * <code>optional uint64 creator_id = 9;</code>
       *
       * <pre>
       *房间创建者	
       * </pre>
       */
      public boolean hasCreatorId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint64 creator_id = 9;</code>
       *
       * <pre>
       *房间创建者	
       * </pre>
       */
      public long getCreatorId() {
        return creatorId_;
      }
      /**
       * <code>optional uint64 creator_id = 9;</code>
       *
       * <pre>
       *房间创建者	
       * </pre>
       */
      public Builder setCreatorId(long value) {
        bitField0_ |= 0x00000100;
        creatorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 creator_id = 9;</code>
       *
       * <pre>
       *房间创建者	
       * </pre>
       */
      public Builder clearCreatorId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        creatorId_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 create_time = 10;
      private long createTime_ ;
      /**
       * <code>optional int64 create_time = 10;</code>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 create_time = 10;</code>
       */
      public long getCreateTime() {
        return createTime_;
      }
      /**
       * <code>optional int64 create_time = 10;</code>
       */
      public Builder setCreateTime(long value) {
        bitField0_ |= 0x00000200;
        createTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 create_time = 10;</code>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        createTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 baseHua = 11;
      private int baseHua_ ;
      /**
       * <code>optional int32 baseHua = 11;</code>
       *
       * <pre>
       *底花值
       * </pre>
       */
      public boolean hasBaseHua() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 baseHua = 11;</code>
       *
       * <pre>
       *底花值
       * </pre>
       */
      public int getBaseHua() {
        return baseHua_;
      }
      /**
       * <code>optional int32 baseHua = 11;</code>
       *
       * <pre>
       *底花值
       * </pre>
       */
      public Builder setBaseHua(int value) {
        bitField0_ |= 0x00000400;
        baseHua_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baseHua = 11;</code>
       *
       * <pre>
       *底花值
       * </pre>
       */
      public Builder clearBaseHua() {
        bitField0_ = (bitField0_ & ~0x00000400);
        baseHua_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.msg_base_room_rule_info)
    }

    static {
      defaultInstance = new msg_base_room_rule_info(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.msg_base_room_rule_info)
  }

  public interface msg_user_infoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 seat_pos = 1;
    /**
     * <code>optional int32 seat_pos = 1;</code>
     *
     * <pre>
     *玩家的位置
     * </pre>
     */
    boolean hasSeatPos();
    /**
     * <code>optional int32 seat_pos = 1;</code>
     *
     * <pre>
     *玩家的位置
     * </pre>
     */
    int getSeatPos();

    // optional int32 playerId = 2;
    /**
     * <code>optional int32 playerId = 2;</code>
     *
     * <pre>
     *玩家的Id
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int32 playerId = 2;</code>
     *
     * <pre>
     *玩家的Id
     * </pre>
     */
    int getPlayerId();

    // optional string user_name = 3;
    /**
     * <code>optional string user_name = 3;</code>
     *
     * <pre>
     *玩家的名字
     * </pre>
     */
    boolean hasUserName();
    /**
     * <code>optional string user_name = 3;</code>
     *
     * <pre>
     *玩家的名字
     * </pre>
     */
    java.lang.String getUserName();
    /**
     * <code>optional string user_name = 3;</code>
     *
     * <pre>
     *玩家的名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    // optional int32 gold = 4;
    /**
     * <code>optional int32 gold = 4;</code>
     *
     * <pre>
     *玩家的身上金币的数量
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional int32 gold = 4;</code>
     *
     * <pre>
     *玩家的身上金币的数量
     * </pre>
     */
    int getGold();

    // optional string head_icon = 5;
    /**
     * <code>optional string head_icon = 5;</code>
     *
     * <pre>
     *玩家的身上的图标类型
     * </pre>
     */
    boolean hasHeadIcon();
    /**
     * <code>optional string head_icon = 5;</code>
     *
     * <pre>
     *玩家的身上的图标类型
     * </pre>
     */
    java.lang.String getHeadIcon();
    /**
     * <code>optional string head_icon = 5;</code>
     *
     * <pre>
     *玩家的身上的图标类型
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeadIconBytes();

    // optional int32 sex = 6;
    /**
     * <code>optional int32 sex = 6;</code>
     *
     * <pre>
     *玩家的性别
     * </pre>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 6;</code>
     *
     * <pre>
     *玩家的性别
     * </pre>
     */
    int getSex();

    // optional int32 score = 7;
    /**
     * <code>optional int32 score = 7;</code>
     *
     * <pre>
     *当前的分数
     * </pre>
     */
    boolean hasScore();
    /**
     * <code>optional int32 score = 7;</code>
     *
     * <pre>
     *当前的分数
     * </pre>
     */
    int getScore();

    // optional int32 line_status = 8;
    /**
     * <code>optional int32 line_status = 8;</code>
     *
     * <pre>
     *玩家在线状态 0：未在线，1：在线
     * </pre>
     */
    boolean hasLineStatus();
    /**
     * <code>optional int32 line_status = 8;</code>
     *
     * <pre>
     *玩家在线状态 0：未在线，1：在线
     * </pre>
     */
    int getLineStatus();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.msg_user_info}
   *
   * <pre>
   *玩家的信息，
   * </pre>
   */
  public static final class msg_user_info extends
      com.google.protobuf.GeneratedMessage
      implements msg_user_infoOrBuilder {
    // Use msg_user_info.newBuilder() to construct.
    private msg_user_info(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private msg_user_info(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final msg_user_info defaultInstance;
    public static msg_user_info getDefaultInstance() {
      return defaultInstance;
    }

    public msg_user_info getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private msg_user_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seatPos_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerId_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              userName_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              gold_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              headIcon_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              sex_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              score_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              lineStatus_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_user_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_user_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder.class);
    }

    public static com.google.protobuf.Parser<msg_user_info> PARSER =
        new com.google.protobuf.AbstractParser<msg_user_info>() {
      public msg_user_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new msg_user_info(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<msg_user_info> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 seat_pos = 1;
    public static final int SEAT_POS_FIELD_NUMBER = 1;
    private int seatPos_;
    /**
     * <code>optional int32 seat_pos = 1;</code>
     *
     * <pre>
     *玩家的位置
     * </pre>
     */
    public boolean hasSeatPos() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 seat_pos = 1;</code>
     *
     * <pre>
     *玩家的位置
     * </pre>
     */
    public int getSeatPos() {
      return seatPos_;
    }

    // optional int32 playerId = 2;
    public static final int PLAYERID_FIELD_NUMBER = 2;
    private int playerId_;
    /**
     * <code>optional int32 playerId = 2;</code>
     *
     * <pre>
     *玩家的Id
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 playerId = 2;</code>
     *
     * <pre>
     *玩家的Id
     * </pre>
     */
    public int getPlayerId() {
      return playerId_;
    }

    // optional string user_name = 3;
    public static final int USER_NAME_FIELD_NUMBER = 3;
    private java.lang.Object userName_;
    /**
     * <code>optional string user_name = 3;</code>
     *
     * <pre>
     *玩家的名字
     * </pre>
     */
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string user_name = 3;</code>
     *
     * <pre>
     *玩家的名字
     * </pre>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string user_name = 3;</code>
     *
     * <pre>
     *玩家的名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 gold = 4;
    public static final int GOLD_FIELD_NUMBER = 4;
    private int gold_;
    /**
     * <code>optional int32 gold = 4;</code>
     *
     * <pre>
     *玩家的身上金币的数量
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 gold = 4;</code>
     *
     * <pre>
     *玩家的身上金币的数量
     * </pre>
     */
    public int getGold() {
      return gold_;
    }

    // optional string head_icon = 5;
    public static final int HEAD_ICON_FIELD_NUMBER = 5;
    private java.lang.Object headIcon_;
    /**
     * <code>optional string head_icon = 5;</code>
     *
     * <pre>
     *玩家的身上的图标类型
     * </pre>
     */
    public boolean hasHeadIcon() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string head_icon = 5;</code>
     *
     * <pre>
     *玩家的身上的图标类型
     * </pre>
     */
    public java.lang.String getHeadIcon() {
      java.lang.Object ref = headIcon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headIcon_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string head_icon = 5;</code>
     *
     * <pre>
     *玩家的身上的图标类型
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeadIconBytes() {
      java.lang.Object ref = headIcon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headIcon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 sex = 6;
    public static final int SEX_FIELD_NUMBER = 6;
    private int sex_;
    /**
     * <code>optional int32 sex = 6;</code>
     *
     * <pre>
     *玩家的性别
     * </pre>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 sex = 6;</code>
     *
     * <pre>
     *玩家的性别
     * </pre>
     */
    public int getSex() {
      return sex_;
    }

    // optional int32 score = 7;
    public static final int SCORE_FIELD_NUMBER = 7;
    private int score_;
    /**
     * <code>optional int32 score = 7;</code>
     *
     * <pre>
     *当前的分数
     * </pre>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 score = 7;</code>
     *
     * <pre>
     *当前的分数
     * </pre>
     */
    public int getScore() {
      return score_;
    }

    // optional int32 line_status = 8;
    public static final int LINE_STATUS_FIELD_NUMBER = 8;
    private int lineStatus_;
    /**
     * <code>optional int32 line_status = 8;</code>
     *
     * <pre>
     *玩家在线状态 0：未在线，1：在线
     * </pre>
     */
    public boolean hasLineStatus() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 line_status = 8;</code>
     *
     * <pre>
     *玩家在线状态 0：未在线，1：在线
     * </pre>
     */
    public int getLineStatus() {
      return lineStatus_;
    }

    private void initFields() {
      seatPos_ = 0;
      playerId_ = 0;
      userName_ = "";
      gold_ = 0;
      headIcon_ = "";
      sex_ = 0;
      score_ = 0;
      lineStatus_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seatPos_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, gold_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getHeadIconBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, sex_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, score_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, lineStatus_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seatPos_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gold_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getHeadIconBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, sex_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, score_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, lineStatus_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.msg_user_info}
     *
     * <pre>
     *玩家的信息，
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_user_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_user_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seatPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        userName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        gold_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        headIcon_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        lineStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_user_info_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info build() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info result = new game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seatPos_ = seatPos_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.userName_ = userName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.headIcon_ = headIcon_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.lineStatus_ = lineStatus_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.getDefaultInstance()) return this;
        if (other.hasSeatPos()) {
          setSeatPos(other.getSeatPos());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasUserName()) {
          bitField0_ |= 0x00000004;
          userName_ = other.userName_;
          onChanged();
        }
        if (other.hasGold()) {
          setGold(other.getGold());
        }
        if (other.hasHeadIcon()) {
          bitField0_ |= 0x00000010;
          headIcon_ = other.headIcon_;
          onChanged();
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasLineStatus()) {
          setLineStatus(other.getLineStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 seat_pos = 1;
      private int seatPos_ ;
      /**
       * <code>optional int32 seat_pos = 1;</code>
       *
       * <pre>
       *玩家的位置
       * </pre>
       */
      public boolean hasSeatPos() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 seat_pos = 1;</code>
       *
       * <pre>
       *玩家的位置
       * </pre>
       */
      public int getSeatPos() {
        return seatPos_;
      }
      /**
       * <code>optional int32 seat_pos = 1;</code>
       *
       * <pre>
       *玩家的位置
       * </pre>
       */
      public Builder setSeatPos(int value) {
        bitField0_ |= 0x00000001;
        seatPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_pos = 1;</code>
       *
       * <pre>
       *玩家的位置
       * </pre>
       */
      public Builder clearSeatPos() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seatPos_ = 0;
        onChanged();
        return this;
      }

      // optional int32 playerId = 2;
      private int playerId_ ;
      /**
       * <code>optional int32 playerId = 2;</code>
       *
       * <pre>
       *玩家的Id
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 playerId = 2;</code>
       *
       * <pre>
       *玩家的Id
       * </pre>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int32 playerId = 2;</code>
       *
       * <pre>
       *玩家的Id
       * </pre>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000002;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 playerId = 2;</code>
       *
       * <pre>
       *玩家的Id
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = 0;
        onChanged();
        return this;
      }

      // optional string user_name = 3;
      private java.lang.Object userName_ = "";
      /**
       * <code>optional string user_name = 3;</code>
       *
       * <pre>
       *玩家的名字
       * </pre>
       */
      public boolean hasUserName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string user_name = 3;</code>
       *
       * <pre>
       *玩家的名字
       * </pre>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string user_name = 3;</code>
       *
       * <pre>
       *玩家的名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string user_name = 3;</code>
       *
       * <pre>
       *玩家的名字
       * </pre>
       */
      public Builder setUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 3;</code>
       *
       * <pre>
       *玩家的名字
       * </pre>
       */
      public Builder clearUserName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 3;</code>
       *
       * <pre>
       *玩家的名字
       * </pre>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        userName_ = value;
        onChanged();
        return this;
      }

      // optional int32 gold = 4;
      private int gold_ ;
      /**
       * <code>optional int32 gold = 4;</code>
       *
       * <pre>
       *玩家的身上金币的数量
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 gold = 4;</code>
       *
       * <pre>
       *玩家的身上金币的数量
       * </pre>
       */
      public int getGold() {
        return gold_;
      }
      /**
       * <code>optional int32 gold = 4;</code>
       *
       * <pre>
       *玩家的身上金币的数量
       * </pre>
       */
      public Builder setGold(int value) {
        bitField0_ |= 0x00000008;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gold = 4;</code>
       *
       * <pre>
       *玩家的身上金币的数量
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gold_ = 0;
        onChanged();
        return this;
      }

      // optional string head_icon = 5;
      private java.lang.Object headIcon_ = "";
      /**
       * <code>optional string head_icon = 5;</code>
       *
       * <pre>
       *玩家的身上的图标类型
       * </pre>
       */
      public boolean hasHeadIcon() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string head_icon = 5;</code>
       *
       * <pre>
       *玩家的身上的图标类型
       * </pre>
       */
      public java.lang.String getHeadIcon() {
        java.lang.Object ref = headIcon_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          headIcon_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string head_icon = 5;</code>
       *
       * <pre>
       *玩家的身上的图标类型
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeadIconBytes() {
        java.lang.Object ref = headIcon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headIcon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string head_icon = 5;</code>
       *
       * <pre>
       *玩家的身上的图标类型
       * </pre>
       */
      public Builder setHeadIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        headIcon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_icon = 5;</code>
       *
       * <pre>
       *玩家的身上的图标类型
       * </pre>
       */
      public Builder clearHeadIcon() {
        bitField0_ = (bitField0_ & ~0x00000010);
        headIcon_ = getDefaultInstance().getHeadIcon();
        onChanged();
        return this;
      }
      /**
       * <code>optional string head_icon = 5;</code>
       *
       * <pre>
       *玩家的身上的图标类型
       * </pre>
       */
      public Builder setHeadIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        headIcon_ = value;
        onChanged();
        return this;
      }

      // optional int32 sex = 6;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 6;</code>
       *
       * <pre>
       *玩家的性别
       * </pre>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 sex = 6;</code>
       *
       * <pre>
       *玩家的性别
       * </pre>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 6;</code>
       *
       * <pre>
       *玩家的性别
       * </pre>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000020;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 6;</code>
       *
       * <pre>
       *玩家的性别
       * </pre>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000020);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 score = 7;
      private int score_ ;
      /**
       * <code>optional int32 score = 7;</code>
       *
       * <pre>
       *当前的分数
       * </pre>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 score = 7;</code>
       *
       * <pre>
       *当前的分数
       * </pre>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <code>optional int32 score = 7;</code>
       *
       * <pre>
       *当前的分数
       * </pre>
       */
      public Builder setScore(int value) {
        bitField0_ |= 0x00000040;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 score = 7;</code>
       *
       * <pre>
       *当前的分数
       * </pre>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000040);
        score_ = 0;
        onChanged();
        return this;
      }

      // optional int32 line_status = 8;
      private int lineStatus_ ;
      /**
       * <code>optional int32 line_status = 8;</code>
       *
       * <pre>
       *玩家在线状态 0：未在线，1：在线
       * </pre>
       */
      public boolean hasLineStatus() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 line_status = 8;</code>
       *
       * <pre>
       *玩家在线状态 0：未在线，1：在线
       * </pre>
       */
      public int getLineStatus() {
        return lineStatus_;
      }
      /**
       * <code>optional int32 line_status = 8;</code>
       *
       * <pre>
       *玩家在线状态 0：未在线，1：在线
       * </pre>
       */
      public Builder setLineStatus(int value) {
        bitField0_ |= 0x00000080;
        lineStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 line_status = 8;</code>
       *
       * <pre>
       *玩家在线状态 0：未在线，1：在线
       * </pre>
       */
      public Builder clearLineStatus() {
        bitField0_ = (bitField0_ & ~0x00000080);
        lineStatus_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.msg_user_info)
    }

    static {
      defaultInstance = new msg_user_info(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.msg_user_info)
  }

  public interface msg_status_gaming_infoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .game_guanyuan_protocols.msg_room_info room_info = 1;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
     *
     * <pre>
     *房间里每个人的信息状态
     * </pre>
     */
    java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info> 
        getRoomInfoList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
     *
     * <pre>
     *房间里每个人的信息状态
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info getRoomInfo(int index);
    /**
     * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
     *
     * <pre>
     *房间里每个人的信息状态
     * </pre>
     */
    int getRoomInfoCount();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
     *
     * <pre>
     *房间里每个人的信息状态
     * </pre>
     */
    java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_room_infoOrBuilder> 
        getRoomInfoOrBuilderList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
     *
     * <pre>
     *房间里每个人的信息状态
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_room_infoOrBuilder getRoomInfoOrBuilder(
        int index);

    // repeated int32 angang_cards = 2;
    /**
     * <code>repeated int32 angang_cards = 2;</code>
     *
     * <pre>
     *当前自己暗杠牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getAngangCardsList();
    /**
     * <code>repeated int32 angang_cards = 2;</code>
     *
     * <pre>
     *当前自己暗杠牌
     * </pre>
     */
    int getAngangCardsCount();
    /**
     * <code>repeated int32 angang_cards = 2;</code>
     *
     * <pre>
     *当前自己暗杠牌
     * </pre>
     */
    int getAngangCards(int index);

    // repeated int32 hand_hards = 3;
    /**
     * <code>repeated int32 hand_hards = 3;</code>
     *
     * <pre>
     *当前玩家的手牌信息
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandHardsList();
    /**
     * <code>repeated int32 hand_hards = 3;</code>
     *
     * <pre>
     *当前玩家的手牌信息
     * </pre>
     */
    int getHandHardsCount();
    /**
     * <code>repeated int32 hand_hards = 3;</code>
     *
     * <pre>
     *当前玩家的手牌信息
     * </pre>
     */
    int getHandHards(int index);

    // optional int32 host_pos = 4;
    /**
     * <code>optional int32 host_pos = 4;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    boolean hasHostPos();
    /**
     * <code>optional int32 host_pos = 4;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    int getHostPos();

    // optional int32 active_pos = 5;
    /**
     * <code>optional int32 active_pos = 5;</code>
     *
     * <pre>
     *当前激活的位置
     * </pre>
     */
    boolean hasActivePos();
    /**
     * <code>optional int32 active_pos = 5;</code>
     *
     * <pre>
     *当前激活的位置
     * </pre>
     */
    int getActivePos();

    // optional int32 left_card_num = 6;
    /**
     * <code>optional int32 left_card_num = 6;</code>
     *
     * <pre>
     *余下牌的数量
     * </pre>
     */
    boolean hasLeftCardNum();
    /**
     * <code>optional int32 left_card_num = 6;</code>
     *
     * <pre>
     *余下牌的数量
     * </pre>
     */
    int getLeftCardNum();

    // optional int32 last_out_card_pos = 7;
    /**
     * <code>optional int32 last_out_card_pos = 7;</code>
     *
     * <pre>
     *最后出牌的位置
     * </pre>
     */
    boolean hasLastOutCardPos();
    /**
     * <code>optional int32 last_out_card_pos = 7;</code>
     *
     * <pre>
     *最后出牌的位置
     * </pre>
     */
    int getLastOutCardPos();

    // optional int32 last_out_card = 8;
    /**
     * <code>optional int32 last_out_card = 8;</code>
     *
     * <pre>
     *最后出的牌
     * </pre>
     */
    boolean hasLastOutCard();
    /**
     * <code>optional int32 last_out_card = 8;</code>
     *
     * <pre>
     *最后出的牌
     * </pre>
     */
    int getLastOutCard();

    // optional int32 circle_idx = 9;
    /**
     * <code>optional int32 circle_idx = 9;</code>
     *
     * <pre>
     *当前的圈数
     * </pre>
     */
    boolean hasCircleIdx();
    /**
     * <code>optional int32 circle_idx = 9;</code>
     *
     * <pre>
     *当前的圈数
     * </pre>
     */
    int getCircleIdx();

    // optional int32 my_pos = 10;
    /**
     * <code>optional int32 my_pos = 10;</code>
     *
     * <pre>
     *我的位置
     * </pre>
     */
    boolean hasMyPos();
    /**
     * <code>optional int32 my_pos = 10;</code>
     *
     * <pre>
     *我的位置
     * </pre>
     */
    int getMyPos();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.msg_status_gaming_info}
   *
   * <pre>
   *正在游戏时房间信息
   * </pre>
   */
  public static final class msg_status_gaming_info extends
      com.google.protobuf.GeneratedMessage
      implements msg_status_gaming_infoOrBuilder {
    // Use msg_status_gaming_info.newBuilder() to construct.
    private msg_status_gaming_info(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private msg_status_gaming_info(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final msg_status_gaming_info defaultInstance;
    public static msg_status_gaming_info getDefaultInstance() {
      return defaultInstance;
    }

    public msg_status_gaming_info getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private msg_status_gaming_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                roomInfo_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info>();
                mutable_bitField0_ |= 0x00000001;
              }
              roomInfo_.add(input.readMessage(game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                angangCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              angangCards_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                angangCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                angangCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                handHards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              handHards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                handHards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                handHards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000001;
              hostPos_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000002;
              activePos_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000004;
              leftCardNum_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              lastOutCardPos_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              lastOutCard_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              circleIdx_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              myPos_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          roomInfo_ = java.util.Collections.unmodifiableList(roomInfo_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          angangCards_ = java.util.Collections.unmodifiableList(angangCards_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          handHards_ = java.util.Collections.unmodifiableList(handHards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_status_gaming_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_status_gaming_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.Builder.class);
    }

    public static com.google.protobuf.Parser<msg_status_gaming_info> PARSER =
        new com.google.protobuf.AbstractParser<msg_status_gaming_info>() {
      public msg_status_gaming_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new msg_status_gaming_info(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<msg_status_gaming_info> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .game_guanyuan_protocols.msg_room_info room_info = 1;
    public static final int ROOM_INFO_FIELD_NUMBER = 1;
    private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info> roomInfo_;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
     *
     * <pre>
     *房间里每个人的信息状态
     * </pre>
     */
    public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info> getRoomInfoList() {
      return roomInfo_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
     *
     * <pre>
     *房间里每个人的信息状态
     * </pre>
     */
    public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_room_infoOrBuilder> 
        getRoomInfoOrBuilderList() {
      return roomInfo_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
     *
     * <pre>
     *房间里每个人的信息状态
     * </pre>
     */
    public int getRoomInfoCount() {
      return roomInfo_.size();
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
     *
     * <pre>
     *房间里每个人的信息状态
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info getRoomInfo(int index) {
      return roomInfo_.get(index);
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
     *
     * <pre>
     *房间里每个人的信息状态
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_room_infoOrBuilder getRoomInfoOrBuilder(
        int index) {
      return roomInfo_.get(index);
    }

    // repeated int32 angang_cards = 2;
    public static final int ANGANG_CARDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> angangCards_;
    /**
     * <code>repeated int32 angang_cards = 2;</code>
     *
     * <pre>
     *当前自己暗杠牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAngangCardsList() {
      return angangCards_;
    }
    /**
     * <code>repeated int32 angang_cards = 2;</code>
     *
     * <pre>
     *当前自己暗杠牌
     * </pre>
     */
    public int getAngangCardsCount() {
      return angangCards_.size();
    }
    /**
     * <code>repeated int32 angang_cards = 2;</code>
     *
     * <pre>
     *当前自己暗杠牌
     * </pre>
     */
    public int getAngangCards(int index) {
      return angangCards_.get(index);
    }

    // repeated int32 hand_hards = 3;
    public static final int HAND_HARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> handHards_;
    /**
     * <code>repeated int32 hand_hards = 3;</code>
     *
     * <pre>
     *当前玩家的手牌信息
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandHardsList() {
      return handHards_;
    }
    /**
     * <code>repeated int32 hand_hards = 3;</code>
     *
     * <pre>
     *当前玩家的手牌信息
     * </pre>
     */
    public int getHandHardsCount() {
      return handHards_.size();
    }
    /**
     * <code>repeated int32 hand_hards = 3;</code>
     *
     * <pre>
     *当前玩家的手牌信息
     * </pre>
     */
    public int getHandHards(int index) {
      return handHards_.get(index);
    }

    // optional int32 host_pos = 4;
    public static final int HOST_POS_FIELD_NUMBER = 4;
    private int hostPos_;
    /**
     * <code>optional int32 host_pos = 4;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public boolean hasHostPos() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 host_pos = 4;</code>
     *
     * <pre>
     *当前庄家
     * </pre>
     */
    public int getHostPos() {
      return hostPos_;
    }

    // optional int32 active_pos = 5;
    public static final int ACTIVE_POS_FIELD_NUMBER = 5;
    private int activePos_;
    /**
     * <code>optional int32 active_pos = 5;</code>
     *
     * <pre>
     *当前激活的位置
     * </pre>
     */
    public boolean hasActivePos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 active_pos = 5;</code>
     *
     * <pre>
     *当前激活的位置
     * </pre>
     */
    public int getActivePos() {
      return activePos_;
    }

    // optional int32 left_card_num = 6;
    public static final int LEFT_CARD_NUM_FIELD_NUMBER = 6;
    private int leftCardNum_;
    /**
     * <code>optional int32 left_card_num = 6;</code>
     *
     * <pre>
     *余下牌的数量
     * </pre>
     */
    public boolean hasLeftCardNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 left_card_num = 6;</code>
     *
     * <pre>
     *余下牌的数量
     * </pre>
     */
    public int getLeftCardNum() {
      return leftCardNum_;
    }

    // optional int32 last_out_card_pos = 7;
    public static final int LAST_OUT_CARD_POS_FIELD_NUMBER = 7;
    private int lastOutCardPos_;
    /**
     * <code>optional int32 last_out_card_pos = 7;</code>
     *
     * <pre>
     *最后出牌的位置
     * </pre>
     */
    public boolean hasLastOutCardPos() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 last_out_card_pos = 7;</code>
     *
     * <pre>
     *最后出牌的位置
     * </pre>
     */
    public int getLastOutCardPos() {
      return lastOutCardPos_;
    }

    // optional int32 last_out_card = 8;
    public static final int LAST_OUT_CARD_FIELD_NUMBER = 8;
    private int lastOutCard_;
    /**
     * <code>optional int32 last_out_card = 8;</code>
     *
     * <pre>
     *最后出的牌
     * </pre>
     */
    public boolean hasLastOutCard() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 last_out_card = 8;</code>
     *
     * <pre>
     *最后出的牌
     * </pre>
     */
    public int getLastOutCard() {
      return lastOutCard_;
    }

    // optional int32 circle_idx = 9;
    public static final int CIRCLE_IDX_FIELD_NUMBER = 9;
    private int circleIdx_;
    /**
     * <code>optional int32 circle_idx = 9;</code>
     *
     * <pre>
     *当前的圈数
     * </pre>
     */
    public boolean hasCircleIdx() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 circle_idx = 9;</code>
     *
     * <pre>
     *当前的圈数
     * </pre>
     */
    public int getCircleIdx() {
      return circleIdx_;
    }

    // optional int32 my_pos = 10;
    public static final int MY_POS_FIELD_NUMBER = 10;
    private int myPos_;
    /**
     * <code>optional int32 my_pos = 10;</code>
     *
     * <pre>
     *我的位置
     * </pre>
     */
    public boolean hasMyPos() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 my_pos = 10;</code>
     *
     * <pre>
     *我的位置
     * </pre>
     */
    public int getMyPos() {
      return myPos_;
    }

    private void initFields() {
      roomInfo_ = java.util.Collections.emptyList();
      angangCards_ = java.util.Collections.emptyList();
      handHards_ = java.util.Collections.emptyList();
      hostPos_ = 0;
      activePos_ = 0;
      leftCardNum_ = 0;
      lastOutCardPos_ = 0;
      lastOutCard_ = 0;
      circleIdx_ = 0;
      myPos_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < roomInfo_.size(); i++) {
        output.writeMessage(1, roomInfo_.get(i));
      }
      for (int i = 0; i < angangCards_.size(); i++) {
        output.writeInt32(2, angangCards_.get(i));
      }
      for (int i = 0; i < handHards_.size(); i++) {
        output.writeInt32(3, handHards_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(4, hostPos_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(5, activePos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(6, leftCardNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(7, lastOutCardPos_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, lastOutCard_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(9, circleIdx_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(10, myPos_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < roomInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomInfo_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < angangCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(angangCards_.get(i));
        }
        size += dataSize;
        size += 1 * getAngangCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handHards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handHards_.get(i));
        }
        size += dataSize;
        size += 1 * getHandHardsList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, hostPos_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, activePos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, leftCardNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, lastOutCardPos_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, lastOutCard_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, circleIdx_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, myPos_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.msg_status_gaming_info}
     *
     * <pre>
     *正在游戏时房间信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_status_gaming_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_status_gaming_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomInfoBuilder_ == null) {
          roomInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          roomInfoBuilder_.clear();
        }
        angangCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        handHards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        hostPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        activePos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        leftCardNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        lastOutCardPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        lastOutCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        circleIdx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        myPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_status_gaming_info_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info build() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info result = new game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (roomInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            roomInfo_ = java.util.Collections.unmodifiableList(roomInfo_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.roomInfo_ = roomInfo_;
        } else {
          result.roomInfo_ = roomInfoBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          angangCards_ = java.util.Collections.unmodifiableList(angangCards_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.angangCards_ = angangCards_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          handHards_ = java.util.Collections.unmodifiableList(handHards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.handHards_ = handHards_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hostPos_ = hostPos_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000002;
        }
        result.activePos_ = activePos_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000004;
        }
        result.leftCardNum_ = leftCardNum_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lastOutCardPos_ = lastOutCardPos_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.lastOutCard_ = lastOutCard_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.circleIdx_ = circleIdx_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        result.myPos_ = myPos_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info.getDefaultInstance()) return this;
        if (roomInfoBuilder_ == null) {
          if (!other.roomInfo_.isEmpty()) {
            if (roomInfo_.isEmpty()) {
              roomInfo_ = other.roomInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRoomInfoIsMutable();
              roomInfo_.addAll(other.roomInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.roomInfo_.isEmpty()) {
            if (roomInfoBuilder_.isEmpty()) {
              roomInfoBuilder_.dispose();
              roomInfoBuilder_ = null;
              roomInfo_ = other.roomInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
              roomInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoomInfoFieldBuilder() : null;
            } else {
              roomInfoBuilder_.addAllMessages(other.roomInfo_);
            }
          }
        }
        if (!other.angangCards_.isEmpty()) {
          if (angangCards_.isEmpty()) {
            angangCards_ = other.angangCards_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAngangCardsIsMutable();
            angangCards_.addAll(other.angangCards_);
          }
          onChanged();
        }
        if (!other.handHards_.isEmpty()) {
          if (handHards_.isEmpty()) {
            handHards_ = other.handHards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureHandHardsIsMutable();
            handHards_.addAll(other.handHards_);
          }
          onChanged();
        }
        if (other.hasHostPos()) {
          setHostPos(other.getHostPos());
        }
        if (other.hasActivePos()) {
          setActivePos(other.getActivePos());
        }
        if (other.hasLeftCardNum()) {
          setLeftCardNum(other.getLeftCardNum());
        }
        if (other.hasLastOutCardPos()) {
          setLastOutCardPos(other.getLastOutCardPos());
        }
        if (other.hasLastOutCard()) {
          setLastOutCard(other.getLastOutCard());
        }
        if (other.hasCircleIdx()) {
          setCircleIdx(other.getCircleIdx());
        }
        if (other.hasMyPos()) {
          setMyPos(other.getMyPos());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.msg_status_gaming_info) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .game_guanyuan_protocols.msg_room_info room_info = 1;
      private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info> roomInfo_ =
        java.util.Collections.emptyList();
      private void ensureRoomInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          roomInfo_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info>(roomInfo_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_room_infoOrBuilder> roomInfoBuilder_;

      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info> getRoomInfoList() {
        if (roomInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(roomInfo_);
        } else {
          return roomInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public int getRoomInfoCount() {
        if (roomInfoBuilder_ == null) {
          return roomInfo_.size();
        } else {
          return roomInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info getRoomInfo(int index) {
        if (roomInfoBuilder_ == null) {
          return roomInfo_.get(index);
        } else {
          return roomInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public Builder setRoomInfo(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomInfoIsMutable();
          roomInfo_.set(index, value);
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public Builder setRoomInfo(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          ensureRoomInfoIsMutable();
          roomInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          roomInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public Builder addRoomInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomInfoIsMutable();
          roomInfo_.add(value);
          onChanged();
        } else {
          roomInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public Builder addRoomInfo(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info value) {
        if (roomInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomInfoIsMutable();
          roomInfo_.add(index, value);
          onChanged();
        } else {
          roomInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public Builder addRoomInfo(
          game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          ensureRoomInfoIsMutable();
          roomInfo_.add(builderForValue.build());
          onChanged();
        } else {
          roomInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public Builder addRoomInfo(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.Builder builderForValue) {
        if (roomInfoBuilder_ == null) {
          ensureRoomInfoIsMutable();
          roomInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          roomInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public Builder addAllRoomInfo(
          java.lang.Iterable<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info> values) {
        if (roomInfoBuilder_ == null) {
          ensureRoomInfoIsMutable();
          super.addAll(values, roomInfo_);
          onChanged();
        } else {
          roomInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public Builder clearRoomInfo() {
        if (roomInfoBuilder_ == null) {
          roomInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          roomInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public Builder removeRoomInfo(int index) {
        if (roomInfoBuilder_ == null) {
          ensureRoomInfoIsMutable();
          roomInfo_.remove(index);
          onChanged();
        } else {
          roomInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.Builder getRoomInfoBuilder(
          int index) {
        return getRoomInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_room_infoOrBuilder getRoomInfoOrBuilder(
          int index) {
        if (roomInfoBuilder_ == null) {
          return roomInfo_.get(index);  } else {
          return roomInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_room_infoOrBuilder> 
           getRoomInfoOrBuilderList() {
        if (roomInfoBuilder_ != null) {
          return roomInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(roomInfo_);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.Builder addRoomInfoBuilder() {
        return getRoomInfoFieldBuilder().addBuilder(
            game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.Builder addRoomInfoBuilder(
          int index) {
        return getRoomInfoFieldBuilder().addBuilder(
            index, game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_room_info room_info = 1;</code>
       *
       * <pre>
       *房间里每个人的信息状态
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.Builder> 
           getRoomInfoBuilderList() {
        return getRoomInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_room_infoOrBuilder> 
          getRoomInfoFieldBuilder() {
        if (roomInfoBuilder_ == null) {
          roomInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_room_infoOrBuilder>(
                  roomInfo_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          roomInfo_ = null;
        }
        return roomInfoBuilder_;
      }

      // repeated int32 angang_cards = 2;
      private java.util.List<java.lang.Integer> angangCards_ = java.util.Collections.emptyList();
      private void ensureAngangCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          angangCards_ = new java.util.ArrayList<java.lang.Integer>(angangCards_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 angang_cards = 2;</code>
       *
       * <pre>
       *当前自己暗杠牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAngangCardsList() {
        return java.util.Collections.unmodifiableList(angangCards_);
      }
      /**
       * <code>repeated int32 angang_cards = 2;</code>
       *
       * <pre>
       *当前自己暗杠牌
       * </pre>
       */
      public int getAngangCardsCount() {
        return angangCards_.size();
      }
      /**
       * <code>repeated int32 angang_cards = 2;</code>
       *
       * <pre>
       *当前自己暗杠牌
       * </pre>
       */
      public int getAngangCards(int index) {
        return angangCards_.get(index);
      }
      /**
       * <code>repeated int32 angang_cards = 2;</code>
       *
       * <pre>
       *当前自己暗杠牌
       * </pre>
       */
      public Builder setAngangCards(
          int index, int value) {
        ensureAngangCardsIsMutable();
        angangCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 angang_cards = 2;</code>
       *
       * <pre>
       *当前自己暗杠牌
       * </pre>
       */
      public Builder addAngangCards(int value) {
        ensureAngangCardsIsMutable();
        angangCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 angang_cards = 2;</code>
       *
       * <pre>
       *当前自己暗杠牌
       * </pre>
       */
      public Builder addAllAngangCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAngangCardsIsMutable();
        super.addAll(values, angangCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 angang_cards = 2;</code>
       *
       * <pre>
       *当前自己暗杠牌
       * </pre>
       */
      public Builder clearAngangCards() {
        angangCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 hand_hards = 3;
      private java.util.List<java.lang.Integer> handHards_ = java.util.Collections.emptyList();
      private void ensureHandHardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          handHards_ = new java.util.ArrayList<java.lang.Integer>(handHards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 hand_hards = 3;</code>
       *
       * <pre>
       *当前玩家的手牌信息
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandHardsList() {
        return java.util.Collections.unmodifiableList(handHards_);
      }
      /**
       * <code>repeated int32 hand_hards = 3;</code>
       *
       * <pre>
       *当前玩家的手牌信息
       * </pre>
       */
      public int getHandHardsCount() {
        return handHards_.size();
      }
      /**
       * <code>repeated int32 hand_hards = 3;</code>
       *
       * <pre>
       *当前玩家的手牌信息
       * </pre>
       */
      public int getHandHards(int index) {
        return handHards_.get(index);
      }
      /**
       * <code>repeated int32 hand_hards = 3;</code>
       *
       * <pre>
       *当前玩家的手牌信息
       * </pre>
       */
      public Builder setHandHards(
          int index, int value) {
        ensureHandHardsIsMutable();
        handHards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_hards = 3;</code>
       *
       * <pre>
       *当前玩家的手牌信息
       * </pre>
       */
      public Builder addHandHards(int value) {
        ensureHandHardsIsMutable();
        handHards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_hards = 3;</code>
       *
       * <pre>
       *当前玩家的手牌信息
       * </pre>
       */
      public Builder addAllHandHards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandHardsIsMutable();
        super.addAll(values, handHards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_hards = 3;</code>
       *
       * <pre>
       *当前玩家的手牌信息
       * </pre>
       */
      public Builder clearHandHards() {
        handHards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 host_pos = 4;
      private int hostPos_ ;
      /**
       * <code>optional int32 host_pos = 4;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public boolean hasHostPos() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 host_pos = 4;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public int getHostPos() {
        return hostPos_;
      }
      /**
       * <code>optional int32 host_pos = 4;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder setHostPos(int value) {
        bitField0_ |= 0x00000008;
        hostPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 host_pos = 4;</code>
       *
       * <pre>
       *当前庄家
       * </pre>
       */
      public Builder clearHostPos() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hostPos_ = 0;
        onChanged();
        return this;
      }

      // optional int32 active_pos = 5;
      private int activePos_ ;
      /**
       * <code>optional int32 active_pos = 5;</code>
       *
       * <pre>
       *当前激活的位置
       * </pre>
       */
      public boolean hasActivePos() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 active_pos = 5;</code>
       *
       * <pre>
       *当前激活的位置
       * </pre>
       */
      public int getActivePos() {
        return activePos_;
      }
      /**
       * <code>optional int32 active_pos = 5;</code>
       *
       * <pre>
       *当前激活的位置
       * </pre>
       */
      public Builder setActivePos(int value) {
        bitField0_ |= 0x00000010;
        activePos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 active_pos = 5;</code>
       *
       * <pre>
       *当前激活的位置
       * </pre>
       */
      public Builder clearActivePos() {
        bitField0_ = (bitField0_ & ~0x00000010);
        activePos_ = 0;
        onChanged();
        return this;
      }

      // optional int32 left_card_num = 6;
      private int leftCardNum_ ;
      /**
       * <code>optional int32 left_card_num = 6;</code>
       *
       * <pre>
       *余下牌的数量
       * </pre>
       */
      public boolean hasLeftCardNum() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 left_card_num = 6;</code>
       *
       * <pre>
       *余下牌的数量
       * </pre>
       */
      public int getLeftCardNum() {
        return leftCardNum_;
      }
      /**
       * <code>optional int32 left_card_num = 6;</code>
       *
       * <pre>
       *余下牌的数量
       * </pre>
       */
      public Builder setLeftCardNum(int value) {
        bitField0_ |= 0x00000020;
        leftCardNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 left_card_num = 6;</code>
       *
       * <pre>
       *余下牌的数量
       * </pre>
       */
      public Builder clearLeftCardNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        leftCardNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 last_out_card_pos = 7;
      private int lastOutCardPos_ ;
      /**
       * <code>optional int32 last_out_card_pos = 7;</code>
       *
       * <pre>
       *最后出牌的位置
       * </pre>
       */
      public boolean hasLastOutCardPos() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 last_out_card_pos = 7;</code>
       *
       * <pre>
       *最后出牌的位置
       * </pre>
       */
      public int getLastOutCardPos() {
        return lastOutCardPos_;
      }
      /**
       * <code>optional int32 last_out_card_pos = 7;</code>
       *
       * <pre>
       *最后出牌的位置
       * </pre>
       */
      public Builder setLastOutCardPos(int value) {
        bitField0_ |= 0x00000040;
        lastOutCardPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 last_out_card_pos = 7;</code>
       *
       * <pre>
       *最后出牌的位置
       * </pre>
       */
      public Builder clearLastOutCardPos() {
        bitField0_ = (bitField0_ & ~0x00000040);
        lastOutCardPos_ = 0;
        onChanged();
        return this;
      }

      // optional int32 last_out_card = 8;
      private int lastOutCard_ ;
      /**
       * <code>optional int32 last_out_card = 8;</code>
       *
       * <pre>
       *最后出的牌
       * </pre>
       */
      public boolean hasLastOutCard() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 last_out_card = 8;</code>
       *
       * <pre>
       *最后出的牌
       * </pre>
       */
      public int getLastOutCard() {
        return lastOutCard_;
      }
      /**
       * <code>optional int32 last_out_card = 8;</code>
       *
       * <pre>
       *最后出的牌
       * </pre>
       */
      public Builder setLastOutCard(int value) {
        bitField0_ |= 0x00000080;
        lastOutCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 last_out_card = 8;</code>
       *
       * <pre>
       *最后出的牌
       * </pre>
       */
      public Builder clearLastOutCard() {
        bitField0_ = (bitField0_ & ~0x00000080);
        lastOutCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 circle_idx = 9;
      private int circleIdx_ ;
      /**
       * <code>optional int32 circle_idx = 9;</code>
       *
       * <pre>
       *当前的圈数
       * </pre>
       */
      public boolean hasCircleIdx() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 circle_idx = 9;</code>
       *
       * <pre>
       *当前的圈数
       * </pre>
       */
      public int getCircleIdx() {
        return circleIdx_;
      }
      /**
       * <code>optional int32 circle_idx = 9;</code>
       *
       * <pre>
       *当前的圈数
       * </pre>
       */
      public Builder setCircleIdx(int value) {
        bitField0_ |= 0x00000100;
        circleIdx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 circle_idx = 9;</code>
       *
       * <pre>
       *当前的圈数
       * </pre>
       */
      public Builder clearCircleIdx() {
        bitField0_ = (bitField0_ & ~0x00000100);
        circleIdx_ = 0;
        onChanged();
        return this;
      }

      // optional int32 my_pos = 10;
      private int myPos_ ;
      /**
       * <code>optional int32 my_pos = 10;</code>
       *
       * <pre>
       *我的位置
       * </pre>
       */
      public boolean hasMyPos() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 my_pos = 10;</code>
       *
       * <pre>
       *我的位置
       * </pre>
       */
      public int getMyPos() {
        return myPos_;
      }
      /**
       * <code>optional int32 my_pos = 10;</code>
       *
       * <pre>
       *我的位置
       * </pre>
       */
      public Builder setMyPos(int value) {
        bitField0_ |= 0x00000200;
        myPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 my_pos = 10;</code>
       *
       * <pre>
       *我的位置
       * </pre>
       */
      public Builder clearMyPos() {
        bitField0_ = (bitField0_ & ~0x00000200);
        myPos_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.msg_status_gaming_info)
    }

    static {
      defaultInstance = new msg_status_gaming_info(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.msg_status_gaming_info)
  }

  public interface msg_room_infoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 hand_card_num = 1;
    /**
     * <code>optional int32 hand_card_num = 1;</code>
     *
     * <pre>
     *玩家手牌的数量	
     * </pre>
     */
    boolean hasHandCardNum();
    /**
     * <code>optional int32 hand_card_num = 1;</code>
     *
     * <pre>
     *玩家手牌的数量	
     * </pre>
     */
    int getHandCardNum();

    // repeated int32 wall_cards = 2;
    /**
     * <code>repeated int32 wall_cards = 2;</code>
     *
     * <pre>
     *已出的墙牌	
     * </pre>
     */
    java.util.List<java.lang.Integer> getWallCardsList();
    /**
     * <code>repeated int32 wall_cards = 2;</code>
     *
     * <pre>
     *已出的墙牌	
     * </pre>
     */
    int getWallCardsCount();
    /**
     * <code>repeated int32 wall_cards = 2;</code>
     *
     * <pre>
     *已出的墙牌	
     * </pre>
     */
    int getWallCards(int index);

    // repeated int32 gang_cards = 3;
    /**
     * <code>repeated int32 gang_cards = 3;</code>
     *
     * <pre>
     *杠牌的集合，[3,6,8]
     * </pre>
     */
    java.util.List<java.lang.Integer> getGangCardsList();
    /**
     * <code>repeated int32 gang_cards = 3;</code>
     *
     * <pre>
     *杠牌的集合，[3,6,8]
     * </pre>
     */
    int getGangCardsCount();
    /**
     * <code>repeated int32 gang_cards = 3;</code>
     *
     * <pre>
     *杠牌的集合，[3,6,8]
     * </pre>
     */
    int getGangCards(int index);

    // optional int32 angang_card_num = 4;
    /**
     * <code>optional int32 angang_card_num = 4;</code>
     *
     * <pre>
     *暗杠的数量	
     * </pre>
     */
    boolean hasAngangCardNum();
    /**
     * <code>optional int32 angang_card_num = 4;</code>
     *
     * <pre>
     *暗杠的数量	
     * </pre>
     */
    int getAngangCardNum();

    // repeated int32 peng_cards = 5;
    /**
     * <code>repeated int32 peng_cards = 5;</code>
     *
     * <pre>
     *碰牌的集合
     * </pre>
     */
    java.util.List<java.lang.Integer> getPengCardsList();
    /**
     * <code>repeated int32 peng_cards = 5;</code>
     *
     * <pre>
     *碰牌的集合
     * </pre>
     */
    int getPengCardsCount();
    /**
     * <code>repeated int32 peng_cards = 5;</code>
     *
     * <pre>
     *碰牌的集合
     * </pre>
     */
    int getPengCards(int index);

    // repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
     *
     * <pre>
     *吃牌数据
     * </pre>
     */
    java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info> 
        getChiCardsList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
     *
     * <pre>
     *吃牌数据
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info getChiCards(int index);
    /**
     * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
     *
     * <pre>
     *吃牌数据
     * </pre>
     */
    int getChiCardsCount();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
     *
     * <pre>
     *吃牌数据
     * </pre>
     */
    java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_infoOrBuilder> 
        getChiCardsOrBuilderList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
     *
     * <pre>
     *吃牌数据
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_infoOrBuilder getChiCardsOrBuilder(
        int index);

    // repeated int32 flower_cards = 7;
    /**
     * <code>repeated int32 flower_cards = 7;</code>
     *
     * <pre>
     *花牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getFlowerCardsList();
    /**
     * <code>repeated int32 flower_cards = 7;</code>
     *
     * <pre>
     *花牌
     * </pre>
     */
    int getFlowerCardsCount();
    /**
     * <code>repeated int32 flower_cards = 7;</code>
     *
     * <pre>
     *花牌
     * </pre>
     */
    int getFlowerCards(int index);

    // repeated int32 hu_cards = 8;
    /**
     * <code>repeated int32 hu_cards = 8;</code>
     *
     * <pre>
     *胡的牌，目前，血流成河有用 
     * </pre>
     */
    java.util.List<java.lang.Integer> getHuCardsList();
    /**
     * <code>repeated int32 hu_cards = 8;</code>
     *
     * <pre>
     *胡的牌，目前，血流成河有用 
     * </pre>
     */
    int getHuCardsCount();
    /**
     * <code>repeated int32 hu_cards = 8;</code>
     *
     * <pre>
     *胡的牌，目前，血流成河有用 
     * </pre>
     */
    int getHuCards(int index);

    // optional int32 jiao_ting_card = 9;
    /**
     * <code>optional int32 jiao_ting_card = 9;</code>
     *
     * <pre>
     *叫听牌，
     * </pre>
     */
    boolean hasJiaoTingCard();
    /**
     * <code>optional int32 jiao_ting_card = 9;</code>
     *
     * <pre>
     *叫听牌，
     * </pre>
     */
    int getJiaoTingCard();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.msg_room_info}
   *
   * <pre>
   *房间信息    
   * </pre>
   */
  public static final class msg_room_info extends
      com.google.protobuf.GeneratedMessage
      implements msg_room_infoOrBuilder {
    // Use msg_room_info.newBuilder() to construct.
    private msg_room_info(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private msg_room_info(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final msg_room_info defaultInstance;
    public static msg_room_info getDefaultInstance() {
      return defaultInstance;
    }

    public msg_room_info getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private msg_room_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              handCardNum_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                wallCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              wallCards_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                wallCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                wallCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                gangCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              gangCards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                gangCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                gangCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              angangCardNum_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                pengCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              pengCards_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                pengCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                pengCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                chiCards_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info>();
                mutable_bitField0_ |= 0x00000020;
              }
              chiCards_.add(input.readMessage(game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                flowerCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              flowerCards_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                flowerCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                flowerCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                huCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              huCards_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                huCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                huCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000004;
              jiaoTingCard_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          wallCards_ = java.util.Collections.unmodifiableList(wallCards_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          gangCards_ = java.util.Collections.unmodifiableList(gangCards_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          pengCards_ = java.util.Collections.unmodifiableList(pengCards_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          chiCards_ = java.util.Collections.unmodifiableList(chiCards_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          flowerCards_ = java.util.Collections.unmodifiableList(flowerCards_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          huCards_ = java.util.Collections.unmodifiableList(huCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_room_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_room_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.Builder.class);
    }

    public static com.google.protobuf.Parser<msg_room_info> PARSER =
        new com.google.protobuf.AbstractParser<msg_room_info>() {
      public msg_room_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new msg_room_info(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<msg_room_info> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 hand_card_num = 1;
    public static final int HAND_CARD_NUM_FIELD_NUMBER = 1;
    private int handCardNum_;
    /**
     * <code>optional int32 hand_card_num = 1;</code>
     *
     * <pre>
     *玩家手牌的数量	
     * </pre>
     */
    public boolean hasHandCardNum() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 hand_card_num = 1;</code>
     *
     * <pre>
     *玩家手牌的数量	
     * </pre>
     */
    public int getHandCardNum() {
      return handCardNum_;
    }

    // repeated int32 wall_cards = 2;
    public static final int WALL_CARDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> wallCards_;
    /**
     * <code>repeated int32 wall_cards = 2;</code>
     *
     * <pre>
     *已出的墙牌	
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWallCardsList() {
      return wallCards_;
    }
    /**
     * <code>repeated int32 wall_cards = 2;</code>
     *
     * <pre>
     *已出的墙牌	
     * </pre>
     */
    public int getWallCardsCount() {
      return wallCards_.size();
    }
    /**
     * <code>repeated int32 wall_cards = 2;</code>
     *
     * <pre>
     *已出的墙牌	
     * </pre>
     */
    public int getWallCards(int index) {
      return wallCards_.get(index);
    }

    // repeated int32 gang_cards = 3;
    public static final int GANG_CARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> gangCards_;
    /**
     * <code>repeated int32 gang_cards = 3;</code>
     *
     * <pre>
     *杠牌的集合，[3,6,8]
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGangCardsList() {
      return gangCards_;
    }
    /**
     * <code>repeated int32 gang_cards = 3;</code>
     *
     * <pre>
     *杠牌的集合，[3,6,8]
     * </pre>
     */
    public int getGangCardsCount() {
      return gangCards_.size();
    }
    /**
     * <code>repeated int32 gang_cards = 3;</code>
     *
     * <pre>
     *杠牌的集合，[3,6,8]
     * </pre>
     */
    public int getGangCards(int index) {
      return gangCards_.get(index);
    }

    // optional int32 angang_card_num = 4;
    public static final int ANGANG_CARD_NUM_FIELD_NUMBER = 4;
    private int angangCardNum_;
    /**
     * <code>optional int32 angang_card_num = 4;</code>
     *
     * <pre>
     *暗杠的数量	
     * </pre>
     */
    public boolean hasAngangCardNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 angang_card_num = 4;</code>
     *
     * <pre>
     *暗杠的数量	
     * </pre>
     */
    public int getAngangCardNum() {
      return angangCardNum_;
    }

    // repeated int32 peng_cards = 5;
    public static final int PENG_CARDS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> pengCards_;
    /**
     * <code>repeated int32 peng_cards = 5;</code>
     *
     * <pre>
     *碰牌的集合
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPengCardsList() {
      return pengCards_;
    }
    /**
     * <code>repeated int32 peng_cards = 5;</code>
     *
     * <pre>
     *碰牌的集合
     * </pre>
     */
    public int getPengCardsCount() {
      return pengCards_.size();
    }
    /**
     * <code>repeated int32 peng_cards = 5;</code>
     *
     * <pre>
     *碰牌的集合
     * </pre>
     */
    public int getPengCards(int index) {
      return pengCards_.get(index);
    }

    // repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;
    public static final int CHICARDS_FIELD_NUMBER = 6;
    private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info> chiCards_;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
     *
     * <pre>
     *吃牌数据
     * </pre>
     */
    public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info> getChiCardsList() {
      return chiCards_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
     *
     * <pre>
     *吃牌数据
     * </pre>
     */
    public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_infoOrBuilder> 
        getChiCardsOrBuilderList() {
      return chiCards_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
     *
     * <pre>
     *吃牌数据
     * </pre>
     */
    public int getChiCardsCount() {
      return chiCards_.size();
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
     *
     * <pre>
     *吃牌数据
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info getChiCards(int index) {
      return chiCards_.get(index);
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
     *
     * <pre>
     *吃牌数据
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_infoOrBuilder getChiCardsOrBuilder(
        int index) {
      return chiCards_.get(index);
    }

    // repeated int32 flower_cards = 7;
    public static final int FLOWER_CARDS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> flowerCards_;
    /**
     * <code>repeated int32 flower_cards = 7;</code>
     *
     * <pre>
     *花牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFlowerCardsList() {
      return flowerCards_;
    }
    /**
     * <code>repeated int32 flower_cards = 7;</code>
     *
     * <pre>
     *花牌
     * </pre>
     */
    public int getFlowerCardsCount() {
      return flowerCards_.size();
    }
    /**
     * <code>repeated int32 flower_cards = 7;</code>
     *
     * <pre>
     *花牌
     * </pre>
     */
    public int getFlowerCards(int index) {
      return flowerCards_.get(index);
    }

    // repeated int32 hu_cards = 8;
    public static final int HU_CARDS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> huCards_;
    /**
     * <code>repeated int32 hu_cards = 8;</code>
     *
     * <pre>
     *胡的牌，目前，血流成河有用 
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHuCardsList() {
      return huCards_;
    }
    /**
     * <code>repeated int32 hu_cards = 8;</code>
     *
     * <pre>
     *胡的牌，目前，血流成河有用 
     * </pre>
     */
    public int getHuCardsCount() {
      return huCards_.size();
    }
    /**
     * <code>repeated int32 hu_cards = 8;</code>
     *
     * <pre>
     *胡的牌，目前，血流成河有用 
     * </pre>
     */
    public int getHuCards(int index) {
      return huCards_.get(index);
    }

    // optional int32 jiao_ting_card = 9;
    public static final int JIAO_TING_CARD_FIELD_NUMBER = 9;
    private int jiaoTingCard_;
    /**
     * <code>optional int32 jiao_ting_card = 9;</code>
     *
     * <pre>
     *叫听牌，
     * </pre>
     */
    public boolean hasJiaoTingCard() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 jiao_ting_card = 9;</code>
     *
     * <pre>
     *叫听牌，
     * </pre>
     */
    public int getJiaoTingCard() {
      return jiaoTingCard_;
    }

    private void initFields() {
      handCardNum_ = 0;
      wallCards_ = java.util.Collections.emptyList();
      gangCards_ = java.util.Collections.emptyList();
      angangCardNum_ = 0;
      pengCards_ = java.util.Collections.emptyList();
      chiCards_ = java.util.Collections.emptyList();
      flowerCards_ = java.util.Collections.emptyList();
      huCards_ = java.util.Collections.emptyList();
      jiaoTingCard_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, handCardNum_);
      }
      for (int i = 0; i < wallCards_.size(); i++) {
        output.writeInt32(2, wallCards_.get(i));
      }
      for (int i = 0; i < gangCards_.size(); i++) {
        output.writeInt32(3, gangCards_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, angangCardNum_);
      }
      for (int i = 0; i < pengCards_.size(); i++) {
        output.writeInt32(5, pengCards_.get(i));
      }
      for (int i = 0; i < chiCards_.size(); i++) {
        output.writeMessage(6, chiCards_.get(i));
      }
      for (int i = 0; i < flowerCards_.size(); i++) {
        output.writeInt32(7, flowerCards_.get(i));
      }
      for (int i = 0; i < huCards_.size(); i++) {
        output.writeInt32(8, huCards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(9, jiaoTingCard_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, handCardNum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < wallCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(wallCards_.get(i));
        }
        size += dataSize;
        size += 1 * getWallCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gangCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gangCards_.get(i));
        }
        size += dataSize;
        size += 1 * getGangCardsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, angangCardNum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pengCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(pengCards_.get(i));
        }
        size += dataSize;
        size += 1 * getPengCardsList().size();
      }
      for (int i = 0; i < chiCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, chiCards_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < flowerCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(flowerCards_.get(i));
        }
        size += dataSize;
        size += 1 * getFlowerCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < huCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(huCards_.get(i));
        }
        size += dataSize;
        size += 1 * getHuCardsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, jiaoTingCard_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.msg_room_info}
     *
     * <pre>
     *房间信息    
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.msg_room_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_room_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_room_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChiCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        handCardNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        wallCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        gangCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        angangCardNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        pengCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        if (chiCardsBuilder_ == null) {
          chiCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          chiCardsBuilder_.clear();
        }
        flowerCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        huCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        jiaoTingCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_room_info_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info build() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info result = new game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.handCardNum_ = handCardNum_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          wallCards_ = java.util.Collections.unmodifiableList(wallCards_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.wallCards_ = wallCards_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          gangCards_ = java.util.Collections.unmodifiableList(gangCards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.gangCards_ = gangCards_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.angangCardNum_ = angangCardNum_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          pengCards_ = java.util.Collections.unmodifiableList(pengCards_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.pengCards_ = pengCards_;
        if (chiCardsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            chiCards_ = java.util.Collections.unmodifiableList(chiCards_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.chiCards_ = chiCards_;
        } else {
          result.chiCards_ = chiCardsBuilder_.build();
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          flowerCards_ = java.util.Collections.unmodifiableList(flowerCards_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.flowerCards_ = flowerCards_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          huCards_ = java.util.Collections.unmodifiableList(huCards_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.huCards_ = huCards_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000004;
        }
        result.jiaoTingCard_ = jiaoTingCard_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info.getDefaultInstance()) return this;
        if (other.hasHandCardNum()) {
          setHandCardNum(other.getHandCardNum());
        }
        if (!other.wallCards_.isEmpty()) {
          if (wallCards_.isEmpty()) {
            wallCards_ = other.wallCards_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureWallCardsIsMutable();
            wallCards_.addAll(other.wallCards_);
          }
          onChanged();
        }
        if (!other.gangCards_.isEmpty()) {
          if (gangCards_.isEmpty()) {
            gangCards_ = other.gangCards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureGangCardsIsMutable();
            gangCards_.addAll(other.gangCards_);
          }
          onChanged();
        }
        if (other.hasAngangCardNum()) {
          setAngangCardNum(other.getAngangCardNum());
        }
        if (!other.pengCards_.isEmpty()) {
          if (pengCards_.isEmpty()) {
            pengCards_ = other.pengCards_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensurePengCardsIsMutable();
            pengCards_.addAll(other.pengCards_);
          }
          onChanged();
        }
        if (chiCardsBuilder_ == null) {
          if (!other.chiCards_.isEmpty()) {
            if (chiCards_.isEmpty()) {
              chiCards_ = other.chiCards_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureChiCardsIsMutable();
              chiCards_.addAll(other.chiCards_);
            }
            onChanged();
          }
        } else {
          if (!other.chiCards_.isEmpty()) {
            if (chiCardsBuilder_.isEmpty()) {
              chiCardsBuilder_.dispose();
              chiCardsBuilder_ = null;
              chiCards_ = other.chiCards_;
              bitField0_ = (bitField0_ & ~0x00000020);
              chiCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChiCardsFieldBuilder() : null;
            } else {
              chiCardsBuilder_.addAllMessages(other.chiCards_);
            }
          }
        }
        if (!other.flowerCards_.isEmpty()) {
          if (flowerCards_.isEmpty()) {
            flowerCards_ = other.flowerCards_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureFlowerCardsIsMutable();
            flowerCards_.addAll(other.flowerCards_);
          }
          onChanged();
        }
        if (!other.huCards_.isEmpty()) {
          if (huCards_.isEmpty()) {
            huCards_ = other.huCards_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureHuCardsIsMutable();
            huCards_.addAll(other.huCards_);
          }
          onChanged();
        }
        if (other.hasJiaoTingCard()) {
          setJiaoTingCard(other.getJiaoTingCard());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.msg_room_info) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 hand_card_num = 1;
      private int handCardNum_ ;
      /**
       * <code>optional int32 hand_card_num = 1;</code>
       *
       * <pre>
       *玩家手牌的数量	
       * </pre>
       */
      public boolean hasHandCardNum() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 hand_card_num = 1;</code>
       *
       * <pre>
       *玩家手牌的数量	
       * </pre>
       */
      public int getHandCardNum() {
        return handCardNum_;
      }
      /**
       * <code>optional int32 hand_card_num = 1;</code>
       *
       * <pre>
       *玩家手牌的数量	
       * </pre>
       */
      public Builder setHandCardNum(int value) {
        bitField0_ |= 0x00000001;
        handCardNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hand_card_num = 1;</code>
       *
       * <pre>
       *玩家手牌的数量	
       * </pre>
       */
      public Builder clearHandCardNum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        handCardNum_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 wall_cards = 2;
      private java.util.List<java.lang.Integer> wallCards_ = java.util.Collections.emptyList();
      private void ensureWallCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          wallCards_ = new java.util.ArrayList<java.lang.Integer>(wallCards_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 wall_cards = 2;</code>
       *
       * <pre>
       *已出的墙牌	
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWallCardsList() {
        return java.util.Collections.unmodifiableList(wallCards_);
      }
      /**
       * <code>repeated int32 wall_cards = 2;</code>
       *
       * <pre>
       *已出的墙牌	
       * </pre>
       */
      public int getWallCardsCount() {
        return wallCards_.size();
      }
      /**
       * <code>repeated int32 wall_cards = 2;</code>
       *
       * <pre>
       *已出的墙牌	
       * </pre>
       */
      public int getWallCards(int index) {
        return wallCards_.get(index);
      }
      /**
       * <code>repeated int32 wall_cards = 2;</code>
       *
       * <pre>
       *已出的墙牌	
       * </pre>
       */
      public Builder setWallCards(
          int index, int value) {
        ensureWallCardsIsMutable();
        wallCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 wall_cards = 2;</code>
       *
       * <pre>
       *已出的墙牌	
       * </pre>
       */
      public Builder addWallCards(int value) {
        ensureWallCardsIsMutable();
        wallCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 wall_cards = 2;</code>
       *
       * <pre>
       *已出的墙牌	
       * </pre>
       */
      public Builder addAllWallCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWallCardsIsMutable();
        super.addAll(values, wallCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 wall_cards = 2;</code>
       *
       * <pre>
       *已出的墙牌	
       * </pre>
       */
      public Builder clearWallCards() {
        wallCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 gang_cards = 3;
      private java.util.List<java.lang.Integer> gangCards_ = java.util.Collections.emptyList();
      private void ensureGangCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          gangCards_ = new java.util.ArrayList<java.lang.Integer>(gangCards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 gang_cards = 3;</code>
       *
       * <pre>
       *杠牌的集合，[3,6,8]
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGangCardsList() {
        return java.util.Collections.unmodifiableList(gangCards_);
      }
      /**
       * <code>repeated int32 gang_cards = 3;</code>
       *
       * <pre>
       *杠牌的集合，[3,6,8]
       * </pre>
       */
      public int getGangCardsCount() {
        return gangCards_.size();
      }
      /**
       * <code>repeated int32 gang_cards = 3;</code>
       *
       * <pre>
       *杠牌的集合，[3,6,8]
       * </pre>
       */
      public int getGangCards(int index) {
        return gangCards_.get(index);
      }
      /**
       * <code>repeated int32 gang_cards = 3;</code>
       *
       * <pre>
       *杠牌的集合，[3,6,8]
       * </pre>
       */
      public Builder setGangCards(
          int index, int value) {
        ensureGangCardsIsMutable();
        gangCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gang_cards = 3;</code>
       *
       * <pre>
       *杠牌的集合，[3,6,8]
       * </pre>
       */
      public Builder addGangCards(int value) {
        ensureGangCardsIsMutable();
        gangCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gang_cards = 3;</code>
       *
       * <pre>
       *杠牌的集合，[3,6,8]
       * </pre>
       */
      public Builder addAllGangCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGangCardsIsMutable();
        super.addAll(values, gangCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gang_cards = 3;</code>
       *
       * <pre>
       *杠牌的集合，[3,6,8]
       * </pre>
       */
      public Builder clearGangCards() {
        gangCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 angang_card_num = 4;
      private int angangCardNum_ ;
      /**
       * <code>optional int32 angang_card_num = 4;</code>
       *
       * <pre>
       *暗杠的数量	
       * </pre>
       */
      public boolean hasAngangCardNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 angang_card_num = 4;</code>
       *
       * <pre>
       *暗杠的数量	
       * </pre>
       */
      public int getAngangCardNum() {
        return angangCardNum_;
      }
      /**
       * <code>optional int32 angang_card_num = 4;</code>
       *
       * <pre>
       *暗杠的数量	
       * </pre>
       */
      public Builder setAngangCardNum(int value) {
        bitField0_ |= 0x00000008;
        angangCardNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 angang_card_num = 4;</code>
       *
       * <pre>
       *暗杠的数量	
       * </pre>
       */
      public Builder clearAngangCardNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        angangCardNum_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 peng_cards = 5;
      private java.util.List<java.lang.Integer> pengCards_ = java.util.Collections.emptyList();
      private void ensurePengCardsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          pengCards_ = new java.util.ArrayList<java.lang.Integer>(pengCards_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 peng_cards = 5;</code>
       *
       * <pre>
       *碰牌的集合
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPengCardsList() {
        return java.util.Collections.unmodifiableList(pengCards_);
      }
      /**
       * <code>repeated int32 peng_cards = 5;</code>
       *
       * <pre>
       *碰牌的集合
       * </pre>
       */
      public int getPengCardsCount() {
        return pengCards_.size();
      }
      /**
       * <code>repeated int32 peng_cards = 5;</code>
       *
       * <pre>
       *碰牌的集合
       * </pre>
       */
      public int getPengCards(int index) {
        return pengCards_.get(index);
      }
      /**
       * <code>repeated int32 peng_cards = 5;</code>
       *
       * <pre>
       *碰牌的集合
       * </pre>
       */
      public Builder setPengCards(
          int index, int value) {
        ensurePengCardsIsMutable();
        pengCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 peng_cards = 5;</code>
       *
       * <pre>
       *碰牌的集合
       * </pre>
       */
      public Builder addPengCards(int value) {
        ensurePengCardsIsMutable();
        pengCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 peng_cards = 5;</code>
       *
       * <pre>
       *碰牌的集合
       * </pre>
       */
      public Builder addAllPengCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePengCardsIsMutable();
        super.addAll(values, pengCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 peng_cards = 5;</code>
       *
       * <pre>
       *碰牌的集合
       * </pre>
       */
      public Builder clearPengCards() {
        pengCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;
      private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info> chiCards_ =
        java.util.Collections.emptyList();
      private void ensureChiCardsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          chiCards_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info>(chiCards_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_infoOrBuilder> chiCardsBuilder_;

      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info> getChiCardsList() {
        if (chiCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(chiCards_);
        } else {
          return chiCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public int getChiCardsCount() {
        if (chiCardsBuilder_ == null) {
          return chiCards_.size();
        } else {
          return chiCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info getChiCards(int index) {
        if (chiCardsBuilder_ == null) {
          return chiCards_.get(index);
        } else {
          return chiCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public Builder setChiCards(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info value) {
        if (chiCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChiCardsIsMutable();
          chiCards_.set(index, value);
          onChanged();
        } else {
          chiCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public Builder setChiCards(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.Builder builderForValue) {
        if (chiCardsBuilder_ == null) {
          ensureChiCardsIsMutable();
          chiCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          chiCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public Builder addChiCards(game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info value) {
        if (chiCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChiCardsIsMutable();
          chiCards_.add(value);
          onChanged();
        } else {
          chiCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public Builder addChiCards(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info value) {
        if (chiCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChiCardsIsMutable();
          chiCards_.add(index, value);
          onChanged();
        } else {
          chiCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public Builder addChiCards(
          game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.Builder builderForValue) {
        if (chiCardsBuilder_ == null) {
          ensureChiCardsIsMutable();
          chiCards_.add(builderForValue.build());
          onChanged();
        } else {
          chiCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public Builder addChiCards(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.Builder builderForValue) {
        if (chiCardsBuilder_ == null) {
          ensureChiCardsIsMutable();
          chiCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          chiCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public Builder addAllChiCards(
          java.lang.Iterable<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info> values) {
        if (chiCardsBuilder_ == null) {
          ensureChiCardsIsMutable();
          super.addAll(values, chiCards_);
          onChanged();
        } else {
          chiCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public Builder clearChiCards() {
        if (chiCardsBuilder_ == null) {
          chiCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          chiCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public Builder removeChiCards(int index) {
        if (chiCardsBuilder_ == null) {
          ensureChiCardsIsMutable();
          chiCards_.remove(index);
          onChanged();
        } else {
          chiCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.Builder getChiCardsBuilder(
          int index) {
        return getChiCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_infoOrBuilder getChiCardsOrBuilder(
          int index) {
        if (chiCardsBuilder_ == null) {
          return chiCards_.get(index);  } else {
          return chiCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_infoOrBuilder> 
           getChiCardsOrBuilderList() {
        if (chiCardsBuilder_ != null) {
          return chiCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(chiCards_);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.Builder addChiCardsBuilder() {
        return getChiCardsFieldBuilder().addBuilder(
            game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.Builder addChiCardsBuilder(
          int index) {
        return getChiCardsFieldBuilder().addBuilder(
            index, game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_chi_card_info chiCards = 6;</code>
       *
       * <pre>
       *吃牌数据
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.Builder> 
           getChiCardsBuilderList() {
        return getChiCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_infoOrBuilder> 
          getChiCardsFieldBuilder() {
        if (chiCardsBuilder_ == null) {
          chiCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_infoOrBuilder>(
                  chiCards_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          chiCards_ = null;
        }
        return chiCardsBuilder_;
      }

      // repeated int32 flower_cards = 7;
      private java.util.List<java.lang.Integer> flowerCards_ = java.util.Collections.emptyList();
      private void ensureFlowerCardsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          flowerCards_ = new java.util.ArrayList<java.lang.Integer>(flowerCards_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 flower_cards = 7;</code>
       *
       * <pre>
       *花牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFlowerCardsList() {
        return java.util.Collections.unmodifiableList(flowerCards_);
      }
      /**
       * <code>repeated int32 flower_cards = 7;</code>
       *
       * <pre>
       *花牌
       * </pre>
       */
      public int getFlowerCardsCount() {
        return flowerCards_.size();
      }
      /**
       * <code>repeated int32 flower_cards = 7;</code>
       *
       * <pre>
       *花牌
       * </pre>
       */
      public int getFlowerCards(int index) {
        return flowerCards_.get(index);
      }
      /**
       * <code>repeated int32 flower_cards = 7;</code>
       *
       * <pre>
       *花牌
       * </pre>
       */
      public Builder setFlowerCards(
          int index, int value) {
        ensureFlowerCardsIsMutable();
        flowerCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flower_cards = 7;</code>
       *
       * <pre>
       *花牌
       * </pre>
       */
      public Builder addFlowerCards(int value) {
        ensureFlowerCardsIsMutable();
        flowerCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flower_cards = 7;</code>
       *
       * <pre>
       *花牌
       * </pre>
       */
      public Builder addAllFlowerCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFlowerCardsIsMutable();
        super.addAll(values, flowerCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flower_cards = 7;</code>
       *
       * <pre>
       *花牌
       * </pre>
       */
      public Builder clearFlowerCards() {
        flowerCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 hu_cards = 8;
      private java.util.List<java.lang.Integer> huCards_ = java.util.Collections.emptyList();
      private void ensureHuCardsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          huCards_ = new java.util.ArrayList<java.lang.Integer>(huCards_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 hu_cards = 8;</code>
       *
       * <pre>
       *胡的牌，目前，血流成河有用 
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHuCardsList() {
        return java.util.Collections.unmodifiableList(huCards_);
      }
      /**
       * <code>repeated int32 hu_cards = 8;</code>
       *
       * <pre>
       *胡的牌，目前，血流成河有用 
       * </pre>
       */
      public int getHuCardsCount() {
        return huCards_.size();
      }
      /**
       * <code>repeated int32 hu_cards = 8;</code>
       *
       * <pre>
       *胡的牌，目前，血流成河有用 
       * </pre>
       */
      public int getHuCards(int index) {
        return huCards_.get(index);
      }
      /**
       * <code>repeated int32 hu_cards = 8;</code>
       *
       * <pre>
       *胡的牌，目前，血流成河有用 
       * </pre>
       */
      public Builder setHuCards(
          int index, int value) {
        ensureHuCardsIsMutable();
        huCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hu_cards = 8;</code>
       *
       * <pre>
       *胡的牌，目前，血流成河有用 
       * </pre>
       */
      public Builder addHuCards(int value) {
        ensureHuCardsIsMutable();
        huCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hu_cards = 8;</code>
       *
       * <pre>
       *胡的牌，目前，血流成河有用 
       * </pre>
       */
      public Builder addAllHuCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHuCardsIsMutable();
        super.addAll(values, huCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hu_cards = 8;</code>
       *
       * <pre>
       *胡的牌，目前，血流成河有用 
       * </pre>
       */
      public Builder clearHuCards() {
        huCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // optional int32 jiao_ting_card = 9;
      private int jiaoTingCard_ ;
      /**
       * <code>optional int32 jiao_ting_card = 9;</code>
       *
       * <pre>
       *叫听牌，
       * </pre>
       */
      public boolean hasJiaoTingCard() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 jiao_ting_card = 9;</code>
       *
       * <pre>
       *叫听牌，
       * </pre>
       */
      public int getJiaoTingCard() {
        return jiaoTingCard_;
      }
      /**
       * <code>optional int32 jiao_ting_card = 9;</code>
       *
       * <pre>
       *叫听牌，
       * </pre>
       */
      public Builder setJiaoTingCard(int value) {
        bitField0_ |= 0x00000100;
        jiaoTingCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jiao_ting_card = 9;</code>
       *
       * <pre>
       *叫听牌，
       * </pre>
       */
      public Builder clearJiaoTingCard() {
        bitField0_ = (bitField0_ & ~0x00000100);
        jiaoTingCard_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.msg_room_info)
    }

    static {
      defaultInstance = new msg_room_info(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.msg_room_info)
  }

  public interface msg_dis_room_infoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 playerId = 1;
    /**
     * <code>optional int32 playerId = 1;</code>
     *
     * <pre>
     *提出解散的人
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int32 playerId = 1;</code>
     *
     * <pre>
     *提出解散的人
     * </pre>
     */
    int getPlayerId();

    // repeated int32 agree_poses = 2;
    /**
     * <code>repeated int32 agree_poses = 2;</code>
     *
     * <pre>
     *同意解散的人的列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getAgreePosesList();
    /**
     * <code>repeated int32 agree_poses = 2;</code>
     *
     * <pre>
     *同意解散的人的列表
     * </pre>
     */
    int getAgreePosesCount();
    /**
     * <code>repeated int32 agree_poses = 2;</code>
     *
     * <pre>
     *同意解散的人的列表
     * </pre>
     */
    int getAgreePoses(int index);

    // optional int64 expire_tm = 3;
    /**
     * <code>optional int64 expire_tm = 3;</code>
     *
     * <pre>
     *同意解散的过期时间戳，
     * </pre>
     */
    boolean hasExpireTm();
    /**
     * <code>optional int64 expire_tm = 3;</code>
     *
     * <pre>
     *同意解散的过期时间戳，
     * </pre>
     */
    long getExpireTm();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.msg_dis_room_info}
   *
   * <pre>
   *解散的信息
   * </pre>
   */
  public static final class msg_dis_room_info extends
      com.google.protobuf.GeneratedMessage
      implements msg_dis_room_infoOrBuilder {
    // Use msg_dis_room_info.newBuilder() to construct.
    private msg_dis_room_info(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private msg_dis_room_info(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final msg_dis_room_info defaultInstance;
    public static msg_dis_room_info getDefaultInstance() {
      return defaultInstance;
    }

    public msg_dis_room_info getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private msg_dis_room_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                agreePoses_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              agreePoses_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                agreePoses_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                agreePoses_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              expireTm_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          agreePoses_ = java.util.Collections.unmodifiableList(agreePoses_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_dis_room_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_dis_room_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.Builder.class);
    }

    public static com.google.protobuf.Parser<msg_dis_room_info> PARSER =
        new com.google.protobuf.AbstractParser<msg_dis_room_info>() {
      public msg_dis_room_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new msg_dis_room_info(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<msg_dis_room_info> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 playerId = 1;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private int playerId_;
    /**
     * <code>optional int32 playerId = 1;</code>
     *
     * <pre>
     *提出解散的人
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 playerId = 1;</code>
     *
     * <pre>
     *提出解散的人
     * </pre>
     */
    public int getPlayerId() {
      return playerId_;
    }

    // repeated int32 agree_poses = 2;
    public static final int AGREE_POSES_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> agreePoses_;
    /**
     * <code>repeated int32 agree_poses = 2;</code>
     *
     * <pre>
     *同意解散的人的列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAgreePosesList() {
      return agreePoses_;
    }
    /**
     * <code>repeated int32 agree_poses = 2;</code>
     *
     * <pre>
     *同意解散的人的列表
     * </pre>
     */
    public int getAgreePosesCount() {
      return agreePoses_.size();
    }
    /**
     * <code>repeated int32 agree_poses = 2;</code>
     *
     * <pre>
     *同意解散的人的列表
     * </pre>
     */
    public int getAgreePoses(int index) {
      return agreePoses_.get(index);
    }

    // optional int64 expire_tm = 3;
    public static final int EXPIRE_TM_FIELD_NUMBER = 3;
    private long expireTm_;
    /**
     * <code>optional int64 expire_tm = 3;</code>
     *
     * <pre>
     *同意解散的过期时间戳，
     * </pre>
     */
    public boolean hasExpireTm() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 expire_tm = 3;</code>
     *
     * <pre>
     *同意解散的过期时间戳，
     * </pre>
     */
    public long getExpireTm() {
      return expireTm_;
    }

    private void initFields() {
      playerId_ = 0;
      agreePoses_ = java.util.Collections.emptyList();
      expireTm_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, playerId_);
      }
      for (int i = 0; i < agreePoses_.size(); i++) {
        output.writeInt32(2, agreePoses_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(3, expireTm_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, playerId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < agreePoses_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(agreePoses_.get(i));
        }
        size += dataSize;
        size += 1 * getAgreePosesList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, expireTm_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.msg_dis_room_info}
     *
     * <pre>
     *解散的信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_dis_room_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_dis_room_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        agreePoses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        expireTm_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_dis_room_info_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info build() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info result = new game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          agreePoses_ = java.util.Collections.unmodifiableList(agreePoses_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.agreePoses_ = agreePoses_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.expireTm_ = expireTm_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (!other.agreePoses_.isEmpty()) {
          if (agreePoses_.isEmpty()) {
            agreePoses_ = other.agreePoses_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAgreePosesIsMutable();
            agreePoses_.addAll(other.agreePoses_);
          }
          onChanged();
        }
        if (other.hasExpireTm()) {
          setExpireTm(other.getExpireTm());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.msg_dis_room_info) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 playerId = 1;
      private int playerId_ ;
      /**
       * <code>optional int32 playerId = 1;</code>
       *
       * <pre>
       *提出解散的人
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 playerId = 1;</code>
       *
       * <pre>
       *提出解散的人
       * </pre>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int32 playerId = 1;</code>
       *
       * <pre>
       *提出解散的人
       * </pre>
       */
      public Builder setPlayerId(int value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 playerId = 1;</code>
       *
       * <pre>
       *提出解散的人
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 agree_poses = 2;
      private java.util.List<java.lang.Integer> agreePoses_ = java.util.Collections.emptyList();
      private void ensureAgreePosesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          agreePoses_ = new java.util.ArrayList<java.lang.Integer>(agreePoses_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 agree_poses = 2;</code>
       *
       * <pre>
       *同意解散的人的列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAgreePosesList() {
        return java.util.Collections.unmodifiableList(agreePoses_);
      }
      /**
       * <code>repeated int32 agree_poses = 2;</code>
       *
       * <pre>
       *同意解散的人的列表
       * </pre>
       */
      public int getAgreePosesCount() {
        return agreePoses_.size();
      }
      /**
       * <code>repeated int32 agree_poses = 2;</code>
       *
       * <pre>
       *同意解散的人的列表
       * </pre>
       */
      public int getAgreePoses(int index) {
        return agreePoses_.get(index);
      }
      /**
       * <code>repeated int32 agree_poses = 2;</code>
       *
       * <pre>
       *同意解散的人的列表
       * </pre>
       */
      public Builder setAgreePoses(
          int index, int value) {
        ensureAgreePosesIsMutable();
        agreePoses_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 agree_poses = 2;</code>
       *
       * <pre>
       *同意解散的人的列表
       * </pre>
       */
      public Builder addAgreePoses(int value) {
        ensureAgreePosesIsMutable();
        agreePoses_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 agree_poses = 2;</code>
       *
       * <pre>
       *同意解散的人的列表
       * </pre>
       */
      public Builder addAllAgreePoses(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAgreePosesIsMutable();
        super.addAll(values, agreePoses_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 agree_poses = 2;</code>
       *
       * <pre>
       *同意解散的人的列表
       * </pre>
       */
      public Builder clearAgreePoses() {
        agreePoses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int64 expire_tm = 3;
      private long expireTm_ ;
      /**
       * <code>optional int64 expire_tm = 3;</code>
       *
       * <pre>
       *同意解散的过期时间戳，
       * </pre>
       */
      public boolean hasExpireTm() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 expire_tm = 3;</code>
       *
       * <pre>
       *同意解散的过期时间戳，
       * </pre>
       */
      public long getExpireTm() {
        return expireTm_;
      }
      /**
       * <code>optional int64 expire_tm = 3;</code>
       *
       * <pre>
       *同意解散的过期时间戳，
       * </pre>
       */
      public Builder setExpireTm(long value) {
        bitField0_ |= 0x00000004;
        expireTm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 expire_tm = 3;</code>
       *
       * <pre>
       *同意解散的过期时间戳，
       * </pre>
       */
      public Builder clearExpireTm() {
        bitField0_ = (bitField0_ & ~0x00000004);
        expireTm_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.msg_dis_room_info)
    }

    static {
      defaultInstance = new msg_dis_room_info(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.msg_dis_room_info)
  }

  public interface packetc2l_readyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ready];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ready];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ready];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional int32 seat_pos = 2;
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *玩家的位置
     * </pre>
     */
    boolean hasSeatPos();
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *玩家的位置
     * </pre>
     */
    int getSeatPos();

    // optional bool ready = 3;
    /**
     * <code>optional bool ready = 3;</code>
     *
     * <pre>
     *准备状态，
     * </pre>
     */
    boolean hasReady();
    /**
     * <code>optional bool ready = 3;</code>
     *
     * <pre>
     *准备状态，
     * </pre>
     */
    boolean getReady();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetc2l_ready}
   */
  public static final class packetc2l_ready extends
      com.google.protobuf.GeneratedMessage
      implements packetc2l_readyOrBuilder {
    // Use packetc2l_ready.newBuilder() to construct.
    private packetc2l_ready(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetc2l_ready(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetc2l_ready defaultInstance;
    public static packetc2l_ready getDefaultInstance() {
      return defaultInstance;
    }

    public packetc2l_ready getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetc2l_ready(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seatPos_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ready_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_ready_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_ready_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready.Builder.class);
    }

    public static com.google.protobuf.Parser<packetc2l_ready> PARSER =
        new com.google.protobuf.AbstractParser<packetc2l_ready>() {
      public packetc2l_ready parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetc2l_ready(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetc2l_ready> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ready];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ready];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ready];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional int32 seat_pos = 2;
    public static final int SEAT_POS_FIELD_NUMBER = 2;
    private int seatPos_;
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *玩家的位置
     * </pre>
     */
    public boolean hasSeatPos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *玩家的位置
     * </pre>
     */
    public int getSeatPos() {
      return seatPos_;
    }

    // optional bool ready = 3;
    public static final int READY_FIELD_NUMBER = 3;
    private boolean ready_;
    /**
     * <code>optional bool ready = 3;</code>
     *
     * <pre>
     *准备状态，
     * </pre>
     */
    public boolean hasReady() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool ready = 3;</code>
     *
     * <pre>
     *准备状态，
     * </pre>
     */
    public boolean getReady() {
      return ready_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_ready;
      seatPos_ = 0;
      ready_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seatPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, ready_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, ready_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetc2l_ready}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_readyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_ready_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_ready_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_ready;
        bitField0_ = (bitField0_ & ~0x00000001);
        seatPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ready_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_ready_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready result = new game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatPos_ = seatPos_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ready_ = ready_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasSeatPos()) {
          setSeatPos(other.getSeatPos());
        }
        if (other.hasReady()) {
          setReady(other.getReady());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_ready) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ready];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_ready;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ready];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ready];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ready];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_ready];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_ready;
        onChanged();
        return this;
      }

      // optional int32 seat_pos = 2;
      private int seatPos_ ;
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *玩家的位置
       * </pre>
       */
      public boolean hasSeatPos() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *玩家的位置
       * </pre>
       */
      public int getSeatPos() {
        return seatPos_;
      }
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *玩家的位置
       * </pre>
       */
      public Builder setSeatPos(int value) {
        bitField0_ |= 0x00000002;
        seatPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *玩家的位置
       * </pre>
       */
      public Builder clearSeatPos() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seatPos_ = 0;
        onChanged();
        return this;
      }

      // optional bool ready = 3;
      private boolean ready_ ;
      /**
       * <code>optional bool ready = 3;</code>
       *
       * <pre>
       *准备状态，
       * </pre>
       */
      public boolean hasReady() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool ready = 3;</code>
       *
       * <pre>
       *准备状态，
       * </pre>
       */
      public boolean getReady() {
        return ready_;
      }
      /**
       * <code>optional bool ready = 3;</code>
       *
       * <pre>
       *准备状态，
       * </pre>
       */
      public Builder setReady(boolean value) {
        bitField0_ |= 0x00000004;
        ready_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ready = 3;</code>
       *
       * <pre>
       *准备状态，
       * </pre>
       */
      public Builder clearReady() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ready_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetc2l_ready)
    }

    static {
      defaultInstance = new packetc2l_ready(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetc2l_ready)
  }

  public interface packetl2c_ready_resultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_ready_result];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_ready_result];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_ready_result];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional int32 seat_pos = 2;
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *玩家的位置
     * </pre>
     */
    boolean hasSeatPos();
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *玩家的位置
     * </pre>
     */
    int getSeatPos();

    // optional bool ready = 3;
    /**
     * <code>optional bool ready = 3;</code>
     *
     * <pre>
     *准备状态，
     * </pre>
     */
    boolean hasReady();
    /**
     * <code>optional bool ready = 3;</code>
     *
     * <pre>
     *准备状态，
     * </pre>
     */
    boolean getReady();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_ready_result}
   */
  public static final class packetl2c_ready_result extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_ready_resultOrBuilder {
    // Use packetl2c_ready_result.newBuilder() to construct.
    private packetl2c_ready_result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_ready_result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_ready_result defaultInstance;
    public static packetl2c_ready_result getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_ready_result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_ready_result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seatPos_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ready_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_ready_result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_ready_result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_ready_result> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_ready_result>() {
      public packetl2c_ready_result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_ready_result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_ready_result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_ready_result];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_ready_result];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_ready_result];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional int32 seat_pos = 2;
    public static final int SEAT_POS_FIELD_NUMBER = 2;
    private int seatPos_;
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *玩家的位置
     * </pre>
     */
    public boolean hasSeatPos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *玩家的位置
     * </pre>
     */
    public int getSeatPos() {
      return seatPos_;
    }

    // optional bool ready = 3;
    public static final int READY_FIELD_NUMBER = 3;
    private boolean ready_;
    /**
     * <code>optional bool ready = 3;</code>
     *
     * <pre>
     *准备状态，
     * </pre>
     */
    public boolean hasReady() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool ready = 3;</code>
     *
     * <pre>
     *准备状态，
     * </pre>
     */
    public boolean getReady() {
      return ready_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_ready_result;
      seatPos_ = 0;
      ready_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seatPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, ready_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, ready_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_ready_result}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_resultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_ready_result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_ready_result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_ready_result;
        bitField0_ = (bitField0_ & ~0x00000001);
        seatPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ready_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_ready_result_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatPos_ = seatPos_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ready_ = ready_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasSeatPos()) {
          setSeatPos(other.getSeatPos());
        }
        if (other.hasReady()) {
          setReady(other.getReady());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_ready_result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_ready_result];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_ready_result;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_ready_result];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_ready_result];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_ready_result];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_ready_result];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_ready_result;
        onChanged();
        return this;
      }

      // optional int32 seat_pos = 2;
      private int seatPos_ ;
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *玩家的位置
       * </pre>
       */
      public boolean hasSeatPos() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *玩家的位置
       * </pre>
       */
      public int getSeatPos() {
        return seatPos_;
      }
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *玩家的位置
       * </pre>
       */
      public Builder setSeatPos(int value) {
        bitField0_ |= 0x00000002;
        seatPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *玩家的位置
       * </pre>
       */
      public Builder clearSeatPos() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seatPos_ = 0;
        onChanged();
        return this;
      }

      // optional bool ready = 3;
      private boolean ready_ ;
      /**
       * <code>optional bool ready = 3;</code>
       *
       * <pre>
       *准备状态，
       * </pre>
       */
      public boolean hasReady() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool ready = 3;</code>
       *
       * <pre>
       *准备状态，
       * </pre>
       */
      public boolean getReady() {
        return ready_;
      }
      /**
       * <code>optional bool ready = 3;</code>
       *
       * <pre>
       *准备状态，
       * </pre>
       */
      public Builder setReady(boolean value) {
        bitField0_ |= 0x00000004;
        ready_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ready = 3;</code>
       *
       * <pre>
       *准备状态，
       * </pre>
       */
      public Builder clearReady() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ready_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_ready_result)
    }

    static {
      defaultInstance = new packetl2c_ready_result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_ready_result)
  }

  public interface msg_circle_over_infoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 type = 1;
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *类型：0－流局；1-胡；2-自摸；
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *类型：0－流局；1-胡；2-自摸；
     * </pre>
     */
    int getType();

    // optional int32 hu_pos = 2;
    /**
     * <code>optional int32 hu_pos = 2;</code>
     *
     * <pre>
     *胡牌位置
     * </pre>
     */
    boolean hasHuPos();
    /**
     * <code>optional int32 hu_pos = 2;</code>
     *
     * <pre>
     *胡牌位置
     * </pre>
     */
    int getHuPos();

    // optional int32 last_pos = 3;
    /**
     * <code>optional int32 last_pos = 3;</code>
     *
     * <pre>
     *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
     * </pre>
     */
    boolean hasLastPos();
    /**
     * <code>optional int32 last_pos = 3;</code>
     *
     * <pre>
     *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
     * </pre>
     */
    int getLastPos();

    // optional int32 circle_num = 4;
    /**
     * <code>optional int32 circle_num = 4;</code>
     *
     * <pre>
     *第几圈
     * </pre>
     */
    boolean hasCircleNum();
    /**
     * <code>optional int32 circle_num = 4;</code>
     *
     * <pre>
     *第几圈
     * </pre>
     */
    int getCircleNum();

    // optional int32 hu_card = 5;
    /**
     * <code>optional int32 hu_card = 5;</code>
     *
     * <pre>
     *默认为0；有值时代表胡的哪张牌
     * </pre>
     */
    boolean hasHuCard();
    /**
     * <code>optional int32 hu_card = 5;</code>
     *
     * <pre>
     *默认为0；有值时代表胡的哪张牌
     * </pre>
     */
    int getHuCard();

    // optional uint64 next_circle_start_tm = 6;
    /**
     * <code>optional uint64 next_circle_start_tm = 6;</code>
     *
     * <pre>
     *下局开始时间戳
     * </pre>
     */
    boolean hasNextCircleStartTm();
    /**
     * <code>optional uint64 next_circle_start_tm = 6;</code>
     *
     * <pre>
     *下局开始时间戳
     * </pre>
     */
    long getNextCircleStartTm();

    // optional bool is_last_circle = 7;
    /**
     * <code>optional bool is_last_circle = 7;</code>
     *
     * <pre>
     *是否是最后一轮
     * </pre>
     */
    boolean hasIsLastCircle();
    /**
     * <code>optional bool is_last_circle = 7;</code>
     *
     * <pre>
     *是否是最后一轮
     * </pre>
     */
    boolean getIsLastCircle();

    // repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
     *
     * <pre>
     *当前轮玩家的信息
     * </pre>
     */
    java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail> 
        getDetailList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
     *
     * <pre>
     *当前轮玩家的信息
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail getDetail(int index);
    /**
     * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
     *
     * <pre>
     *当前轮玩家的信息
     * </pre>
     */
    int getDetailCount();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
     *
     * <pre>
     *当前轮玩家的信息
     * </pre>
     */
    java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detailOrBuilder> 
        getDetailOrBuilderList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
     *
     * <pre>
     *当前轮玩家的信息
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detailOrBuilder getDetailOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.msg_circle_over_info}
   *
   * <pre>
   *一局结束时的信息
   * </pre>
   */
  public static final class msg_circle_over_info extends
      com.google.protobuf.GeneratedMessage
      implements msg_circle_over_infoOrBuilder {
    // Use msg_circle_over_info.newBuilder() to construct.
    private msg_circle_over_info(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private msg_circle_over_info(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final msg_circle_over_info defaultInstance;
    public static msg_circle_over_info getDefaultInstance() {
      return defaultInstance;
    }

    public msg_circle_over_info getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private msg_circle_over_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              huPos_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lastPos_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              circleNum_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              huCard_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              nextCircleStartTm_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              isLastCircle_ = input.readBool();
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                detail_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail>();
                mutable_bitField0_ |= 0x00000080;
              }
              detail_.add(input.readMessage(game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          detail_ = java.util.Collections.unmodifiableList(detail_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_circle_over_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_circle_over_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.Builder.class);
    }

    public static com.google.protobuf.Parser<msg_circle_over_info> PARSER =
        new com.google.protobuf.AbstractParser<msg_circle_over_info>() {
      public msg_circle_over_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new msg_circle_over_info(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<msg_circle_over_info> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *类型：0－流局；1-胡；2-自摸；
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 type = 1;</code>
     *
     * <pre>
     *类型：0－流局；1-胡；2-自摸；
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // optional int32 hu_pos = 2;
    public static final int HU_POS_FIELD_NUMBER = 2;
    private int huPos_;
    /**
     * <code>optional int32 hu_pos = 2;</code>
     *
     * <pre>
     *胡牌位置
     * </pre>
     */
    public boolean hasHuPos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 hu_pos = 2;</code>
     *
     * <pre>
     *胡牌位置
     * </pre>
     */
    public int getHuPos() {
      return huPos_;
    }

    // optional int32 last_pos = 3;
    public static final int LAST_POS_FIELD_NUMBER = 3;
    private int lastPos_;
    /**
     * <code>optional int32 last_pos = 3;</code>
     *
     * <pre>
     *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
     * </pre>
     */
    public boolean hasLastPos() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 last_pos = 3;</code>
     *
     * <pre>
     *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
     * </pre>
     */
    public int getLastPos() {
      return lastPos_;
    }

    // optional int32 circle_num = 4;
    public static final int CIRCLE_NUM_FIELD_NUMBER = 4;
    private int circleNum_;
    /**
     * <code>optional int32 circle_num = 4;</code>
     *
     * <pre>
     *第几圈
     * </pre>
     */
    public boolean hasCircleNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 circle_num = 4;</code>
     *
     * <pre>
     *第几圈
     * </pre>
     */
    public int getCircleNum() {
      return circleNum_;
    }

    // optional int32 hu_card = 5;
    public static final int HU_CARD_FIELD_NUMBER = 5;
    private int huCard_;
    /**
     * <code>optional int32 hu_card = 5;</code>
     *
     * <pre>
     *默认为0；有值时代表胡的哪张牌
     * </pre>
     */
    public boolean hasHuCard() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 hu_card = 5;</code>
     *
     * <pre>
     *默认为0；有值时代表胡的哪张牌
     * </pre>
     */
    public int getHuCard() {
      return huCard_;
    }

    // optional uint64 next_circle_start_tm = 6;
    public static final int NEXT_CIRCLE_START_TM_FIELD_NUMBER = 6;
    private long nextCircleStartTm_;
    /**
     * <code>optional uint64 next_circle_start_tm = 6;</code>
     *
     * <pre>
     *下局开始时间戳
     * </pre>
     */
    public boolean hasNextCircleStartTm() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 next_circle_start_tm = 6;</code>
     *
     * <pre>
     *下局开始时间戳
     * </pre>
     */
    public long getNextCircleStartTm() {
      return nextCircleStartTm_;
    }

    // optional bool is_last_circle = 7;
    public static final int IS_LAST_CIRCLE_FIELD_NUMBER = 7;
    private boolean isLastCircle_;
    /**
     * <code>optional bool is_last_circle = 7;</code>
     *
     * <pre>
     *是否是最后一轮
     * </pre>
     */
    public boolean hasIsLastCircle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool is_last_circle = 7;</code>
     *
     * <pre>
     *是否是最后一轮
     * </pre>
     */
    public boolean getIsLastCircle() {
      return isLastCircle_;
    }

    // repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;
    public static final int DETAIL_FIELD_NUMBER = 8;
    private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail> detail_;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
     *
     * <pre>
     *当前轮玩家的信息
     * </pre>
     */
    public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail> getDetailList() {
      return detail_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
     *
     * <pre>
     *当前轮玩家的信息
     * </pre>
     */
    public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detailOrBuilder> 
        getDetailOrBuilderList() {
      return detail_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
     *
     * <pre>
     *当前轮玩家的信息
     * </pre>
     */
    public int getDetailCount() {
      return detail_.size();
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
     *
     * <pre>
     *当前轮玩家的信息
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail getDetail(int index) {
      return detail_.get(index);
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
     *
     * <pre>
     *当前轮玩家的信息
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detailOrBuilder getDetailOrBuilder(
        int index) {
      return detail_.get(index);
    }

    private void initFields() {
      type_ = 0;
      huPos_ = 0;
      lastPos_ = 0;
      circleNum_ = 0;
      huCard_ = 0;
      nextCircleStartTm_ = 0L;
      isLastCircle_ = false;
      detail_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, huPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lastPos_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, circleNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, huCard_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, nextCircleStartTm_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, isLastCircle_);
      }
      for (int i = 0; i < detail_.size(); i++) {
        output.writeMessage(8, detail_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, huPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lastPos_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, circleNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, huCard_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, nextCircleStartTm_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isLastCircle_);
      }
      for (int i = 0; i < detail_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, detail_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.msg_circle_over_info}
     *
     * <pre>
     *一局结束时的信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_circle_over_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_circle_over_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDetailFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        huPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        lastPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        circleNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        huCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        nextCircleStartTm_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        isLastCircle_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (detailBuilder_ == null) {
          detail_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          detailBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_circle_over_info_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info build() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info result = new game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.huPos_ = huPos_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lastPos_ = lastPos_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.circleNum_ = circleNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.huCard_ = huCard_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.nextCircleStartTm_ = nextCircleStartTm_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isLastCircle_ = isLastCircle_;
        if (detailBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            detail_ = java.util.Collections.unmodifiableList(detail_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.detail_ = detail_;
        } else {
          result.detail_ = detailBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasHuPos()) {
          setHuPos(other.getHuPos());
        }
        if (other.hasLastPos()) {
          setLastPos(other.getLastPos());
        }
        if (other.hasCircleNum()) {
          setCircleNum(other.getCircleNum());
        }
        if (other.hasHuCard()) {
          setHuCard(other.getHuCard());
        }
        if (other.hasNextCircleStartTm()) {
          setNextCircleStartTm(other.getNextCircleStartTm());
        }
        if (other.hasIsLastCircle()) {
          setIsLastCircle(other.getIsLastCircle());
        }
        if (detailBuilder_ == null) {
          if (!other.detail_.isEmpty()) {
            if (detail_.isEmpty()) {
              detail_ = other.detail_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureDetailIsMutable();
              detail_.addAll(other.detail_);
            }
            onChanged();
          }
        } else {
          if (!other.detail_.isEmpty()) {
            if (detailBuilder_.isEmpty()) {
              detailBuilder_.dispose();
              detailBuilder_ = null;
              detail_ = other.detail_;
              bitField0_ = (bitField0_ & ~0x00000080);
              detailBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDetailFieldBuilder() : null;
            } else {
              detailBuilder_.addAllMessages(other.detail_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_info) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 type = 1;
      private int type_ ;
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *类型：0－流局；1-胡；2-自摸；
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *类型：0－流局；1-胡；2-自摸；
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *类型：0－流局；1-胡；2-自摸；
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 1;</code>
       *
       * <pre>
       *类型：0－流局；1-胡；2-自摸；
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hu_pos = 2;
      private int huPos_ ;
      /**
       * <code>optional int32 hu_pos = 2;</code>
       *
       * <pre>
       *胡牌位置
       * </pre>
       */
      public boolean hasHuPos() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 hu_pos = 2;</code>
       *
       * <pre>
       *胡牌位置
       * </pre>
       */
      public int getHuPos() {
        return huPos_;
      }
      /**
       * <code>optional int32 hu_pos = 2;</code>
       *
       * <pre>
       *胡牌位置
       * </pre>
       */
      public Builder setHuPos(int value) {
        bitField0_ |= 0x00000002;
        huPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hu_pos = 2;</code>
       *
       * <pre>
       *胡牌位置
       * </pre>
       */
      public Builder clearHuPos() {
        bitField0_ = (bitField0_ & ~0x00000002);
        huPos_ = 0;
        onChanged();
        return this;
      }

      // optional int32 last_pos = 3;
      private int lastPos_ ;
      /**
       * <code>optional int32 last_pos = 3;</code>
       *
       * <pre>
       *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
       * </pre>
       */
      public boolean hasLastPos() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 last_pos = 3;</code>
       *
       * <pre>
       *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
       * </pre>
       */
      public int getLastPos() {
        return lastPos_;
      }
      /**
       * <code>optional int32 last_pos = 3;</code>
       *
       * <pre>
       *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
       * </pre>
       */
      public Builder setLastPos(int value) {
        bitField0_ |= 0x00000004;
        lastPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 last_pos = 3;</code>
       *
       * <pre>
       *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
       * </pre>
       */
      public Builder clearLastPos() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lastPos_ = 0;
        onChanged();
        return this;
      }

      // optional int32 circle_num = 4;
      private int circleNum_ ;
      /**
       * <code>optional int32 circle_num = 4;</code>
       *
       * <pre>
       *第几圈
       * </pre>
       */
      public boolean hasCircleNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 circle_num = 4;</code>
       *
       * <pre>
       *第几圈
       * </pre>
       */
      public int getCircleNum() {
        return circleNum_;
      }
      /**
       * <code>optional int32 circle_num = 4;</code>
       *
       * <pre>
       *第几圈
       * </pre>
       */
      public Builder setCircleNum(int value) {
        bitField0_ |= 0x00000008;
        circleNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 circle_num = 4;</code>
       *
       * <pre>
       *第几圈
       * </pre>
       */
      public Builder clearCircleNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        circleNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hu_card = 5;
      private int huCard_ ;
      /**
       * <code>optional int32 hu_card = 5;</code>
       *
       * <pre>
       *默认为0；有值时代表胡的哪张牌
       * </pre>
       */
      public boolean hasHuCard() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 hu_card = 5;</code>
       *
       * <pre>
       *默认为0；有值时代表胡的哪张牌
       * </pre>
       */
      public int getHuCard() {
        return huCard_;
      }
      /**
       * <code>optional int32 hu_card = 5;</code>
       *
       * <pre>
       *默认为0；有值时代表胡的哪张牌
       * </pre>
       */
      public Builder setHuCard(int value) {
        bitField0_ |= 0x00000010;
        huCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hu_card = 5;</code>
       *
       * <pre>
       *默认为0；有值时代表胡的哪张牌
       * </pre>
       */
      public Builder clearHuCard() {
        bitField0_ = (bitField0_ & ~0x00000010);
        huCard_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 next_circle_start_tm = 6;
      private long nextCircleStartTm_ ;
      /**
       * <code>optional uint64 next_circle_start_tm = 6;</code>
       *
       * <pre>
       *下局开始时间戳
       * </pre>
       */
      public boolean hasNextCircleStartTm() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 next_circle_start_tm = 6;</code>
       *
       * <pre>
       *下局开始时间戳
       * </pre>
       */
      public long getNextCircleStartTm() {
        return nextCircleStartTm_;
      }
      /**
       * <code>optional uint64 next_circle_start_tm = 6;</code>
       *
       * <pre>
       *下局开始时间戳
       * </pre>
       */
      public Builder setNextCircleStartTm(long value) {
        bitField0_ |= 0x00000020;
        nextCircleStartTm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 next_circle_start_tm = 6;</code>
       *
       * <pre>
       *下局开始时间戳
       * </pre>
       */
      public Builder clearNextCircleStartTm() {
        bitField0_ = (bitField0_ & ~0x00000020);
        nextCircleStartTm_ = 0L;
        onChanged();
        return this;
      }

      // optional bool is_last_circle = 7;
      private boolean isLastCircle_ ;
      /**
       * <code>optional bool is_last_circle = 7;</code>
       *
       * <pre>
       *是否是最后一轮
       * </pre>
       */
      public boolean hasIsLastCircle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool is_last_circle = 7;</code>
       *
       * <pre>
       *是否是最后一轮
       * </pre>
       */
      public boolean getIsLastCircle() {
        return isLastCircle_;
      }
      /**
       * <code>optional bool is_last_circle = 7;</code>
       *
       * <pre>
       *是否是最后一轮
       * </pre>
       */
      public Builder setIsLastCircle(boolean value) {
        bitField0_ |= 0x00000040;
        isLastCircle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_last_circle = 7;</code>
       *
       * <pre>
       *是否是最后一轮
       * </pre>
       */
      public Builder clearIsLastCircle() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isLastCircle_ = false;
        onChanged();
        return this;
      }

      // repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;
      private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail> detail_ =
        java.util.Collections.emptyList();
      private void ensureDetailIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          detail_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail>(detail_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detailOrBuilder> detailBuilder_;

      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail> getDetailList() {
        if (detailBuilder_ == null) {
          return java.util.Collections.unmodifiableList(detail_);
        } else {
          return detailBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public int getDetailCount() {
        if (detailBuilder_ == null) {
          return detail_.size();
        } else {
          return detailBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail getDetail(int index) {
        if (detailBuilder_ == null) {
          return detail_.get(index);
        } else {
          return detailBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public Builder setDetail(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailIsMutable();
          detail_.set(index, value);
          onChanged();
        } else {
          detailBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public Builder setDetail(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.Builder builderForValue) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.set(index, builderForValue.build());
          onChanged();
        } else {
          detailBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public Builder addDetail(game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailIsMutable();
          detail_.add(value);
          onChanged();
        } else {
          detailBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public Builder addDetail(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail value) {
        if (detailBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailIsMutable();
          detail_.add(index, value);
          onChanged();
        } else {
          detailBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public Builder addDetail(
          game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.Builder builderForValue) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.add(builderForValue.build());
          onChanged();
        } else {
          detailBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public Builder addDetail(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.Builder builderForValue) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.add(index, builderForValue.build());
          onChanged();
        } else {
          detailBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public Builder addAllDetail(
          java.lang.Iterable<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail> values) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          super.addAll(values, detail_);
          onChanged();
        } else {
          detailBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public Builder clearDetail() {
        if (detailBuilder_ == null) {
          detail_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          detailBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public Builder removeDetail(int index) {
        if (detailBuilder_ == null) {
          ensureDetailIsMutable();
          detail_.remove(index);
          onChanged();
        } else {
          detailBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.Builder getDetailBuilder(
          int index) {
        return getDetailFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detailOrBuilder getDetailOrBuilder(
          int index) {
        if (detailBuilder_ == null) {
          return detail_.get(index);  } else {
          return detailBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detailOrBuilder> 
           getDetailOrBuilderList() {
        if (detailBuilder_ != null) {
          return detailBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(detail_);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.Builder addDetailBuilder() {
        return getDetailFieldBuilder().addBuilder(
            game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.Builder addDetailBuilder(
          int index) {
        return getDetailFieldBuilder().addBuilder(
            index, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_circle_over_detail detail = 8;</code>
       *
       * <pre>
       *当前轮玩家的信息
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.Builder> 
           getDetailBuilderList() {
        return getDetailFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detailOrBuilder> 
          getDetailFieldBuilder() {
        if (detailBuilder_ == null) {
          detailBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detailOrBuilder>(
                  detail_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          detail_ = null;
        }
        return detailBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.msg_circle_over_info)
    }

    static {
      defaultInstance = new msg_circle_over_info(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.msg_circle_over_info)
  }

  public interface msg_circle_over_detailOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 pos = 1;
    /**
     * <code>optional int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    boolean hasPos();
    /**
     * <code>optional int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    int getPos();

    // optional int32 ting_card = 2;
    /**
     * <code>optional int32 ting_card = 2;</code>
     *
     * <pre>
     *每个人叫听情况,如果没有，则为0
     * </pre>
     */
    boolean hasTingCard();
    /**
     * <code>optional int32 ting_card = 2;</code>
     *
     * <pre>
     *每个人叫听情况,如果没有，则为0
     * </pre>
     */
    int getTingCard();

    // optional string hu_name = 3;
    /**
     * <code>optional string hu_name = 3;</code>
     *
     * <pre>
     *胡牌后的名字
     * </pre>
     */
    boolean hasHuName();
    /**
     * <code>optional string hu_name = 3;</code>
     *
     * <pre>
     *胡牌后的名字
     * </pre>
     */
    java.lang.String getHuName();
    /**
     * <code>optional string hu_name = 3;</code>
     *
     * <pre>
     *胡牌后的名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getHuNameBytes();

    // optional int32 fen = 4;
    /**
     * <code>optional int32 fen = 4;</code>
     *
     * <pre>
     *获得的分的数量
     * </pre>
     */
    boolean hasFen();
    /**
     * <code>optional int32 fen = 4;</code>
     *
     * <pre>
     *获得的分的数量
     * </pre>
     */
    int getFen();

    // optional int32 hua = 5;
    /**
     * <code>optional int32 hua = 5;</code>
     *
     * <pre>
     *获得的花的数量
     * </pre>
     */
    boolean hasHua();
    /**
     * <code>optional int32 hua = 5;</code>
     *
     * <pre>
     *获得的花的数量
     * </pre>
     */
    int getHua();

    // repeated int32 hand_cards = 6;
    /**
     * <code>repeated int32 hand_cards = 6;</code>
     *
     * <pre>
     *玩家的手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandCardsList();
    /**
     * <code>repeated int32 hand_cards = 6;</code>
     *
     * <pre>
     *玩家的手牌
     * </pre>
     */
    int getHandCardsCount();
    /**
     * <code>repeated int32 hand_cards = 6;</code>
     *
     * <pre>
     *玩家的手牌
     * </pre>
     */
    int getHandCards(int index);

    // repeated int32 wall_cards = 7;
    /**
     * <code>repeated int32 wall_cards = 7;</code>
     *
     * <pre>
     *桌子自己的墙牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getWallCardsList();
    /**
     * <code>repeated int32 wall_cards = 7;</code>
     *
     * <pre>
     *桌子自己的墙牌
     * </pre>
     */
    int getWallCardsCount();
    /**
     * <code>repeated int32 wall_cards = 7;</code>
     *
     * <pre>
     *桌子自己的墙牌
     * </pre>
     */
    int getWallCards(int index);

    // repeated int32 out_cards = 8;
    /**
     * <code>repeated int32 out_cards = 8;</code>
     *
     * <pre>
     *玩家自己出的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getOutCardsList();
    /**
     * <code>repeated int32 out_cards = 8;</code>
     *
     * <pre>
     *玩家自己出的牌
     * </pre>
     */
    int getOutCardsCount();
    /**
     * <code>repeated int32 out_cards = 8;</code>
     *
     * <pre>
     *玩家自己出的牌
     * </pre>
     */
    int getOutCards(int index);

    // repeated int32 hua_cards = 9;
    /**
     * <code>repeated int32 hua_cards = 9;</code>
     *
     * <pre>
     *玩家的花牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getHuaCardsList();
    /**
     * <code>repeated int32 hua_cards = 9;</code>
     *
     * <pre>
     *玩家的花牌
     * </pre>
     */
    int getHuaCardsCount();
    /**
     * <code>repeated int32 hua_cards = 9;</code>
     *
     * <pre>
     *玩家的花牌
     * </pre>
     */
    int getHuaCards(int index);
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.msg_circle_over_detail}
   */
  public static final class msg_circle_over_detail extends
      com.google.protobuf.GeneratedMessage
      implements msg_circle_over_detailOrBuilder {
    // Use msg_circle_over_detail.newBuilder() to construct.
    private msg_circle_over_detail(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private msg_circle_over_detail(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final msg_circle_over_detail defaultInstance;
    public static msg_circle_over_detail getDefaultInstance() {
      return defaultInstance;
    }

    public msg_circle_over_detail getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private msg_circle_over_detail(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              pos_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tingCard_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              huName_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              fen_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              hua_ = input.readInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                handCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              handCards_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                handCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                handCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                wallCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              wallCards_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                wallCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                wallCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                outCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              outCards_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                outCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                outCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                huaCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              huaCards_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                huaCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                huaCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          handCards_ = java.util.Collections.unmodifiableList(handCards_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          wallCards_ = java.util.Collections.unmodifiableList(wallCards_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          outCards_ = java.util.Collections.unmodifiableList(outCards_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          huaCards_ = java.util.Collections.unmodifiableList(huaCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_circle_over_detail_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_circle_over_detail_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.Builder.class);
    }

    public static com.google.protobuf.Parser<msg_circle_over_detail> PARSER =
        new com.google.protobuf.AbstractParser<msg_circle_over_detail>() {
      public msg_circle_over_detail parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new msg_circle_over_detail(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<msg_circle_over_detail> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 pos = 1;
    public static final int POS_FIELD_NUMBER = 1;
    private int pos_;
    /**
     * <code>optional int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public boolean hasPos() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 pos = 1;</code>
     *
     * <pre>
     *位置
     * </pre>
     */
    public int getPos() {
      return pos_;
    }

    // optional int32 ting_card = 2;
    public static final int TING_CARD_FIELD_NUMBER = 2;
    private int tingCard_;
    /**
     * <code>optional int32 ting_card = 2;</code>
     *
     * <pre>
     *每个人叫听情况,如果没有，则为0
     * </pre>
     */
    public boolean hasTingCard() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 ting_card = 2;</code>
     *
     * <pre>
     *每个人叫听情况,如果没有，则为0
     * </pre>
     */
    public int getTingCard() {
      return tingCard_;
    }

    // optional string hu_name = 3;
    public static final int HU_NAME_FIELD_NUMBER = 3;
    private java.lang.Object huName_;
    /**
     * <code>optional string hu_name = 3;</code>
     *
     * <pre>
     *胡牌后的名字
     * </pre>
     */
    public boolean hasHuName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string hu_name = 3;</code>
     *
     * <pre>
     *胡牌后的名字
     * </pre>
     */
    public java.lang.String getHuName() {
      java.lang.Object ref = huName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          huName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string hu_name = 3;</code>
     *
     * <pre>
     *胡牌后的名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHuNameBytes() {
      java.lang.Object ref = huName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        huName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 fen = 4;
    public static final int FEN_FIELD_NUMBER = 4;
    private int fen_;
    /**
     * <code>optional int32 fen = 4;</code>
     *
     * <pre>
     *获得的分的数量
     * </pre>
     */
    public boolean hasFen() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 fen = 4;</code>
     *
     * <pre>
     *获得的分的数量
     * </pre>
     */
    public int getFen() {
      return fen_;
    }

    // optional int32 hua = 5;
    public static final int HUA_FIELD_NUMBER = 5;
    private int hua_;
    /**
     * <code>optional int32 hua = 5;</code>
     *
     * <pre>
     *获得的花的数量
     * </pre>
     */
    public boolean hasHua() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 hua = 5;</code>
     *
     * <pre>
     *获得的花的数量
     * </pre>
     */
    public int getHua() {
      return hua_;
    }

    // repeated int32 hand_cards = 6;
    public static final int HAND_CARDS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> handCards_;
    /**
     * <code>repeated int32 hand_cards = 6;</code>
     *
     * <pre>
     *玩家的手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandCardsList() {
      return handCards_;
    }
    /**
     * <code>repeated int32 hand_cards = 6;</code>
     *
     * <pre>
     *玩家的手牌
     * </pre>
     */
    public int getHandCardsCount() {
      return handCards_.size();
    }
    /**
     * <code>repeated int32 hand_cards = 6;</code>
     *
     * <pre>
     *玩家的手牌
     * </pre>
     */
    public int getHandCards(int index) {
      return handCards_.get(index);
    }

    // repeated int32 wall_cards = 7;
    public static final int WALL_CARDS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> wallCards_;
    /**
     * <code>repeated int32 wall_cards = 7;</code>
     *
     * <pre>
     *桌子自己的墙牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWallCardsList() {
      return wallCards_;
    }
    /**
     * <code>repeated int32 wall_cards = 7;</code>
     *
     * <pre>
     *桌子自己的墙牌
     * </pre>
     */
    public int getWallCardsCount() {
      return wallCards_.size();
    }
    /**
     * <code>repeated int32 wall_cards = 7;</code>
     *
     * <pre>
     *桌子自己的墙牌
     * </pre>
     */
    public int getWallCards(int index) {
      return wallCards_.get(index);
    }

    // repeated int32 out_cards = 8;
    public static final int OUT_CARDS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> outCards_;
    /**
     * <code>repeated int32 out_cards = 8;</code>
     *
     * <pre>
     *玩家自己出的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOutCardsList() {
      return outCards_;
    }
    /**
     * <code>repeated int32 out_cards = 8;</code>
     *
     * <pre>
     *玩家自己出的牌
     * </pre>
     */
    public int getOutCardsCount() {
      return outCards_.size();
    }
    /**
     * <code>repeated int32 out_cards = 8;</code>
     *
     * <pre>
     *玩家自己出的牌
     * </pre>
     */
    public int getOutCards(int index) {
      return outCards_.get(index);
    }

    // repeated int32 hua_cards = 9;
    public static final int HUA_CARDS_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> huaCards_;
    /**
     * <code>repeated int32 hua_cards = 9;</code>
     *
     * <pre>
     *玩家的花牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHuaCardsList() {
      return huaCards_;
    }
    /**
     * <code>repeated int32 hua_cards = 9;</code>
     *
     * <pre>
     *玩家的花牌
     * </pre>
     */
    public int getHuaCardsCount() {
      return huaCards_.size();
    }
    /**
     * <code>repeated int32 hua_cards = 9;</code>
     *
     * <pre>
     *玩家的花牌
     * </pre>
     */
    public int getHuaCards(int index) {
      return huaCards_.get(index);
    }

    private void initFields() {
      pos_ = 0;
      tingCard_ = 0;
      huName_ = "";
      fen_ = 0;
      hua_ = 0;
      handCards_ = java.util.Collections.emptyList();
      wallCards_ = java.util.Collections.emptyList();
      outCards_ = java.util.Collections.emptyList();
      huaCards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, pos_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, tingCard_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getHuNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, fen_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, hua_);
      }
      for (int i = 0; i < handCards_.size(); i++) {
        output.writeInt32(6, handCards_.get(i));
      }
      for (int i = 0; i < wallCards_.size(); i++) {
        output.writeInt32(7, wallCards_.get(i));
      }
      for (int i = 0; i < outCards_.size(); i++) {
        output.writeInt32(8, outCards_.get(i));
      }
      for (int i = 0; i < huaCards_.size(); i++) {
        output.writeInt32(9, huaCards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pos_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, tingCard_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getHuNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, fen_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, hua_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handCards_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < wallCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(wallCards_.get(i));
        }
        size += dataSize;
        size += 1 * getWallCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(outCards_.get(i));
        }
        size += dataSize;
        size += 1 * getOutCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < huaCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(huaCards_.get(i));
        }
        size += dataSize;
        size += 1 * getHuaCardsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.msg_circle_over_detail}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detailOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_circle_over_detail_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_circle_over_detail_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tingCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        huName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        fen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        hua_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        handCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        wallCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        outCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        huaCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_circle_over_detail_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail build() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail result = new game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pos_ = pos_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tingCard_ = tingCard_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.huName_ = huName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fen_ = fen_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hua_ = hua_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          handCards_ = java.util.Collections.unmodifiableList(handCards_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.handCards_ = handCards_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          wallCards_ = java.util.Collections.unmodifiableList(wallCards_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.wallCards_ = wallCards_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          outCards_ = java.util.Collections.unmodifiableList(outCards_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.outCards_ = outCards_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          huaCards_ = java.util.Collections.unmodifiableList(huaCards_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.huaCards_ = huaCards_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail.getDefaultInstance()) return this;
        if (other.hasPos()) {
          setPos(other.getPos());
        }
        if (other.hasTingCard()) {
          setTingCard(other.getTingCard());
        }
        if (other.hasHuName()) {
          bitField0_ |= 0x00000004;
          huName_ = other.huName_;
          onChanged();
        }
        if (other.hasFen()) {
          setFen(other.getFen());
        }
        if (other.hasHua()) {
          setHua(other.getHua());
        }
        if (!other.handCards_.isEmpty()) {
          if (handCards_.isEmpty()) {
            handCards_ = other.handCards_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureHandCardsIsMutable();
            handCards_.addAll(other.handCards_);
          }
          onChanged();
        }
        if (!other.wallCards_.isEmpty()) {
          if (wallCards_.isEmpty()) {
            wallCards_ = other.wallCards_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureWallCardsIsMutable();
            wallCards_.addAll(other.wallCards_);
          }
          onChanged();
        }
        if (!other.outCards_.isEmpty()) {
          if (outCards_.isEmpty()) {
            outCards_ = other.outCards_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureOutCardsIsMutable();
            outCards_.addAll(other.outCards_);
          }
          onChanged();
        }
        if (!other.huaCards_.isEmpty()) {
          if (huaCards_.isEmpty()) {
            huaCards_ = other.huaCards_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureHuaCardsIsMutable();
            huaCards_.addAll(other.huaCards_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.msg_circle_over_detail) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 pos = 1;
      private int pos_ ;
      /**
       * <code>optional int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public boolean hasPos() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public int getPos() {
        return pos_;
      }
      /**
       * <code>optional int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder setPos(int value) {
        bitField0_ |= 0x00000001;
        pos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pos = 1;</code>
       *
       * <pre>
       *位置
       * </pre>
       */
      public Builder clearPos() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pos_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ting_card = 2;
      private int tingCard_ ;
      /**
       * <code>optional int32 ting_card = 2;</code>
       *
       * <pre>
       *每个人叫听情况,如果没有，则为0
       * </pre>
       */
      public boolean hasTingCard() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 ting_card = 2;</code>
       *
       * <pre>
       *每个人叫听情况,如果没有，则为0
       * </pre>
       */
      public int getTingCard() {
        return tingCard_;
      }
      /**
       * <code>optional int32 ting_card = 2;</code>
       *
       * <pre>
       *每个人叫听情况,如果没有，则为0
       * </pre>
       */
      public Builder setTingCard(int value) {
        bitField0_ |= 0x00000002;
        tingCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ting_card = 2;</code>
       *
       * <pre>
       *每个人叫听情况,如果没有，则为0
       * </pre>
       */
      public Builder clearTingCard() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tingCard_ = 0;
        onChanged();
        return this;
      }

      // optional string hu_name = 3;
      private java.lang.Object huName_ = "";
      /**
       * <code>optional string hu_name = 3;</code>
       *
       * <pre>
       *胡牌后的名字
       * </pre>
       */
      public boolean hasHuName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string hu_name = 3;</code>
       *
       * <pre>
       *胡牌后的名字
       * </pre>
       */
      public java.lang.String getHuName() {
        java.lang.Object ref = huName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          huName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string hu_name = 3;</code>
       *
       * <pre>
       *胡牌后的名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHuNameBytes() {
        java.lang.Object ref = huName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          huName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string hu_name = 3;</code>
       *
       * <pre>
       *胡牌后的名字
       * </pre>
       */
      public Builder setHuName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        huName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string hu_name = 3;</code>
       *
       * <pre>
       *胡牌后的名字
       * </pre>
       */
      public Builder clearHuName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        huName_ = getDefaultInstance().getHuName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string hu_name = 3;</code>
       *
       * <pre>
       *胡牌后的名字
       * </pre>
       */
      public Builder setHuNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        huName_ = value;
        onChanged();
        return this;
      }

      // optional int32 fen = 4;
      private int fen_ ;
      /**
       * <code>optional int32 fen = 4;</code>
       *
       * <pre>
       *获得的分的数量
       * </pre>
       */
      public boolean hasFen() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 fen = 4;</code>
       *
       * <pre>
       *获得的分的数量
       * </pre>
       */
      public int getFen() {
        return fen_;
      }
      /**
       * <code>optional int32 fen = 4;</code>
       *
       * <pre>
       *获得的分的数量
       * </pre>
       */
      public Builder setFen(int value) {
        bitField0_ |= 0x00000008;
        fen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fen = 4;</code>
       *
       * <pre>
       *获得的分的数量
       * </pre>
       */
      public Builder clearFen() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fen_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hua = 5;
      private int hua_ ;
      /**
       * <code>optional int32 hua = 5;</code>
       *
       * <pre>
       *获得的花的数量
       * </pre>
       */
      public boolean hasHua() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 hua = 5;</code>
       *
       * <pre>
       *获得的花的数量
       * </pre>
       */
      public int getHua() {
        return hua_;
      }
      /**
       * <code>optional int32 hua = 5;</code>
       *
       * <pre>
       *获得的花的数量
       * </pre>
       */
      public Builder setHua(int value) {
        bitField0_ |= 0x00000010;
        hua_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hua = 5;</code>
       *
       * <pre>
       *获得的花的数量
       * </pre>
       */
      public Builder clearHua() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hua_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 hand_cards = 6;
      private java.util.List<java.lang.Integer> handCards_ = java.util.Collections.emptyList();
      private void ensureHandCardsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          handCards_ = new java.util.ArrayList<java.lang.Integer>(handCards_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 hand_cards = 6;</code>
       *
       * <pre>
       *玩家的手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandCardsList() {
        return java.util.Collections.unmodifiableList(handCards_);
      }
      /**
       * <code>repeated int32 hand_cards = 6;</code>
       *
       * <pre>
       *玩家的手牌
       * </pre>
       */
      public int getHandCardsCount() {
        return handCards_.size();
      }
      /**
       * <code>repeated int32 hand_cards = 6;</code>
       *
       * <pre>
       *玩家的手牌
       * </pre>
       */
      public int getHandCards(int index) {
        return handCards_.get(index);
      }
      /**
       * <code>repeated int32 hand_cards = 6;</code>
       *
       * <pre>
       *玩家的手牌
       * </pre>
       */
      public Builder setHandCards(
          int index, int value) {
        ensureHandCardsIsMutable();
        handCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_cards = 6;</code>
       *
       * <pre>
       *玩家的手牌
       * </pre>
       */
      public Builder addHandCards(int value) {
        ensureHandCardsIsMutable();
        handCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_cards = 6;</code>
       *
       * <pre>
       *玩家的手牌
       * </pre>
       */
      public Builder addAllHandCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandCardsIsMutable();
        super.addAll(values, handCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hand_cards = 6;</code>
       *
       * <pre>
       *玩家的手牌
       * </pre>
       */
      public Builder clearHandCards() {
        handCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 wall_cards = 7;
      private java.util.List<java.lang.Integer> wallCards_ = java.util.Collections.emptyList();
      private void ensureWallCardsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          wallCards_ = new java.util.ArrayList<java.lang.Integer>(wallCards_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 wall_cards = 7;</code>
       *
       * <pre>
       *桌子自己的墙牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWallCardsList() {
        return java.util.Collections.unmodifiableList(wallCards_);
      }
      /**
       * <code>repeated int32 wall_cards = 7;</code>
       *
       * <pre>
       *桌子自己的墙牌
       * </pre>
       */
      public int getWallCardsCount() {
        return wallCards_.size();
      }
      /**
       * <code>repeated int32 wall_cards = 7;</code>
       *
       * <pre>
       *桌子自己的墙牌
       * </pre>
       */
      public int getWallCards(int index) {
        return wallCards_.get(index);
      }
      /**
       * <code>repeated int32 wall_cards = 7;</code>
       *
       * <pre>
       *桌子自己的墙牌
       * </pre>
       */
      public Builder setWallCards(
          int index, int value) {
        ensureWallCardsIsMutable();
        wallCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 wall_cards = 7;</code>
       *
       * <pre>
       *桌子自己的墙牌
       * </pre>
       */
      public Builder addWallCards(int value) {
        ensureWallCardsIsMutable();
        wallCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 wall_cards = 7;</code>
       *
       * <pre>
       *桌子自己的墙牌
       * </pre>
       */
      public Builder addAllWallCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWallCardsIsMutable();
        super.addAll(values, wallCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 wall_cards = 7;</code>
       *
       * <pre>
       *桌子自己的墙牌
       * </pre>
       */
      public Builder clearWallCards() {
        wallCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 out_cards = 8;
      private java.util.List<java.lang.Integer> outCards_ = java.util.Collections.emptyList();
      private void ensureOutCardsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          outCards_ = new java.util.ArrayList<java.lang.Integer>(outCards_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 out_cards = 8;</code>
       *
       * <pre>
       *玩家自己出的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOutCardsList() {
        return java.util.Collections.unmodifiableList(outCards_);
      }
      /**
       * <code>repeated int32 out_cards = 8;</code>
       *
       * <pre>
       *玩家自己出的牌
       * </pre>
       */
      public int getOutCardsCount() {
        return outCards_.size();
      }
      /**
       * <code>repeated int32 out_cards = 8;</code>
       *
       * <pre>
       *玩家自己出的牌
       * </pre>
       */
      public int getOutCards(int index) {
        return outCards_.get(index);
      }
      /**
       * <code>repeated int32 out_cards = 8;</code>
       *
       * <pre>
       *玩家自己出的牌
       * </pre>
       */
      public Builder setOutCards(
          int index, int value) {
        ensureOutCardsIsMutable();
        outCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards = 8;</code>
       *
       * <pre>
       *玩家自己出的牌
       * </pre>
       */
      public Builder addOutCards(int value) {
        ensureOutCardsIsMutable();
        outCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards = 8;</code>
       *
       * <pre>
       *玩家自己出的牌
       * </pre>
       */
      public Builder addAllOutCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOutCardsIsMutable();
        super.addAll(values, outCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards = 8;</code>
       *
       * <pre>
       *玩家自己出的牌
       * </pre>
       */
      public Builder clearOutCards() {
        outCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated int32 hua_cards = 9;
      private java.util.List<java.lang.Integer> huaCards_ = java.util.Collections.emptyList();
      private void ensureHuaCardsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          huaCards_ = new java.util.ArrayList<java.lang.Integer>(huaCards_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 hua_cards = 9;</code>
       *
       * <pre>
       *玩家的花牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHuaCardsList() {
        return java.util.Collections.unmodifiableList(huaCards_);
      }
      /**
       * <code>repeated int32 hua_cards = 9;</code>
       *
       * <pre>
       *玩家的花牌
       * </pre>
       */
      public int getHuaCardsCount() {
        return huaCards_.size();
      }
      /**
       * <code>repeated int32 hua_cards = 9;</code>
       *
       * <pre>
       *玩家的花牌
       * </pre>
       */
      public int getHuaCards(int index) {
        return huaCards_.get(index);
      }
      /**
       * <code>repeated int32 hua_cards = 9;</code>
       *
       * <pre>
       *玩家的花牌
       * </pre>
       */
      public Builder setHuaCards(
          int index, int value) {
        ensureHuaCardsIsMutable();
        huaCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hua_cards = 9;</code>
       *
       * <pre>
       *玩家的花牌
       * </pre>
       */
      public Builder addHuaCards(int value) {
        ensureHuaCardsIsMutable();
        huaCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hua_cards = 9;</code>
       *
       * <pre>
       *玩家的花牌
       * </pre>
       */
      public Builder addAllHuaCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHuaCardsIsMutable();
        super.addAll(values, huaCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hua_cards = 9;</code>
       *
       * <pre>
       *玩家的花牌
       * </pre>
       */
      public Builder clearHuaCards() {
        huaCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.msg_circle_over_detail)
    }

    static {
      defaultInstance = new msg_circle_over_detail(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.msg_circle_over_detail)
  }

  public interface msg_game_over_infoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.msg_game_over_info}
   *
   * <pre>
   *游戏全部结束时的信息
   * </pre>
   */
  public static final class msg_game_over_info extends
      com.google.protobuf.GeneratedMessage
      implements msg_game_over_infoOrBuilder {
    // Use msg_game_over_info.newBuilder() to construct.
    private msg_game_over_info(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private msg_game_over_info(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final msg_game_over_info defaultInstance;
    public static msg_game_over_info getDefaultInstance() {
      return defaultInstance;
    }

    public msg_game_over_info getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private msg_game_over_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_game_over_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_game_over_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.Builder.class);
    }

    public static com.google.protobuf.Parser<msg_game_over_info> PARSER =
        new com.google.protobuf.AbstractParser<msg_game_over_info>() {
      public msg_game_over_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new msg_game_over_info(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<msg_game_over_info> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.msg_game_over_info}
     *
     * <pre>
     *游戏全部结束时的信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_game_over_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_game_over_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_game_over_info_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info build() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info result = new game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.msg_game_over_info) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.msg_game_over_info)
    }

    static {
      defaultInstance = new msg_game_over_info(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.msg_game_over_info)
  }

  public interface packetc2l_leave_roomOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetc2l_leave_room}
   *
   * <pre>
   *离开桌子
   * </pre>
   */
  public static final class packetc2l_leave_room extends
      com.google.protobuf.GeneratedMessage
      implements packetc2l_leave_roomOrBuilder {
    // Use packetc2l_leave_room.newBuilder() to construct.
    private packetc2l_leave_room(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetc2l_leave_room(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetc2l_leave_room defaultInstance;
    public static packetc2l_leave_room getDefaultInstance() {
      return defaultInstance;
    }

    public packetc2l_leave_room getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetc2l_leave_room(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_leave_room_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_leave_room_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room.Builder.class);
    }

    public static com.google.protobuf.Parser<packetc2l_leave_room> PARSER =
        new com.google.protobuf.AbstractParser<packetc2l_leave_room>() {
      public packetc2l_leave_room parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetc2l_leave_room(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetc2l_leave_room> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_leave_room;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetc2l_leave_room}
     *
     * <pre>
     *离开桌子
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_roomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_leave_room_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_leave_room_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_leave_room;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_leave_room_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room result = new game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_leave_room) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_leave_room;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_leave_room;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetc2l_leave_room)
    }

    static {
      defaultInstance = new packetc2l_leave_room(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetc2l_leave_room)
  }

  public interface packetl2c_leave_room_resultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    msg_type_def.MsgTypeDef.e_msg_result_def getResult();

    // optional int32 seat_pos = 3;
    /**
     * <code>optional int32 seat_pos = 3;</code>
     *
     * <pre>
     *离开的玩家的位置
     * </pre>
     */
    boolean hasSeatPos();
    /**
     * <code>optional int32 seat_pos = 3;</code>
     *
     * <pre>
     *离开的玩家的位置
     * </pre>
     */
    int getSeatPos();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_leave_room_result}
   *
   * <pre>
   *离开桌子返回
   * </pre>
   */
  public static final class packetl2c_leave_room_result extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_leave_room_resultOrBuilder {
    // Use packetl2c_leave_room_result.newBuilder() to construct.
    private packetl2c_leave_room_result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_leave_room_result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_leave_room_result defaultInstance;
    public static packetl2c_leave_room_result getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_leave_room_result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_leave_room_result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              msg_type_def.MsgTypeDef.e_msg_result_def value = msg_type_def.MsgTypeDef.e_msg_result_def.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                result_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              seatPos_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_leave_room_result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_leave_room_result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_leave_room_result> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_leave_room_result>() {
      public packetl2c_leave_room_result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_leave_room_result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_leave_room_result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
    public static final int RESULT_FIELD_NUMBER = 2;
    private msg_type_def.MsgTypeDef.e_msg_result_def result_;
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    public msg_type_def.MsgTypeDef.e_msg_result_def getResult() {
      return result_;
    }

    // optional int32 seat_pos = 3;
    public static final int SEAT_POS_FIELD_NUMBER = 3;
    private int seatPos_;
    /**
     * <code>optional int32 seat_pos = 3;</code>
     *
     * <pre>
     *离开的玩家的位置
     * </pre>
     */
    public boolean hasSeatPos() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 seat_pos = 3;</code>
     *
     * <pre>
     *离开的玩家的位置
     * </pre>
     */
    public int getSeatPos() {
      return seatPos_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_leave_room_result;
      result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
      seatPos_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, result_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, seatPos_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, result_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, seatPos_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_leave_room_result}
     *
     * <pre>
     *离开桌子返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_resultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_leave_room_result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_leave_room_result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_leave_room_result;
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
        bitField0_ = (bitField0_ & ~0x00000002);
        seatPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_leave_room_result_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.seatPos_ = seatPos_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasSeatPos()) {
          setSeatPos(other.getSeatPos());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_leave_room_result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_leave_room_result;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_leave_room_result;
        onChanged();
        return this;
      }

      // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
      private msg_type_def.MsgTypeDef.e_msg_result_def result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public msg_type_def.MsgTypeDef.e_msg_result_def getResult() {
        return result_;
      }
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public Builder setResult(msg_type_def.MsgTypeDef.e_msg_result_def value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000002);
        result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
        onChanged();
        return this;
      }

      // optional int32 seat_pos = 3;
      private int seatPos_ ;
      /**
       * <code>optional int32 seat_pos = 3;</code>
       *
       * <pre>
       *离开的玩家的位置
       * </pre>
       */
      public boolean hasSeatPos() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 seat_pos = 3;</code>
       *
       * <pre>
       *离开的玩家的位置
       * </pre>
       */
      public int getSeatPos() {
        return seatPos_;
      }
      /**
       * <code>optional int32 seat_pos = 3;</code>
       *
       * <pre>
       *离开的玩家的位置
       * </pre>
       */
      public Builder setSeatPos(int value) {
        bitField0_ |= 0x00000004;
        seatPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_pos = 3;</code>
       *
       * <pre>
       *离开的玩家的位置
       * </pre>
       */
      public Builder clearSeatPos() {
        bitField0_ = (bitField0_ & ~0x00000004);
        seatPos_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_leave_room_result)
    }

    static {
      defaultInstance = new packetl2c_leave_room_result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_leave_room_result)
  }

  public interface packetc2l_actionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_action];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_action];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_action];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional .game_guanyuan_protocols.e_action_type action_type = 2;
    /**
     * <code>optional .game_guanyuan_protocols.e_action_type action_type = 2;</code>
     *
     * <pre>
     *玩家触发的动作类型 
     * </pre>
     */
    boolean hasActionType();
    /**
     * <code>optional .game_guanyuan_protocols.e_action_type action_type = 2;</code>
     *
     * <pre>
     *玩家触发的动作类型 
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.e_action_type getActionType();

    // repeated int32 cards = 3;
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *不同的操作会有不同的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *不同的操作会有不同的牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *不同的操作会有不同的牌
     * </pre>
     */
    int getCards(int index);
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetc2l_action}
   *
   * <pre>
   *玩家的某个动作
   * </pre>
   */
  public static final class packetc2l_action extends
      com.google.protobuf.GeneratedMessage
      implements packetc2l_actionOrBuilder {
    // Use packetc2l_action.newBuilder() to construct.
    private packetc2l_action(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetc2l_action(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetc2l_action defaultInstance;
    public static packetc2l_action getDefaultInstance() {
      return defaultInstance;
    }

    public packetc2l_action getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetc2l_action(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyunProtocol.e_action_type value = game_guanyuan_protocols.GameGuanyunProtocol.e_action_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                actionType_ = value;
              }
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_action_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_action_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action.Builder.class);
    }

    public static com.google.protobuf.Parser<packetc2l_action> PARSER =
        new com.google.protobuf.AbstractParser<packetc2l_action>() {
      public packetc2l_action parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetc2l_action(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetc2l_action> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_action];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_action];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_action];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional .game_guanyuan_protocols.e_action_type action_type = 2;
    public static final int ACTION_TYPE_FIELD_NUMBER = 2;
    private game_guanyuan_protocols.GameGuanyunProtocol.e_action_type actionType_;
    /**
     * <code>optional .game_guanyuan_protocols.e_action_type action_type = 2;</code>
     *
     * <pre>
     *玩家触发的动作类型 
     * </pre>
     */
    public boolean hasActionType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_action_type action_type = 2;</code>
     *
     * <pre>
     *玩家触发的动作类型 
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.e_action_type getActionType() {
      return actionType_;
    }

    // repeated int32 cards = 3;
    public static final int CARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *不同的操作会有不同的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *不同的操作会有不同的牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 3;</code>
     *
     * <pre>
     *不同的操作会有不同的牌
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_action;
      actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_action_type.e_action_skip;
      cards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, actionType_.getNumber());
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(3, cards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, actionType_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetc2l_action}
     *
     * <pre>
     *玩家的某个动作
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_actionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_action_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_action_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_action;
        bitField0_ = (bitField0_ & ~0x00000001);
        actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_action_type.e_action_skip;
        bitField0_ = (bitField0_ & ~0x00000002);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_action_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action result = new game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.actionType_ = actionType_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cards_ = cards_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasActionType()) {
          setActionType(other.getActionType());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_action) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_action];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_action;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_action];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_action];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_action];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_action];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_action;
        onChanged();
        return this;
      }

      // optional .game_guanyuan_protocols.e_action_type action_type = 2;
      private game_guanyuan_protocols.GameGuanyunProtocol.e_action_type actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_action_type.e_action_skip;
      /**
       * <code>optional .game_guanyuan_protocols.e_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家触发的动作类型 
       * </pre>
       */
      public boolean hasActionType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家触发的动作类型 
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.e_action_type getActionType() {
        return actionType_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家触发的动作类型 
       * </pre>
       */
      public Builder setActionType(game_guanyuan_protocols.GameGuanyunProtocol.e_action_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        actionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家触发的动作类型 
       * </pre>
       */
      public Builder clearActionType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_action_type.e_action_skip;
        onChanged();
        return this;
      }

      // repeated int32 cards = 3;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *不同的操作会有不同的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *不同的操作会有不同的牌
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *不同的操作会有不同的牌
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *不同的操作会有不同的牌
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *不同的操作会有不同的牌
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *不同的操作会有不同的牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 3;</code>
       *
       * <pre>
       *不同的操作会有不同的牌
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetc2l_action)
    }

    static {
      defaultInstance = new packetc2l_action(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetc2l_action)
  }

  public interface packetl2c_action_resultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_result];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_result];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_result];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    msg_type_def.MsgTypeDef.e_msg_result_def getResult();

    // optional .game_guanyuan_protocols.e_action_type action_type = 3;
    /**
     * <code>optional .game_guanyuan_protocols.e_action_type action_type = 3;</code>
     *
     * <pre>
     *服务器返回的操作类型
     * </pre>
     */
    boolean hasActionType();
    /**
     * <code>optional .game_guanyuan_protocols.e_action_type action_type = 3;</code>
     *
     * <pre>
     *服务器返回的操作类型
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.e_action_type getActionType();

    // optional int32 card = 4;
    /**
     * <code>optional int32 card = 4;</code>
     *
     * <pre>
     *当前触发的牌的值
     * </pre>
     */
    boolean hasCard();
    /**
     * <code>optional int32 card = 4;</code>
     *
     * <pre>
     *当前触发的牌的值
     * </pre>
     */
    int getCard();

    // optional int32 left_card_num = 5;
    /**
     * <code>optional int32 left_card_num = 5;</code>
     *
     * <pre>
     *当前余下牌的数量
     * </pre>
     */
    boolean hasLeftCardNum();
    /**
     * <code>optional int32 left_card_num = 5;</code>
     *
     * <pre>
     *当前余下牌的数量
     * </pre>
     */
    int getLeftCardNum();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_action_result}
   *
   * <pre>
   *玩家请求某个动作类型
   * </pre>
   */
  public static final class packetl2c_action_result extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_action_resultOrBuilder {
    // Use packetl2c_action_result.newBuilder() to construct.
    private packetl2c_action_result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_action_result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_action_result defaultInstance;
    public static packetl2c_action_result getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_action_result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_action_result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              msg_type_def.MsgTypeDef.e_msg_result_def value = msg_type_def.MsgTypeDef.e_msg_result_def.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                result_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyunProtocol.e_action_type value = game_guanyuan_protocols.GameGuanyunProtocol.e_action_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                actionType_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              card_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              leftCardNum_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_action_result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_action_result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_action_result> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_action_result>() {
      public packetl2c_action_result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_action_result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_action_result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_result];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_result];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_result];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
    public static final int RESULT_FIELD_NUMBER = 2;
    private msg_type_def.MsgTypeDef.e_msg_result_def result_;
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    public msg_type_def.MsgTypeDef.e_msg_result_def getResult() {
      return result_;
    }

    // optional .game_guanyuan_protocols.e_action_type action_type = 3;
    public static final int ACTION_TYPE_FIELD_NUMBER = 3;
    private game_guanyuan_protocols.GameGuanyunProtocol.e_action_type actionType_;
    /**
     * <code>optional .game_guanyuan_protocols.e_action_type action_type = 3;</code>
     *
     * <pre>
     *服务器返回的操作类型
     * </pre>
     */
    public boolean hasActionType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_action_type action_type = 3;</code>
     *
     * <pre>
     *服务器返回的操作类型
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.e_action_type getActionType() {
      return actionType_;
    }

    // optional int32 card = 4;
    public static final int CARD_FIELD_NUMBER = 4;
    private int card_;
    /**
     * <code>optional int32 card = 4;</code>
     *
     * <pre>
     *当前触发的牌的值
     * </pre>
     */
    public boolean hasCard() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 card = 4;</code>
     *
     * <pre>
     *当前触发的牌的值
     * </pre>
     */
    public int getCard() {
      return card_;
    }

    // optional int32 left_card_num = 5;
    public static final int LEFT_CARD_NUM_FIELD_NUMBER = 5;
    private int leftCardNum_;
    /**
     * <code>optional int32 left_card_num = 5;</code>
     *
     * <pre>
     *当前余下牌的数量
     * </pre>
     */
    public boolean hasLeftCardNum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 left_card_num = 5;</code>
     *
     * <pre>
     *当前余下牌的数量
     * </pre>
     */
    public int getLeftCardNum() {
      return leftCardNum_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_action_result;
      result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
      actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_action_type.e_action_skip;
      card_ = 0;
      leftCardNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, result_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, actionType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, card_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, leftCardNum_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, result_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, actionType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, card_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, leftCardNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_action_result}
     *
     * <pre>
     *玩家请求某个动作类型
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_resultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_action_result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_action_result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_action_result;
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
        bitField0_ = (bitField0_ & ~0x00000002);
        actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_action_type.e_action_skip;
        bitField0_ = (bitField0_ & ~0x00000004);
        card_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        leftCardNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_action_result_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.actionType_ = actionType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.card_ = card_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.leftCardNum_ = leftCardNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasActionType()) {
          setActionType(other.getActionType());
        }
        if (other.hasCard()) {
          setCard(other.getCard());
        }
        if (other.hasLeftCardNum()) {
          setLeftCardNum(other.getLeftCardNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_result];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_action_result;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_result];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_result];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_result];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_result];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_action_result;
        onChanged();
        return this;
      }

      // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
      private msg_type_def.MsgTypeDef.e_msg_result_def result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public msg_type_def.MsgTypeDef.e_msg_result_def getResult() {
        return result_;
      }
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public Builder setResult(msg_type_def.MsgTypeDef.e_msg_result_def value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000002);
        result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
        onChanged();
        return this;
      }

      // optional .game_guanyuan_protocols.e_action_type action_type = 3;
      private game_guanyuan_protocols.GameGuanyunProtocol.e_action_type actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_action_type.e_action_skip;
      /**
       * <code>optional .game_guanyuan_protocols.e_action_type action_type = 3;</code>
       *
       * <pre>
       *服务器返回的操作类型
       * </pre>
       */
      public boolean hasActionType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_action_type action_type = 3;</code>
       *
       * <pre>
       *服务器返回的操作类型
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.e_action_type getActionType() {
        return actionType_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_action_type action_type = 3;</code>
       *
       * <pre>
       *服务器返回的操作类型
       * </pre>
       */
      public Builder setActionType(game_guanyuan_protocols.GameGuanyunProtocol.e_action_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        actionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_action_type action_type = 3;</code>
       *
       * <pre>
       *服务器返回的操作类型
       * </pre>
       */
      public Builder clearActionType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_action_type.e_action_skip;
        onChanged();
        return this;
      }

      // optional int32 card = 4;
      private int card_ ;
      /**
       * <code>optional int32 card = 4;</code>
       *
       * <pre>
       *当前触发的牌的值
       * </pre>
       */
      public boolean hasCard() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 card = 4;</code>
       *
       * <pre>
       *当前触发的牌的值
       * </pre>
       */
      public int getCard() {
        return card_;
      }
      /**
       * <code>optional int32 card = 4;</code>
       *
       * <pre>
       *当前触发的牌的值
       * </pre>
       */
      public Builder setCard(int value) {
        bitField0_ |= 0x00000008;
        card_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card = 4;</code>
       *
       * <pre>
       *当前触发的牌的值
       * </pre>
       */
      public Builder clearCard() {
        bitField0_ = (bitField0_ & ~0x00000008);
        card_ = 0;
        onChanged();
        return this;
      }

      // optional int32 left_card_num = 5;
      private int leftCardNum_ ;
      /**
       * <code>optional int32 left_card_num = 5;</code>
       *
       * <pre>
       *当前余下牌的数量
       * </pre>
       */
      public boolean hasLeftCardNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 left_card_num = 5;</code>
       *
       * <pre>
       *当前余下牌的数量
       * </pre>
       */
      public int getLeftCardNum() {
        return leftCardNum_;
      }
      /**
       * <code>optional int32 left_card_num = 5;</code>
       *
       * <pre>
       *当前余下牌的数量
       * </pre>
       */
      public Builder setLeftCardNum(int value) {
        bitField0_ |= 0x00000010;
        leftCardNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 left_card_num = 5;</code>
       *
       * <pre>
       *当前余下牌的数量
       * </pre>
       */
      public Builder clearLeftCardNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        leftCardNum_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_action_result)
    }

    static {
      defaultInstance = new packetl2c_action_result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_action_result)
  }

  public interface packetc2l_gpsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gps];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gps];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gps];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;
    /**
     * <code>optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;</code>
     */
    boolean hasGpsInfo();
    /**
     * <code>optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;</code>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info getGpsInfo();
    /**
     * <code>optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;</code>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder getGpsInfoOrBuilder();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetc2l_gps}
   *
   * <pre>
   *发送给服务器当前玩家的
   * </pre>
   */
  public static final class packetc2l_gps extends
      com.google.protobuf.GeneratedMessage
      implements packetc2l_gpsOrBuilder {
    // Use packetc2l_gps.newBuilder() to construct.
    private packetc2l_gps(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetc2l_gps(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetc2l_gps defaultInstance;
    public static packetc2l_gps getDefaultInstance() {
      return defaultInstance;
    }

    public packetc2l_gps getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetc2l_gps(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 18: {
              game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = gpsInfo_.toBuilder();
              }
              gpsInfo_ = input.readMessage(game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gpsInfo_);
                gpsInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_gps_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_gps_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps.Builder.class);
    }

    public static com.google.protobuf.Parser<packetc2l_gps> PARSER =
        new com.google.protobuf.AbstractParser<packetc2l_gps>() {
      public packetc2l_gps parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetc2l_gps(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetc2l_gps> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gps];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gps];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gps];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;
    public static final int GPS_INFO_FIELD_NUMBER = 2;
    private game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info gpsInfo_;
    /**
     * <code>optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;</code>
     */
    public boolean hasGpsInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;</code>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info getGpsInfo() {
      return gpsInfo_;
    }
    /**
     * <code>optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;</code>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder getGpsInfoOrBuilder() {
      return gpsInfo_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_gps;
      gpsInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, gpsInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, gpsInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetc2l_gps}
     *
     * <pre>
     *发送给服务器当前玩家的
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gpsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_gps_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_gps_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGpsInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_gps;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (gpsInfoBuilder_ == null) {
          gpsInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.getDefaultInstance();
        } else {
          gpsInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_gps_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps result = new game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (gpsInfoBuilder_ == null) {
          result.gpsInfo_ = gpsInfo_;
        } else {
          result.gpsInfo_ = gpsInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasGpsInfo()) {
          mergeGpsInfo(other.getGpsInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_gps) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gps];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_gps;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gps];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gps];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gps];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_gps];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_gps;
        onChanged();
        return this;
      }

      // optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;
      private game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info gpsInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder> gpsInfoBuilder_;
      /**
       * <code>optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;</code>
       */
      public boolean hasGpsInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;</code>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info getGpsInfo() {
        if (gpsInfoBuilder_ == null) {
          return gpsInfo_;
        } else {
          return gpsInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;</code>
       */
      public Builder setGpsInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info value) {
        if (gpsInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gpsInfo_ = value;
          onChanged();
        } else {
          gpsInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;</code>
       */
      public Builder setGpsInfo(
          game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder builderForValue) {
        if (gpsInfoBuilder_ == null) {
          gpsInfo_ = builderForValue.build();
          onChanged();
        } else {
          gpsInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;</code>
       */
      public Builder mergeGpsInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info value) {
        if (gpsInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              gpsInfo_ != game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.getDefaultInstance()) {
            gpsInfo_ =
              game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.newBuilder(gpsInfo_).mergeFrom(value).buildPartial();
          } else {
            gpsInfo_ = value;
          }
          onChanged();
        } else {
          gpsInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;</code>
       */
      public Builder clearGpsInfo() {
        if (gpsInfoBuilder_ == null) {
          gpsInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.getDefaultInstance();
          onChanged();
        } else {
          gpsInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;</code>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder getGpsInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getGpsInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;</code>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder getGpsInfoOrBuilder() {
        if (gpsInfoBuilder_ != null) {
          return gpsInfoBuilder_.getMessageOrBuilder();
        } else {
          return gpsInfo_;
        }
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_gps_info gps_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder> 
          getGpsInfoFieldBuilder() {
        if (gpsInfoBuilder_ == null) {
          gpsInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder>(
                  gpsInfo_,
                  getParentForChildren(),
                  isClean());
          gpsInfo_ = null;
        }
        return gpsInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetc2l_gps)
    }

    static {
      defaultInstance = new packetc2l_gps(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetc2l_gps)
  }

  public interface packetl2c_gps_resultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gps_result];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gps_result];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gps_result];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    msg_type_def.MsgTypeDef.e_msg_result_def getResult();

    // repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
     *
     * <pre>
     *具体的gps信息
     * </pre>
     */
    java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info> 
        getGpsInfosList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
     *
     * <pre>
     *具体的gps信息
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info getGpsInfos(int index);
    /**
     * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
     *
     * <pre>
     *具体的gps信息
     * </pre>
     */
    int getGpsInfosCount();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
     *
     * <pre>
     *具体的gps信息
     * </pre>
     */
    java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder> 
        getGpsInfosOrBuilderList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
     *
     * <pre>
     *具体的gps信息
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder getGpsInfosOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_gps_result}
   *
   * <pre>
   *广播gps信息
   * </pre>
   */
  public static final class packetl2c_gps_result extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_gps_resultOrBuilder {
    // Use packetl2c_gps_result.newBuilder() to construct.
    private packetl2c_gps_result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_gps_result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_gps_result defaultInstance;
    public static packetl2c_gps_result getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_gps_result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_gps_result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              msg_type_def.MsgTypeDef.e_msg_result_def value = msg_type_def.MsgTypeDef.e_msg_result_def.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                result_ = value;
              }
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                gpsInfos_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info>();
                mutable_bitField0_ |= 0x00000004;
              }
              gpsInfos_.add(input.readMessage(game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          gpsInfos_ = java.util.Collections.unmodifiableList(gpsInfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_gps_result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_gps_result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_gps_result> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_gps_result>() {
      public packetl2c_gps_result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_gps_result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_gps_result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gps_result];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gps_result];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gps_result];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
    public static final int RESULT_FIELD_NUMBER = 2;
    private msg_type_def.MsgTypeDef.e_msg_result_def result_;
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
     */
    public msg_type_def.MsgTypeDef.e_msg_result_def getResult() {
      return result_;
    }

    // repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;
    public static final int GPS_INFOS_FIELD_NUMBER = 3;
    private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info> gpsInfos_;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
     *
     * <pre>
     *具体的gps信息
     * </pre>
     */
    public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info> getGpsInfosList() {
      return gpsInfos_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
     *
     * <pre>
     *具体的gps信息
     * </pre>
     */
    public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder> 
        getGpsInfosOrBuilderList() {
      return gpsInfos_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
     *
     * <pre>
     *具体的gps信息
     * </pre>
     */
    public int getGpsInfosCount() {
      return gpsInfos_.size();
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
     *
     * <pre>
     *具体的gps信息
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info getGpsInfos(int index) {
      return gpsInfos_.get(index);
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
     *
     * <pre>
     *具体的gps信息
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder getGpsInfosOrBuilder(
        int index) {
      return gpsInfos_.get(index);
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_gps_result;
      result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
      gpsInfos_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, result_.getNumber());
      }
      for (int i = 0; i < gpsInfos_.size(); i++) {
        output.writeMessage(3, gpsInfos_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, result_.getNumber());
      }
      for (int i = 0; i < gpsInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, gpsInfos_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_gps_result}
     *
     * <pre>
     *广播gps信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_resultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_gps_result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_gps_result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGpsInfosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_gps_result;
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (gpsInfosBuilder_ == null) {
          gpsInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          gpsInfosBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_gps_result_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.result_ = result_;
        if (gpsInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            gpsInfos_ = java.util.Collections.unmodifiableList(gpsInfos_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.gpsInfos_ = gpsInfos_;
        } else {
          result.gpsInfos_ = gpsInfosBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (gpsInfosBuilder_ == null) {
          if (!other.gpsInfos_.isEmpty()) {
            if (gpsInfos_.isEmpty()) {
              gpsInfos_ = other.gpsInfos_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureGpsInfosIsMutable();
              gpsInfos_.addAll(other.gpsInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.gpsInfos_.isEmpty()) {
            if (gpsInfosBuilder_.isEmpty()) {
              gpsInfosBuilder_.dispose();
              gpsInfosBuilder_ = null;
              gpsInfos_ = other.gpsInfos_;
              bitField0_ = (bitField0_ & ~0x00000004);
              gpsInfosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGpsInfosFieldBuilder() : null;
            } else {
              gpsInfosBuilder_.addAllMessages(other.gpsInfos_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_gps_result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gps_result];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_gps_result;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gps_result];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gps_result];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gps_result];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_gps_result];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_gps_result;
        onChanged();
        return this;
      }

      // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
      private msg_type_def.MsgTypeDef.e_msg_result_def result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public msg_type_def.MsgTypeDef.e_msg_result_def getResult() {
        return result_;
      }
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public Builder setResult(msg_type_def.MsgTypeDef.e_msg_result_def value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000002);
        result_ = msg_type_def.MsgTypeDef.e_msg_result_def.e_rmt_success;
        onChanged();
        return this;
      }

      // repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;
      private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info> gpsInfos_ =
        java.util.Collections.emptyList();
      private void ensureGpsInfosIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          gpsInfos_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info>(gpsInfos_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder> gpsInfosBuilder_;

      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info> getGpsInfosList() {
        if (gpsInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gpsInfos_);
        } else {
          return gpsInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public int getGpsInfosCount() {
        if (gpsInfosBuilder_ == null) {
          return gpsInfos_.size();
        } else {
          return gpsInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info getGpsInfos(int index) {
        if (gpsInfosBuilder_ == null) {
          return gpsInfos_.get(index);
        } else {
          return gpsInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public Builder setGpsInfos(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info value) {
        if (gpsInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGpsInfosIsMutable();
          gpsInfos_.set(index, value);
          onChanged();
        } else {
          gpsInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public Builder setGpsInfos(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder builderForValue) {
        if (gpsInfosBuilder_ == null) {
          ensureGpsInfosIsMutable();
          gpsInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          gpsInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public Builder addGpsInfos(game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info value) {
        if (gpsInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGpsInfosIsMutable();
          gpsInfos_.add(value);
          onChanged();
        } else {
          gpsInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public Builder addGpsInfos(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info value) {
        if (gpsInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGpsInfosIsMutable();
          gpsInfos_.add(index, value);
          onChanged();
        } else {
          gpsInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public Builder addGpsInfos(
          game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder builderForValue) {
        if (gpsInfosBuilder_ == null) {
          ensureGpsInfosIsMutable();
          gpsInfos_.add(builderForValue.build());
          onChanged();
        } else {
          gpsInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public Builder addGpsInfos(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder builderForValue) {
        if (gpsInfosBuilder_ == null) {
          ensureGpsInfosIsMutable();
          gpsInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          gpsInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public Builder addAllGpsInfos(
          java.lang.Iterable<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info> values) {
        if (gpsInfosBuilder_ == null) {
          ensureGpsInfosIsMutable();
          super.addAll(values, gpsInfos_);
          onChanged();
        } else {
          gpsInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public Builder clearGpsInfos() {
        if (gpsInfosBuilder_ == null) {
          gpsInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          gpsInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public Builder removeGpsInfos(int index) {
        if (gpsInfosBuilder_ == null) {
          ensureGpsInfosIsMutable();
          gpsInfos_.remove(index);
          onChanged();
        } else {
          gpsInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder getGpsInfosBuilder(
          int index) {
        return getGpsInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder getGpsInfosOrBuilder(
          int index) {
        if (gpsInfosBuilder_ == null) {
          return gpsInfos_.get(index);  } else {
          return gpsInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder> 
           getGpsInfosOrBuilderList() {
        if (gpsInfosBuilder_ != null) {
          return gpsInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gpsInfos_);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder addGpsInfosBuilder() {
        return getGpsInfosFieldBuilder().addBuilder(
            game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder addGpsInfosBuilder(
          int index) {
        return getGpsInfosFieldBuilder().addBuilder(
            index, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_gps_info gps_infos = 3;</code>
       *
       * <pre>
       *具体的gps信息
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder> 
           getGpsInfosBuilderList() {
        return getGpsInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder> 
          getGpsInfosFieldBuilder() {
        if (gpsInfosBuilder_ == null) {
          gpsInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder>(
                  gpsInfos_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          gpsInfos_ = null;
        }
        return gpsInfosBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_gps_result)
    }

    static {
      defaultInstance = new packetl2c_gps_result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_gps_result)
  }

  public interface msg_gps_infoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional double lng = 1;
    /**
     * <code>optional double lng = 1;</code>
     */
    boolean hasLng();
    /**
     * <code>optional double lng = 1;</code>
     */
    double getLng();

    // optional double lat = 2;
    /**
     * <code>optional double lat = 2;</code>
     */
    boolean hasLat();
    /**
     * <code>optional double lat = 2;</code>
     */
    double getLat();

    // optional int32 status = 3;
    /**
     * <code>optional int32 status = 3;</code>
     *
     * <pre>
     *gps 是否开启			
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 3;</code>
     *
     * <pre>
     *gps 是否开启			
     * </pre>
     */
    int getStatus();

    // optional string address = 4;
    /**
     * <code>optional string address = 4;</code>
     *
     * <pre>
     *玩家的具体地址
     * </pre>
     */
    boolean hasAddress();
    /**
     * <code>optional string address = 4;</code>
     *
     * <pre>
     *玩家的具体地址
     * </pre>
     */
    java.lang.String getAddress();
    /**
     * <code>optional string address = 4;</code>
     *
     * <pre>
     *玩家的具体地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getAddressBytes();

    // optional int32 seat_pos = 5;
    /**
     * <code>optional int32 seat_pos = 5;</code>
     *
     * <pre>
     *具体位置
     * </pre>
     */
    boolean hasSeatPos();
    /**
     * <code>optional int32 seat_pos = 5;</code>
     *
     * <pre>
     *具体位置
     * </pre>
     */
    int getSeatPos();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.msg_gps_info}
   */
  public static final class msg_gps_info extends
      com.google.protobuf.GeneratedMessage
      implements msg_gps_infoOrBuilder {
    // Use msg_gps_info.newBuilder() to construct.
    private msg_gps_info(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private msg_gps_info(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final msg_gps_info defaultInstance;
    public static msg_gps_info getDefaultInstance() {
      return defaultInstance;
    }

    public msg_gps_info getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private msg_gps_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              lng_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              lat_ = input.readDouble();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              status_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              address_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              seatPos_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_gps_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_gps_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder.class);
    }

    public static com.google.protobuf.Parser<msg_gps_info> PARSER =
        new com.google.protobuf.AbstractParser<msg_gps_info>() {
      public msg_gps_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new msg_gps_info(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<msg_gps_info> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional double lng = 1;
    public static final int LNG_FIELD_NUMBER = 1;
    private double lng_;
    /**
     * <code>optional double lng = 1;</code>
     */
    public boolean hasLng() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional double lng = 1;</code>
     */
    public double getLng() {
      return lng_;
    }

    // optional double lat = 2;
    public static final int LAT_FIELD_NUMBER = 2;
    private double lat_;
    /**
     * <code>optional double lat = 2;</code>
     */
    public boolean hasLat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional double lat = 2;</code>
     */
    public double getLat() {
      return lat_;
    }

    // optional int32 status = 3;
    public static final int STATUS_FIELD_NUMBER = 3;
    private int status_;
    /**
     * <code>optional int32 status = 3;</code>
     *
     * <pre>
     *gps 是否开启			
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 status = 3;</code>
     *
     * <pre>
     *gps 是否开启			
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // optional string address = 4;
    public static final int ADDRESS_FIELD_NUMBER = 4;
    private java.lang.Object address_;
    /**
     * <code>optional string address = 4;</code>
     *
     * <pre>
     *玩家的具体地址
     * </pre>
     */
    public boolean hasAddress() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string address = 4;</code>
     *
     * <pre>
     *玩家的具体地址
     * </pre>
     */
    public java.lang.String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          address_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string address = 4;</code>
     *
     * <pre>
     *玩家的具体地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 seat_pos = 5;
    public static final int SEAT_POS_FIELD_NUMBER = 5;
    private int seatPos_;
    /**
     * <code>optional int32 seat_pos = 5;</code>
     *
     * <pre>
     *具体位置
     * </pre>
     */
    public boolean hasSeatPos() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 seat_pos = 5;</code>
     *
     * <pre>
     *具体位置
     * </pre>
     */
    public int getSeatPos() {
      return seatPos_;
    }

    private void initFields() {
      lng_ = 0D;
      lat_ = 0D;
      status_ = 0;
      address_ = "";
      seatPos_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, lng_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, lat_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, status_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getAddressBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, seatPos_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, lng_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, lat_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, status_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getAddressBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, seatPos_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.msg_gps_info}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_gps_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_gps_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        lng_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        lat_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        address_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        seatPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_gps_info_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info build() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info result = new game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lng_ = lng_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lat_ = lat_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.address_ = address_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.seatPos_ = seatPos_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info.getDefaultInstance()) return this;
        if (other.hasLng()) {
          setLng(other.getLng());
        }
        if (other.hasLat()) {
          setLat(other.getLat());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasAddress()) {
          bitField0_ |= 0x00000008;
          address_ = other.address_;
          onChanged();
        }
        if (other.hasSeatPos()) {
          setSeatPos(other.getSeatPos());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.msg_gps_info) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional double lng = 1;
      private double lng_ ;
      /**
       * <code>optional double lng = 1;</code>
       */
      public boolean hasLng() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional double lng = 1;</code>
       */
      public double getLng() {
        return lng_;
      }
      /**
       * <code>optional double lng = 1;</code>
       */
      public Builder setLng(double value) {
        bitField0_ |= 0x00000001;
        lng_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double lng = 1;</code>
       */
      public Builder clearLng() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lng_ = 0D;
        onChanged();
        return this;
      }

      // optional double lat = 2;
      private double lat_ ;
      /**
       * <code>optional double lat = 2;</code>
       */
      public boolean hasLat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double lat = 2;</code>
       */
      public double getLat() {
        return lat_;
      }
      /**
       * <code>optional double lat = 2;</code>
       */
      public Builder setLat(double value) {
        bitField0_ |= 0x00000002;
        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double lat = 2;</code>
       */
      public Builder clearLat() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lat_ = 0D;
        onChanged();
        return this;
      }

      // optional int32 status = 3;
      private int status_ ;
      /**
       * <code>optional int32 status = 3;</code>
       *
       * <pre>
       *gps 是否开启			
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 status = 3;</code>
       *
       * <pre>
       *gps 是否开启			
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 3;</code>
       *
       * <pre>
       *gps 是否开启			
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000004;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 3;</code>
       *
       * <pre>
       *gps 是否开启			
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional string address = 4;
      private java.lang.Object address_ = "";
      /**
       * <code>optional string address = 4;</code>
       *
       * <pre>
       *玩家的具体地址
       * </pre>
       */
      public boolean hasAddress() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string address = 4;</code>
       *
       * <pre>
       *玩家的具体地址
       * </pre>
       */
      public java.lang.String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string address = 4;</code>
       *
       * <pre>
       *玩家的具体地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAddressBytes() {
        java.lang.Object ref = address_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          address_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string address = 4;</code>
       *
       * <pre>
       *玩家的具体地址
       * </pre>
       */
      public Builder setAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        address_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string address = 4;</code>
       *
       * <pre>
       *玩家的具体地址
       * </pre>
       */
      public Builder clearAddress() {
        bitField0_ = (bitField0_ & ~0x00000008);
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      /**
       * <code>optional string address = 4;</code>
       *
       * <pre>
       *玩家的具体地址
       * </pre>
       */
      public Builder setAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        address_ = value;
        onChanged();
        return this;
      }

      // optional int32 seat_pos = 5;
      private int seatPos_ ;
      /**
       * <code>optional int32 seat_pos = 5;</code>
       *
       * <pre>
       *具体位置
       * </pre>
       */
      public boolean hasSeatPos() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 seat_pos = 5;</code>
       *
       * <pre>
       *具体位置
       * </pre>
       */
      public int getSeatPos() {
        return seatPos_;
      }
      /**
       * <code>optional int32 seat_pos = 5;</code>
       *
       * <pre>
       *具体位置
       * </pre>
       */
      public Builder setSeatPos(int value) {
        bitField0_ |= 0x00000010;
        seatPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_pos = 5;</code>
       *
       * <pre>
       *具体位置
       * </pre>
       */
      public Builder clearSeatPos() {
        bitField0_ = (bitField0_ & ~0x00000010);
        seatPos_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.msg_gps_info)
    }

    static {
      defaultInstance = new msg_gps_info(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.msg_gps_info)
  }

  public interface packetc2l_dis_roomOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_dis_room];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_dis_room];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_dis_room];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetc2l_dis_room}
   */
  public static final class packetc2l_dis_room extends
      com.google.protobuf.GeneratedMessage
      implements packetc2l_dis_roomOrBuilder {
    // Use packetc2l_dis_room.newBuilder() to construct.
    private packetc2l_dis_room(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetc2l_dis_room(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetc2l_dis_room defaultInstance;
    public static packetc2l_dis_room getDefaultInstance() {
      return defaultInstance;
    }

    public packetc2l_dis_room getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetc2l_dis_room(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_dis_room_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_dis_room_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room.Builder.class);
    }

    public static com.google.protobuf.Parser<packetc2l_dis_room> PARSER =
        new com.google.protobuf.AbstractParser<packetc2l_dis_room>() {
      public packetc2l_dis_room parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetc2l_dis_room(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetc2l_dis_room> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_dis_room];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_dis_room];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_dis_room];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_dis_room;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetc2l_dis_room}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_roomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_dis_room_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_dis_room_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_dis_room;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_dis_room_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room result = new game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_dis_room];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_dis_room;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_dis_room];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_dis_room];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_dis_room];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2l_dis_room];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_c2l_dis_room;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetc2l_dis_room)
    }

    static {
      defaultInstance = new packetc2l_dis_room(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetc2l_dis_room)
  }

  public interface packetc2l_dis_room_resultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dis_room_result];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dis_room_result];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dis_room_result];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetc2l_dis_room_result}
   */
  public static final class packetc2l_dis_room_result extends
      com.google.protobuf.GeneratedMessage
      implements packetc2l_dis_room_resultOrBuilder {
    // Use packetc2l_dis_room_result.newBuilder() to construct.
    private packetc2l_dis_room_result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetc2l_dis_room_result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetc2l_dis_room_result defaultInstance;
    public static packetc2l_dis_room_result getDefaultInstance() {
      return defaultInstance;
    }

    public packetc2l_dis_room_result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetc2l_dis_room_result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_dis_room_result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_dis_room_result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result.Builder.class);
    }

    public static com.google.protobuf.Parser<packetc2l_dis_room_result> PARSER =
        new com.google.protobuf.AbstractParser<packetc2l_dis_room_result>() {
      public packetc2l_dis_room_result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetc2l_dis_room_result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetc2l_dis_room_result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dis_room_result];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dis_room_result];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dis_room_result];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_dis_room_result;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetc2l_dis_room_result}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_resultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_dis_room_result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_dis_room_result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result.class, game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_dis_room_result;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetc2l_dis_room_result_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result result = new game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetc2l_dis_room_result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dis_room_result];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_dis_room_result;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dis_room_result];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dis_room_result];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dis_room_result];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dis_room_result];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_dis_room_result;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetc2l_dis_room_result)
    }

    static {
      defaultInstance = new packetc2l_dis_room_result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetc2l_dis_room_result)
  }

  public interface msg_create_room_paramOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 circle_count = 1;
    /**
     * <code>optional int32 circle_count = 1;</code>
     *
     * <pre>
     *局数
     * </pre>
     */
    boolean hasCircleCount();
    /**
     * <code>optional int32 circle_count = 1;</code>
     *
     * <pre>
     *局数
     * </pre>
     */
    int getCircleCount();

    // optional int32 cost_type = 2;
    /**
     * <code>optional int32 cost_type = 2;</code>
     *
     * <pre>
     *0-创建者扣门卡,1-AA制
     * </pre>
     */
    boolean hasCostType();
    /**
     * <code>optional int32 cost_type = 2;</code>
     *
     * <pre>
     *0-创建者扣门卡,1-AA制
     * </pre>
     */
    int getCostType();

    // optional int32 base_score = 3;
    /**
     * <code>optional int32 base_score = 3;</code>
     *
     * <pre>
     *底分，默认为1
     * </pre>
     */
    boolean hasBaseScore();
    /**
     * <code>optional int32 base_score = 3;</code>
     *
     * <pre>
     *底分，默认为1
     * </pre>
     */
    int getBaseScore();

    // optional int32 baseHua = 4;
    /**
     * <code>optional int32 baseHua = 4;</code>
     *
     * <pre>
     *底花
     * </pre>
     */
    boolean hasBaseHua();
    /**
     * <code>optional int32 baseHua = 4;</code>
     *
     * <pre>
     *底花
     * </pre>
     */
    int getBaseHua();

    // optional int32 hua_type = 5;
    /**
     * <code>optional int32 hua_type = 5;</code>
     *
     * <pre>
     *0:四花,	1:20花	2:28花
     * </pre>
     */
    boolean hasHuaType();
    /**
     * <code>optional int32 hua_type = 5;</code>
     *
     * <pre>
     *0:四花,	1:20花	2:28花
     * </pre>
     */
    int getHuaType();

    // optional int32 bao_type = 6;
    /**
     * <code>optional int32 bao_type = 6;</code>
     *
     * <pre>
     * 0:1包1     1：一包三
     * </pre>
     */
    boolean hasBaoType();
    /**
     * <code>optional int32 bao_type = 6;</code>
     *
     * <pre>
     * 0:1包1     1：一包三
     * </pre>
     */
    int getBaoType();

    // optional int32 hu_type = 7;
    /**
     * <code>optional int32 hu_type = 7;</code>
     *
     * <pre>
     *0:截胡  1：一炮多胡 
     * </pre>
     */
    boolean hasHuType();
    /**
     * <code>optional int32 hu_type = 7;</code>
     *
     * <pre>
     *0:截胡  1：一炮多胡 
     * </pre>
     */
    int getHuType();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.msg_create_room_param}
   */
  public static final class msg_create_room_param extends
      com.google.protobuf.GeneratedMessage
      implements msg_create_room_paramOrBuilder {
    // Use msg_create_room_param.newBuilder() to construct.
    private msg_create_room_param(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private msg_create_room_param(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final msg_create_room_param defaultInstance;
    public static msg_create_room_param getDefaultInstance() {
      return defaultInstance;
    }

    public msg_create_room_param getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private msg_create_room_param(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              circleCount_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              costType_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              baseScore_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              baseHua_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              huaType_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              baoType_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              huType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_create_room_param_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_create_room_param_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param.Builder.class);
    }

    public static com.google.protobuf.Parser<msg_create_room_param> PARSER =
        new com.google.protobuf.AbstractParser<msg_create_room_param>() {
      public msg_create_room_param parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new msg_create_room_param(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<msg_create_room_param> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 circle_count = 1;
    public static final int CIRCLE_COUNT_FIELD_NUMBER = 1;
    private int circleCount_;
    /**
     * <code>optional int32 circle_count = 1;</code>
     *
     * <pre>
     *局数
     * </pre>
     */
    public boolean hasCircleCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 circle_count = 1;</code>
     *
     * <pre>
     *局数
     * </pre>
     */
    public int getCircleCount() {
      return circleCount_;
    }

    // optional int32 cost_type = 2;
    public static final int COST_TYPE_FIELD_NUMBER = 2;
    private int costType_;
    /**
     * <code>optional int32 cost_type = 2;</code>
     *
     * <pre>
     *0-创建者扣门卡,1-AA制
     * </pre>
     */
    public boolean hasCostType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 cost_type = 2;</code>
     *
     * <pre>
     *0-创建者扣门卡,1-AA制
     * </pre>
     */
    public int getCostType() {
      return costType_;
    }

    // optional int32 base_score = 3;
    public static final int BASE_SCORE_FIELD_NUMBER = 3;
    private int baseScore_;
    /**
     * <code>optional int32 base_score = 3;</code>
     *
     * <pre>
     *底分，默认为1
     * </pre>
     */
    public boolean hasBaseScore() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 base_score = 3;</code>
     *
     * <pre>
     *底分，默认为1
     * </pre>
     */
    public int getBaseScore() {
      return baseScore_;
    }

    // optional int32 baseHua = 4;
    public static final int BASEHUA_FIELD_NUMBER = 4;
    private int baseHua_;
    /**
     * <code>optional int32 baseHua = 4;</code>
     *
     * <pre>
     *底花
     * </pre>
     */
    public boolean hasBaseHua() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 baseHua = 4;</code>
     *
     * <pre>
     *底花
     * </pre>
     */
    public int getBaseHua() {
      return baseHua_;
    }

    // optional int32 hua_type = 5;
    public static final int HUA_TYPE_FIELD_NUMBER = 5;
    private int huaType_;
    /**
     * <code>optional int32 hua_type = 5;</code>
     *
     * <pre>
     *0:四花,	1:20花	2:28花
     * </pre>
     */
    public boolean hasHuaType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 hua_type = 5;</code>
     *
     * <pre>
     *0:四花,	1:20花	2:28花
     * </pre>
     */
    public int getHuaType() {
      return huaType_;
    }

    // optional int32 bao_type = 6;
    public static final int BAO_TYPE_FIELD_NUMBER = 6;
    private int baoType_;
    /**
     * <code>optional int32 bao_type = 6;</code>
     *
     * <pre>
     * 0:1包1     1：一包三
     * </pre>
     */
    public boolean hasBaoType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 bao_type = 6;</code>
     *
     * <pre>
     * 0:1包1     1：一包三
     * </pre>
     */
    public int getBaoType() {
      return baoType_;
    }

    // optional int32 hu_type = 7;
    public static final int HU_TYPE_FIELD_NUMBER = 7;
    private int huType_;
    /**
     * <code>optional int32 hu_type = 7;</code>
     *
     * <pre>
     *0:截胡  1：一炮多胡 
     * </pre>
     */
    public boolean hasHuType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 hu_type = 7;</code>
     *
     * <pre>
     *0:截胡  1：一炮多胡 
     * </pre>
     */
    public int getHuType() {
      return huType_;
    }

    private void initFields() {
      circleCount_ = 0;
      costType_ = 0;
      baseScore_ = 0;
      baseHua_ = 0;
      huaType_ = 0;
      baoType_ = 0;
      huType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, circleCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, costType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, baseScore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, baseHua_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, huaType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, baoType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, huType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, circleCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, costType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, baseScore_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, baseHua_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, huaType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, baoType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, huType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.msg_create_room_param}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_paramOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_create_room_param_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_create_room_param_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        circleCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        costType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        baseScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        baseHua_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        huaType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        baoType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        huType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_create_room_param_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param build() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param result = new game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.circleCount_ = circleCount_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.costType_ = costType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.baseScore_ = baseScore_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.baseHua_ = baseHua_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.huaType_ = huaType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.baoType_ = baoType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.huType_ = huType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param.getDefaultInstance()) return this;
        if (other.hasCircleCount()) {
          setCircleCount(other.getCircleCount());
        }
        if (other.hasCostType()) {
          setCostType(other.getCostType());
        }
        if (other.hasBaseScore()) {
          setBaseScore(other.getBaseScore());
        }
        if (other.hasBaseHua()) {
          setBaseHua(other.getBaseHua());
        }
        if (other.hasHuaType()) {
          setHuaType(other.getHuaType());
        }
        if (other.hasBaoType()) {
          setBaoType(other.getBaoType());
        }
        if (other.hasHuType()) {
          setHuType(other.getHuType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.msg_create_room_param) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 circle_count = 1;
      private int circleCount_ ;
      /**
       * <code>optional int32 circle_count = 1;</code>
       *
       * <pre>
       *局数
       * </pre>
       */
      public boolean hasCircleCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 circle_count = 1;</code>
       *
       * <pre>
       *局数
       * </pre>
       */
      public int getCircleCount() {
        return circleCount_;
      }
      /**
       * <code>optional int32 circle_count = 1;</code>
       *
       * <pre>
       *局数
       * </pre>
       */
      public Builder setCircleCount(int value) {
        bitField0_ |= 0x00000001;
        circleCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 circle_count = 1;</code>
       *
       * <pre>
       *局数
       * </pre>
       */
      public Builder clearCircleCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        circleCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cost_type = 2;
      private int costType_ ;
      /**
       * <code>optional int32 cost_type = 2;</code>
       *
       * <pre>
       *0-创建者扣门卡,1-AA制
       * </pre>
       */
      public boolean hasCostType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cost_type = 2;</code>
       *
       * <pre>
       *0-创建者扣门卡,1-AA制
       * </pre>
       */
      public int getCostType() {
        return costType_;
      }
      /**
       * <code>optional int32 cost_type = 2;</code>
       *
       * <pre>
       *0-创建者扣门卡,1-AA制
       * </pre>
       */
      public Builder setCostType(int value) {
        bitField0_ |= 0x00000002;
        costType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cost_type = 2;</code>
       *
       * <pre>
       *0-创建者扣门卡,1-AA制
       * </pre>
       */
      public Builder clearCostType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        costType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 base_score = 3;
      private int baseScore_ ;
      /**
       * <code>optional int32 base_score = 3;</code>
       *
       * <pre>
       *底分，默认为1
       * </pre>
       */
      public boolean hasBaseScore() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 base_score = 3;</code>
       *
       * <pre>
       *底分，默认为1
       * </pre>
       */
      public int getBaseScore() {
        return baseScore_;
      }
      /**
       * <code>optional int32 base_score = 3;</code>
       *
       * <pre>
       *底分，默认为1
       * </pre>
       */
      public Builder setBaseScore(int value) {
        bitField0_ |= 0x00000004;
        baseScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 base_score = 3;</code>
       *
       * <pre>
       *底分，默认为1
       * </pre>
       */
      public Builder clearBaseScore() {
        bitField0_ = (bitField0_ & ~0x00000004);
        baseScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 baseHua = 4;
      private int baseHua_ ;
      /**
       * <code>optional int32 baseHua = 4;</code>
       *
       * <pre>
       *底花
       * </pre>
       */
      public boolean hasBaseHua() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 baseHua = 4;</code>
       *
       * <pre>
       *底花
       * </pre>
       */
      public int getBaseHua() {
        return baseHua_;
      }
      /**
       * <code>optional int32 baseHua = 4;</code>
       *
       * <pre>
       *底花
       * </pre>
       */
      public Builder setBaseHua(int value) {
        bitField0_ |= 0x00000008;
        baseHua_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baseHua = 4;</code>
       *
       * <pre>
       *底花
       * </pre>
       */
      public Builder clearBaseHua() {
        bitField0_ = (bitField0_ & ~0x00000008);
        baseHua_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hua_type = 5;
      private int huaType_ ;
      /**
       * <code>optional int32 hua_type = 5;</code>
       *
       * <pre>
       *0:四花,	1:20花	2:28花
       * </pre>
       */
      public boolean hasHuaType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 hua_type = 5;</code>
       *
       * <pre>
       *0:四花,	1:20花	2:28花
       * </pre>
       */
      public int getHuaType() {
        return huaType_;
      }
      /**
       * <code>optional int32 hua_type = 5;</code>
       *
       * <pre>
       *0:四花,	1:20花	2:28花
       * </pre>
       */
      public Builder setHuaType(int value) {
        bitField0_ |= 0x00000010;
        huaType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hua_type = 5;</code>
       *
       * <pre>
       *0:四花,	1:20花	2:28花
       * </pre>
       */
      public Builder clearHuaType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        huaType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 bao_type = 6;
      private int baoType_ ;
      /**
       * <code>optional int32 bao_type = 6;</code>
       *
       * <pre>
       * 0:1包1     1：一包三
       * </pre>
       */
      public boolean hasBaoType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 bao_type = 6;</code>
       *
       * <pre>
       * 0:1包1     1：一包三
       * </pre>
       */
      public int getBaoType() {
        return baoType_;
      }
      /**
       * <code>optional int32 bao_type = 6;</code>
       *
       * <pre>
       * 0:1包1     1：一包三
       * </pre>
       */
      public Builder setBaoType(int value) {
        bitField0_ |= 0x00000020;
        baoType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bao_type = 6;</code>
       *
       * <pre>
       * 0:1包1     1：一包三
       * </pre>
       */
      public Builder clearBaoType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        baoType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hu_type = 7;
      private int huType_ ;
      /**
       * <code>optional int32 hu_type = 7;</code>
       *
       * <pre>
       *0:截胡  1：一炮多胡 
       * </pre>
       */
      public boolean hasHuType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 hu_type = 7;</code>
       *
       * <pre>
       *0:截胡  1：一炮多胡 
       * </pre>
       */
      public int getHuType() {
        return huType_;
      }
      /**
       * <code>optional int32 hu_type = 7;</code>
       *
       * <pre>
       *0:截胡  1：一炮多胡 
       * </pre>
       */
      public Builder setHuType(int value) {
        bitField0_ |= 0x00000040;
        huType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hu_type = 7;</code>
       *
       * <pre>
       *0:截胡  1：一炮多胡 
       * </pre>
       */
      public Builder clearHuType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        huType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.msg_create_room_param)
    }

    static {
      defaultInstance = new msg_create_room_param(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.msg_create_room_param)
  }

  public interface packetl2c_game_start_ntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start_nt];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start_nt];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start_nt];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional int32 start_tm = 2;
    /**
     * <code>optional int32 start_tm = 2;</code>
     *
     * <pre>
     *游戏开始了	用于倒计时
     * </pre>
     */
    boolean hasStartTm();
    /**
     * <code>optional int32 start_tm = 2;</code>
     *
     * <pre>
     *游戏开始了	用于倒计时
     * </pre>
     */
    int getStartTm();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_game_start_nt}
   *
   * <pre>
   *---------------------------推送消息----------------------------------------
   * </pre>
   */
  public static final class packetl2c_game_start_nt extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_game_start_ntOrBuilder {
    // Use packetl2c_game_start_nt.newBuilder() to construct.
    private packetl2c_game_start_nt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_game_start_nt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_game_start_nt defaultInstance;
    public static packetl2c_game_start_nt getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_game_start_nt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_game_start_nt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              startTm_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_game_start_nt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_game_start_nt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_game_start_nt> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_game_start_nt>() {
      public packetl2c_game_start_nt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_game_start_nt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_game_start_nt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start_nt];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start_nt];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start_nt];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional int32 start_tm = 2;
    public static final int START_TM_FIELD_NUMBER = 2;
    private int startTm_;
    /**
     * <code>optional int32 start_tm = 2;</code>
     *
     * <pre>
     *游戏开始了	用于倒计时
     * </pre>
     */
    public boolean hasStartTm() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 start_tm = 2;</code>
     *
     * <pre>
     *游戏开始了	用于倒计时
     * </pre>
     */
    public int getStartTm() {
      return startTm_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_game_start_nt;
      startTm_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, startTm_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, startTm_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_game_start_nt}
     *
     * <pre>
     *---------------------------推送消息----------------------------------------
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_ntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_game_start_nt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_game_start_nt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_game_start_nt;
        bitField0_ = (bitField0_ & ~0x00000001);
        startTm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_game_start_nt_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.startTm_ = startTm_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasStartTm()) {
          setStartTm(other.getStartTm());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_game_start_nt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start_nt];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_game_start_nt;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start_nt];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start_nt];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start_nt];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start_nt];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_game_start_nt;
        onChanged();
        return this;
      }

      // optional int32 start_tm = 2;
      private int startTm_ ;
      /**
       * <code>optional int32 start_tm = 2;</code>
       *
       * <pre>
       *游戏开始了	用于倒计时
       * </pre>
       */
      public boolean hasStartTm() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 start_tm = 2;</code>
       *
       * <pre>
       *游戏开始了	用于倒计时
       * </pre>
       */
      public int getStartTm() {
        return startTm_;
      }
      /**
       * <code>optional int32 start_tm = 2;</code>
       *
       * <pre>
       *游戏开始了	用于倒计时
       * </pre>
       */
      public Builder setStartTm(int value) {
        bitField0_ |= 0x00000002;
        startTm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 start_tm = 2;</code>
       *
       * <pre>
       *游戏开始了	用于倒计时
       * </pre>
       */
      public Builder clearStartTm() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startTm_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_game_start_nt)
    }

    static {
      defaultInstance = new packetl2c_game_start_nt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_game_start_nt)
  }

  public interface packetl2c_circle_start_ntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_start_nt];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_start_nt];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_start_nt];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional int32 host_pos = 2;
    /**
     * <code>optional int32 host_pos = 2;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    boolean hasHostPos();
    /**
     * <code>optional int32 host_pos = 2;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    int getHostPos();

    // optional int32 circle_idx = 3;
    /**
     * <code>optional int32 circle_idx = 3;</code>
     *
     * <pre>
     *第几圈
     * </pre>
     */
    boolean hasCircleIdx();
    /**
     * <code>optional int32 circle_idx = 3;</code>
     *
     * <pre>
     *第几圈
     * </pre>
     */
    int getCircleIdx();

    // optional int32 east_start_pos = 4;
    /**
     * <code>optional int32 east_start_pos = 4;</code>
     *
     * <pre>
     *东风位置	
     * </pre>
     */
    boolean hasEastStartPos();
    /**
     * <code>optional int32 east_start_pos = 4;</code>
     *
     * <pre>
     *东风位置	
     * </pre>
     */
    int getEastStartPos();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_circle_start_nt}
   *
   * <pre>
   *一局游戏开始时发送
   * </pre>
   */
  public static final class packetl2c_circle_start_nt extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_circle_start_ntOrBuilder {
    // Use packetl2c_circle_start_nt.newBuilder() to construct.
    private packetl2c_circle_start_nt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_circle_start_nt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_circle_start_nt defaultInstance;
    public static packetl2c_circle_start_nt getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_circle_start_nt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_circle_start_nt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              hostPos_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              circleIdx_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              eastStartPos_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_circle_start_nt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_circle_start_nt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_circle_start_nt> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_circle_start_nt>() {
      public packetl2c_circle_start_nt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_circle_start_nt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_circle_start_nt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_start_nt];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_start_nt];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_start_nt];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional int32 host_pos = 2;
    public static final int HOST_POS_FIELD_NUMBER = 2;
    private int hostPos_;
    /**
     * <code>optional int32 host_pos = 2;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public boolean hasHostPos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 host_pos = 2;</code>
     *
     * <pre>
     *庄家位置
     * </pre>
     */
    public int getHostPos() {
      return hostPos_;
    }

    // optional int32 circle_idx = 3;
    public static final int CIRCLE_IDX_FIELD_NUMBER = 3;
    private int circleIdx_;
    /**
     * <code>optional int32 circle_idx = 3;</code>
     *
     * <pre>
     *第几圈
     * </pre>
     */
    public boolean hasCircleIdx() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 circle_idx = 3;</code>
     *
     * <pre>
     *第几圈
     * </pre>
     */
    public int getCircleIdx() {
      return circleIdx_;
    }

    // optional int32 east_start_pos = 4;
    public static final int EAST_START_POS_FIELD_NUMBER = 4;
    private int eastStartPos_;
    /**
     * <code>optional int32 east_start_pos = 4;</code>
     *
     * <pre>
     *东风位置	
     * </pre>
     */
    public boolean hasEastStartPos() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 east_start_pos = 4;</code>
     *
     * <pre>
     *东风位置	
     * </pre>
     */
    public int getEastStartPos() {
      return eastStartPos_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_circle_start_nt;
      hostPos_ = 0;
      circleIdx_ = 0;
      eastStartPos_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, hostPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, circleIdx_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, eastStartPos_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, hostPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, circleIdx_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, eastStartPos_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_circle_start_nt}
     *
     * <pre>
     *一局游戏开始时发送
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_ntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_circle_start_nt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_circle_start_nt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_circle_start_nt;
        bitField0_ = (bitField0_ & ~0x00000001);
        hostPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        circleIdx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        eastStartPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_circle_start_nt_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hostPos_ = hostPos_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.circleIdx_ = circleIdx_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.eastStartPos_ = eastStartPos_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasHostPos()) {
          setHostPos(other.getHostPos());
        }
        if (other.hasCircleIdx()) {
          setCircleIdx(other.getCircleIdx());
        }
        if (other.hasEastStartPos()) {
          setEastStartPos(other.getEastStartPos());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_start_nt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_start_nt];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_circle_start_nt;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_start_nt];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_start_nt];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_start_nt];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_start_nt];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_circle_start_nt;
        onChanged();
        return this;
      }

      // optional int32 host_pos = 2;
      private int hostPos_ ;
      /**
       * <code>optional int32 host_pos = 2;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public boolean hasHostPos() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 host_pos = 2;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public int getHostPos() {
        return hostPos_;
      }
      /**
       * <code>optional int32 host_pos = 2;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder setHostPos(int value) {
        bitField0_ |= 0x00000002;
        hostPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 host_pos = 2;</code>
       *
       * <pre>
       *庄家位置
       * </pre>
       */
      public Builder clearHostPos() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hostPos_ = 0;
        onChanged();
        return this;
      }

      // optional int32 circle_idx = 3;
      private int circleIdx_ ;
      /**
       * <code>optional int32 circle_idx = 3;</code>
       *
       * <pre>
       *第几圈
       * </pre>
       */
      public boolean hasCircleIdx() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 circle_idx = 3;</code>
       *
       * <pre>
       *第几圈
       * </pre>
       */
      public int getCircleIdx() {
        return circleIdx_;
      }
      /**
       * <code>optional int32 circle_idx = 3;</code>
       *
       * <pre>
       *第几圈
       * </pre>
       */
      public Builder setCircleIdx(int value) {
        bitField0_ |= 0x00000004;
        circleIdx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 circle_idx = 3;</code>
       *
       * <pre>
       *第几圈
       * </pre>
       */
      public Builder clearCircleIdx() {
        bitField0_ = (bitField0_ & ~0x00000004);
        circleIdx_ = 0;
        onChanged();
        return this;
      }

      // optional int32 east_start_pos = 4;
      private int eastStartPos_ ;
      /**
       * <code>optional int32 east_start_pos = 4;</code>
       *
       * <pre>
       *东风位置	
       * </pre>
       */
      public boolean hasEastStartPos() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 east_start_pos = 4;</code>
       *
       * <pre>
       *东风位置	
       * </pre>
       */
      public int getEastStartPos() {
        return eastStartPos_;
      }
      /**
       * <code>optional int32 east_start_pos = 4;</code>
       *
       * <pre>
       *东风位置	
       * </pre>
       */
      public Builder setEastStartPos(int value) {
        bitField0_ |= 0x00000008;
        eastStartPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 east_start_pos = 4;</code>
       *
       * <pre>
       *东风位置	
       * </pre>
       */
      public Builder clearEastStartPos() {
        bitField0_ = (bitField0_ & ~0x00000008);
        eastStartPos_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_circle_start_nt)
    }

    static {
      defaultInstance = new packetl2c_circle_start_nt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_circle_start_nt)
  }

  public interface packetl2c_dice_ntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dice_nt];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dice_nt];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dice_nt];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional int32 fire_pos = 2;
    /**
     * <code>optional int32 fire_pos = 2;</code>
     *
     * <pre>
     *触发的位置
     * </pre>
     */
    boolean hasFirePos();
    /**
     * <code>optional int32 fire_pos = 2;</code>
     *
     * <pre>
     *触发的位置
     * </pre>
     */
    int getFirePos();

    // repeated int32 dice_list = 3;
    /**
     * <code>repeated int32 dice_list = 3;</code>
     *
     * <pre>
     *骰子的值
     * </pre>
     */
    java.util.List<java.lang.Integer> getDiceListList();
    /**
     * <code>repeated int32 dice_list = 3;</code>
     *
     * <pre>
     *骰子的值
     * </pre>
     */
    int getDiceListCount();
    /**
     * <code>repeated int32 dice_list = 3;</code>
     *
     * <pre>
     *骰子的值
     * </pre>
     */
    int getDiceList(int index);
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_dice_nt}
   *
   * <pre>
   *掷骰子
   * </pre>
   */
  public static final class packetl2c_dice_nt extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_dice_ntOrBuilder {
    // Use packetl2c_dice_nt.newBuilder() to construct.
    private packetl2c_dice_nt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_dice_nt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_dice_nt defaultInstance;
    public static packetl2c_dice_nt getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_dice_nt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_dice_nt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              firePos_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                diceList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              diceList_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                diceList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                diceList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          diceList_ = java.util.Collections.unmodifiableList(diceList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_dice_nt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_dice_nt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_dice_nt> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_dice_nt>() {
      public packetl2c_dice_nt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_dice_nt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_dice_nt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dice_nt];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dice_nt];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dice_nt];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional int32 fire_pos = 2;
    public static final int FIRE_POS_FIELD_NUMBER = 2;
    private int firePos_;
    /**
     * <code>optional int32 fire_pos = 2;</code>
     *
     * <pre>
     *触发的位置
     * </pre>
     */
    public boolean hasFirePos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 fire_pos = 2;</code>
     *
     * <pre>
     *触发的位置
     * </pre>
     */
    public int getFirePos() {
      return firePos_;
    }

    // repeated int32 dice_list = 3;
    public static final int DICE_LIST_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> diceList_;
    /**
     * <code>repeated int32 dice_list = 3;</code>
     *
     * <pre>
     *骰子的值
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDiceListList() {
      return diceList_;
    }
    /**
     * <code>repeated int32 dice_list = 3;</code>
     *
     * <pre>
     *骰子的值
     * </pre>
     */
    public int getDiceListCount() {
      return diceList_.size();
    }
    /**
     * <code>repeated int32 dice_list = 3;</code>
     *
     * <pre>
     *骰子的值
     * </pre>
     */
    public int getDiceList(int index) {
      return diceList_.get(index);
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_dice_nt;
      firePos_ = 0;
      diceList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, firePos_);
      }
      for (int i = 0; i < diceList_.size(); i++) {
        output.writeInt32(3, diceList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, firePos_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < diceList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(diceList_.get(i));
        }
        size += dataSize;
        size += 1 * getDiceListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_dice_nt}
     *
     * <pre>
     *掷骰子
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_ntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_dice_nt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_dice_nt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_dice_nt;
        bitField0_ = (bitField0_ & ~0x00000001);
        firePos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        diceList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_dice_nt_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.firePos_ = firePos_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          diceList_ = java.util.Collections.unmodifiableList(diceList_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.diceList_ = diceList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasFirePos()) {
          setFirePos(other.getFirePos());
        }
        if (!other.diceList_.isEmpty()) {
          if (diceList_.isEmpty()) {
            diceList_ = other.diceList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDiceListIsMutable();
            diceList_.addAll(other.diceList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_dice_nt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dice_nt];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_dice_nt;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dice_nt];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dice_nt];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dice_nt];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_dice_nt];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_dice_nt;
        onChanged();
        return this;
      }

      // optional int32 fire_pos = 2;
      private int firePos_ ;
      /**
       * <code>optional int32 fire_pos = 2;</code>
       *
       * <pre>
       *触发的位置
       * </pre>
       */
      public boolean hasFirePos() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 fire_pos = 2;</code>
       *
       * <pre>
       *触发的位置
       * </pre>
       */
      public int getFirePos() {
        return firePos_;
      }
      /**
       * <code>optional int32 fire_pos = 2;</code>
       *
       * <pre>
       *触发的位置
       * </pre>
       */
      public Builder setFirePos(int value) {
        bitField0_ |= 0x00000002;
        firePos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fire_pos = 2;</code>
       *
       * <pre>
       *触发的位置
       * </pre>
       */
      public Builder clearFirePos() {
        bitField0_ = (bitField0_ & ~0x00000002);
        firePos_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 dice_list = 3;
      private java.util.List<java.lang.Integer> diceList_ = java.util.Collections.emptyList();
      private void ensureDiceListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          diceList_ = new java.util.ArrayList<java.lang.Integer>(diceList_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 dice_list = 3;</code>
       *
       * <pre>
       *骰子的值
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDiceListList() {
        return java.util.Collections.unmodifiableList(diceList_);
      }
      /**
       * <code>repeated int32 dice_list = 3;</code>
       *
       * <pre>
       *骰子的值
       * </pre>
       */
      public int getDiceListCount() {
        return diceList_.size();
      }
      /**
       * <code>repeated int32 dice_list = 3;</code>
       *
       * <pre>
       *骰子的值
       * </pre>
       */
      public int getDiceList(int index) {
        return diceList_.get(index);
      }
      /**
       * <code>repeated int32 dice_list = 3;</code>
       *
       * <pre>
       *骰子的值
       * </pre>
       */
      public Builder setDiceList(
          int index, int value) {
        ensureDiceListIsMutable();
        diceList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dice_list = 3;</code>
       *
       * <pre>
       *骰子的值
       * </pre>
       */
      public Builder addDiceList(int value) {
        ensureDiceListIsMutable();
        diceList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dice_list = 3;</code>
       *
       * <pre>
       *骰子的值
       * </pre>
       */
      public Builder addAllDiceList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDiceListIsMutable();
        super.addAll(values, diceList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dice_list = 3;</code>
       *
       * <pre>
       *骰子的值
       * </pre>
       */
      public Builder clearDiceList() {
        diceList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_dice_nt)
    }

    static {
      defaultInstance = new packetl2c_dice_nt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_dice_nt)
  }

  public interface packetl2c_init_card_ntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_init_card_nt];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_init_card_nt];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_init_card_nt];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // repeated int32 cards = 2;
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *玩家的手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *玩家的手牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *玩家的手牌
     * </pre>
     */
    int getCards(int index);

    // optional int32 left_card_num = 3;
    /**
     * <code>optional int32 left_card_num = 3;</code>
     *
     * <pre>
     *余下牌的数量
     * </pre>
     */
    boolean hasLeftCardNum();
    /**
     * <code>optional int32 left_card_num = 3;</code>
     *
     * <pre>
     *余下牌的数量
     * </pre>
     */
    int getLeftCardNum();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_init_card_nt}
   *
   * <pre>
   *游戏开始时初始化玩家的手牌
   * </pre>
   */
  public static final class packetl2c_init_card_nt extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_init_card_ntOrBuilder {
    // Use packetl2c_init_card_nt.newBuilder() to construct.
    private packetl2c_init_card_nt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_init_card_nt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_init_card_nt defaultInstance;
    public static packetl2c_init_card_nt getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_init_card_nt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_init_card_nt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              leftCardNum_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_init_card_nt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_init_card_nt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_init_card_nt> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_init_card_nt>() {
      public packetl2c_init_card_nt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_init_card_nt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_init_card_nt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_init_card_nt];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_init_card_nt];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_init_card_nt];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // repeated int32 cards = 2;
    public static final int CARDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *玩家的手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *玩家的手牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *玩家的手牌
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 left_card_num = 3;
    public static final int LEFT_CARD_NUM_FIELD_NUMBER = 3;
    private int leftCardNum_;
    /**
     * <code>optional int32 left_card_num = 3;</code>
     *
     * <pre>
     *余下牌的数量
     * </pre>
     */
    public boolean hasLeftCardNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 left_card_num = 3;</code>
     *
     * <pre>
     *余下牌的数量
     * </pre>
     */
    public int getLeftCardNum() {
      return leftCardNum_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_init_card_nt;
      cards_ = java.util.Collections.emptyList();
      leftCardNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(2, cards_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, leftCardNum_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, leftCardNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_init_card_nt}
     *
     * <pre>
     *游戏开始时初始化玩家的手牌
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_ntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_init_card_nt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_init_card_nt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_init_card_nt;
        bitField0_ = (bitField0_ & ~0x00000001);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        leftCardNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_init_card_nt_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.leftCardNum_ = leftCardNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasLeftCardNum()) {
          setLeftCardNum(other.getLeftCardNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_init_card_nt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_init_card_nt];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_init_card_nt;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_init_card_nt];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_init_card_nt];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_init_card_nt];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_init_card_nt];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_init_card_nt;
        onChanged();
        return this;
      }

      // repeated int32 cards = 2;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *玩家的手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *玩家的手牌
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *玩家的手牌
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *玩家的手牌
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *玩家的手牌
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *玩家的手牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *玩家的手牌
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 left_card_num = 3;
      private int leftCardNum_ ;
      /**
       * <code>optional int32 left_card_num = 3;</code>
       *
       * <pre>
       *余下牌的数量
       * </pre>
       */
      public boolean hasLeftCardNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 left_card_num = 3;</code>
       *
       * <pre>
       *余下牌的数量
       * </pre>
       */
      public int getLeftCardNum() {
        return leftCardNum_;
      }
      /**
       * <code>optional int32 left_card_num = 3;</code>
       *
       * <pre>
       *余下牌的数量
       * </pre>
       */
      public Builder setLeftCardNum(int value) {
        bitField0_ |= 0x00000004;
        leftCardNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 left_card_num = 3;</code>
       *
       * <pre>
       *余下牌的数量
       * </pre>
       */
      public Builder clearLeftCardNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        leftCardNum_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_init_card_nt)
    }

    static {
      defaultInstance = new packetl2c_init_card_nt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_init_card_nt)
  }

  public interface packetl2c_trun_index_ntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_trun_index_nt];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_trun_index_nt];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_trun_index_nt];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional int32 pos = 2;
    /**
     * <code>optional int32 pos = 2;</code>
     *
     * <pre>
     *触发的位置
     * </pre>
     */
    boolean hasPos();
    /**
     * <code>optional int32 pos = 2;</code>
     *
     * <pre>
     *触发的位置
     * </pre>
     */
    int getPos();

    // optional int32 left_card_num = 3;
    /**
     * <code>optional int32 left_card_num = 3;</code>
     *
     * <pre>
     *余下牌的数量
     * </pre>
     */
    boolean hasLeftCardNum();
    /**
     * <code>optional int32 left_card_num = 3;</code>
     *
     * <pre>
     *余下牌的数量
     * </pre>
     */
    int getLeftCardNum();

    // optional int32 time_expire = 4;
    /**
     * <code>optional int32 time_expire = 4;</code>
     *
     * <pre>
     *此命令过期时间戳
     * </pre>
     */
    boolean hasTimeExpire();
    /**
     * <code>optional int32 time_expire = 4;</code>
     *
     * <pre>
     *此命令过期时间戳
     * </pre>
     */
    int getTimeExpire();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_trun_index_nt}
   *
   * <pre>
   *指示某个的提示
   * </pre>
   */
  public static final class packetl2c_trun_index_nt extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_trun_index_ntOrBuilder {
    // Use packetl2c_trun_index_nt.newBuilder() to construct.
    private packetl2c_trun_index_nt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_trun_index_nt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_trun_index_nt defaultInstance;
    public static packetl2c_trun_index_nt getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_trun_index_nt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_trun_index_nt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              pos_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              leftCardNum_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timeExpire_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_trun_index_nt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_trun_index_nt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_trun_index_nt> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_trun_index_nt>() {
      public packetl2c_trun_index_nt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_trun_index_nt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_trun_index_nt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_trun_index_nt];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_trun_index_nt];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_trun_index_nt];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional int32 pos = 2;
    public static final int POS_FIELD_NUMBER = 2;
    private int pos_;
    /**
     * <code>optional int32 pos = 2;</code>
     *
     * <pre>
     *触发的位置
     * </pre>
     */
    public boolean hasPos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 pos = 2;</code>
     *
     * <pre>
     *触发的位置
     * </pre>
     */
    public int getPos() {
      return pos_;
    }

    // optional int32 left_card_num = 3;
    public static final int LEFT_CARD_NUM_FIELD_NUMBER = 3;
    private int leftCardNum_;
    /**
     * <code>optional int32 left_card_num = 3;</code>
     *
     * <pre>
     *余下牌的数量
     * </pre>
     */
    public boolean hasLeftCardNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 left_card_num = 3;</code>
     *
     * <pre>
     *余下牌的数量
     * </pre>
     */
    public int getLeftCardNum() {
      return leftCardNum_;
    }

    // optional int32 time_expire = 4;
    public static final int TIME_EXPIRE_FIELD_NUMBER = 4;
    private int timeExpire_;
    /**
     * <code>optional int32 time_expire = 4;</code>
     *
     * <pre>
     *此命令过期时间戳
     * </pre>
     */
    public boolean hasTimeExpire() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 time_expire = 4;</code>
     *
     * <pre>
     *此命令过期时间戳
     * </pre>
     */
    public int getTimeExpire() {
      return timeExpire_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_trun_index_nt;
      pos_ = 0;
      leftCardNum_ = 0;
      timeExpire_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, pos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, leftCardNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, timeExpire_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, pos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, leftCardNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, timeExpire_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_trun_index_nt}
     *
     * <pre>
     *指示某个的提示
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_ntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_trun_index_nt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_trun_index_nt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_trun_index_nt;
        bitField0_ = (bitField0_ & ~0x00000001);
        pos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        leftCardNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        timeExpire_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_trun_index_nt_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pos_ = pos_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.leftCardNum_ = leftCardNum_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timeExpire_ = timeExpire_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasPos()) {
          setPos(other.getPos());
        }
        if (other.hasLeftCardNum()) {
          setLeftCardNum(other.getLeftCardNum());
        }
        if (other.hasTimeExpire()) {
          setTimeExpire(other.getTimeExpire());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_trun_index_nt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_trun_index_nt];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_trun_index_nt;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_trun_index_nt];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_trun_index_nt];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_trun_index_nt];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_trun_index_nt];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_trun_index_nt;
        onChanged();
        return this;
      }

      // optional int32 pos = 2;
      private int pos_ ;
      /**
       * <code>optional int32 pos = 2;</code>
       *
       * <pre>
       *触发的位置
       * </pre>
       */
      public boolean hasPos() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 pos = 2;</code>
       *
       * <pre>
       *触发的位置
       * </pre>
       */
      public int getPos() {
        return pos_;
      }
      /**
       * <code>optional int32 pos = 2;</code>
       *
       * <pre>
       *触发的位置
       * </pre>
       */
      public Builder setPos(int value) {
        bitField0_ |= 0x00000002;
        pos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pos = 2;</code>
       *
       * <pre>
       *触发的位置
       * </pre>
       */
      public Builder clearPos() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pos_ = 0;
        onChanged();
        return this;
      }

      // optional int32 left_card_num = 3;
      private int leftCardNum_ ;
      /**
       * <code>optional int32 left_card_num = 3;</code>
       *
       * <pre>
       *余下牌的数量
       * </pre>
       */
      public boolean hasLeftCardNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 left_card_num = 3;</code>
       *
       * <pre>
       *余下牌的数量
       * </pre>
       */
      public int getLeftCardNum() {
        return leftCardNum_;
      }
      /**
       * <code>optional int32 left_card_num = 3;</code>
       *
       * <pre>
       *余下牌的数量
       * </pre>
       */
      public Builder setLeftCardNum(int value) {
        bitField0_ |= 0x00000004;
        leftCardNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 left_card_num = 3;</code>
       *
       * <pre>
       *余下牌的数量
       * </pre>
       */
      public Builder clearLeftCardNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        leftCardNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 time_expire = 4;
      private int timeExpire_ ;
      /**
       * <code>optional int32 time_expire = 4;</code>
       *
       * <pre>
       *此命令过期时间戳
       * </pre>
       */
      public boolean hasTimeExpire() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 time_expire = 4;</code>
       *
       * <pre>
       *此命令过期时间戳
       * </pre>
       */
      public int getTimeExpire() {
        return timeExpire_;
      }
      /**
       * <code>optional int32 time_expire = 4;</code>
       *
       * <pre>
       *此命令过期时间戳
       * </pre>
       */
      public Builder setTimeExpire(int value) {
        bitField0_ |= 0x00000008;
        timeExpire_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 time_expire = 4;</code>
       *
       * <pre>
       *此命令过期时间戳
       * </pre>
       */
      public Builder clearTimeExpire() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timeExpire_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_trun_index_nt)
    }

    static {
      defaultInstance = new packetl2c_trun_index_nt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_trun_index_nt)
  }

  public interface packetl2c_replace_flower_ntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_replace_flower_nt];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_replace_flower_nt];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_replace_flower_nt];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional int32 seat_pos = 2;
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *补花的位置
     * </pre>
     */
    boolean hasSeatPos();
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *补花的位置
     * </pre>
     */
    int getSeatPos();

    // repeated int32 flower_cards = 3;
    /**
     * <code>repeated int32 flower_cards = 3;</code>
     *
     * <pre>
     *补花的花值
     * </pre>
     */
    java.util.List<java.lang.Integer> getFlowerCardsList();
    /**
     * <code>repeated int32 flower_cards = 3;</code>
     *
     * <pre>
     *补花的花值
     * </pre>
     */
    int getFlowerCardsCount();
    /**
     * <code>repeated int32 flower_cards = 3;</code>
     *
     * <pre>
     *补花的花值
     * </pre>
     */
    int getFlowerCards(int index);

    // optional int32 replace_card = 4;
    /**
     * <code>optional int32 replace_card = 4;</code>
     *
     * <pre>
     *摸牌时，补花后的牌值
     * </pre>
     */
    boolean hasReplaceCard();
    /**
     * <code>optional int32 replace_card = 4;</code>
     *
     * <pre>
     *摸牌时，补花后的牌值
     * </pre>
     */
    int getReplaceCard();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_replace_flower_nt}
   *
   * <pre>
   *补花操作
   * </pre>
   */
  public static final class packetl2c_replace_flower_nt extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_replace_flower_ntOrBuilder {
    // Use packetl2c_replace_flower_nt.newBuilder() to construct.
    private packetl2c_replace_flower_nt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_replace_flower_nt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_replace_flower_nt defaultInstance;
    public static packetl2c_replace_flower_nt getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_replace_flower_nt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_replace_flower_nt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seatPos_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                flowerCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              flowerCards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                flowerCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                flowerCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              replaceCard_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          flowerCards_ = java.util.Collections.unmodifiableList(flowerCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_replace_flower_nt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_replace_flower_nt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_replace_flower_nt> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_replace_flower_nt>() {
      public packetl2c_replace_flower_nt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_replace_flower_nt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_replace_flower_nt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_replace_flower_nt];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_replace_flower_nt];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_replace_flower_nt];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional int32 seat_pos = 2;
    public static final int SEAT_POS_FIELD_NUMBER = 2;
    private int seatPos_;
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *补花的位置
     * </pre>
     */
    public boolean hasSeatPos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *补花的位置
     * </pre>
     */
    public int getSeatPos() {
      return seatPos_;
    }

    // repeated int32 flower_cards = 3;
    public static final int FLOWER_CARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> flowerCards_;
    /**
     * <code>repeated int32 flower_cards = 3;</code>
     *
     * <pre>
     *补花的花值
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFlowerCardsList() {
      return flowerCards_;
    }
    /**
     * <code>repeated int32 flower_cards = 3;</code>
     *
     * <pre>
     *补花的花值
     * </pre>
     */
    public int getFlowerCardsCount() {
      return flowerCards_.size();
    }
    /**
     * <code>repeated int32 flower_cards = 3;</code>
     *
     * <pre>
     *补花的花值
     * </pre>
     */
    public int getFlowerCards(int index) {
      return flowerCards_.get(index);
    }

    // optional int32 replace_card = 4;
    public static final int REPLACE_CARD_FIELD_NUMBER = 4;
    private int replaceCard_;
    /**
     * <code>optional int32 replace_card = 4;</code>
     *
     * <pre>
     *摸牌时，补花后的牌值
     * </pre>
     */
    public boolean hasReplaceCard() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 replace_card = 4;</code>
     *
     * <pre>
     *摸牌时，补花后的牌值
     * </pre>
     */
    public int getReplaceCard() {
      return replaceCard_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_replace_flower_nt;
      seatPos_ = 0;
      flowerCards_ = java.util.Collections.emptyList();
      replaceCard_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seatPos_);
      }
      for (int i = 0; i < flowerCards_.size(); i++) {
        output.writeInt32(3, flowerCards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, replaceCard_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatPos_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < flowerCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(flowerCards_.get(i));
        }
        size += dataSize;
        size += 1 * getFlowerCardsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, replaceCard_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_replace_flower_nt}
     *
     * <pre>
     *补花操作
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_ntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_replace_flower_nt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_replace_flower_nt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_replace_flower_nt;
        bitField0_ = (bitField0_ & ~0x00000001);
        seatPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        flowerCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        replaceCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_replace_flower_nt_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatPos_ = seatPos_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          flowerCards_ = java.util.Collections.unmodifiableList(flowerCards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.flowerCards_ = flowerCards_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.replaceCard_ = replaceCard_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasSeatPos()) {
          setSeatPos(other.getSeatPos());
        }
        if (!other.flowerCards_.isEmpty()) {
          if (flowerCards_.isEmpty()) {
            flowerCards_ = other.flowerCards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFlowerCardsIsMutable();
            flowerCards_.addAll(other.flowerCards_);
          }
          onChanged();
        }
        if (other.hasReplaceCard()) {
          setReplaceCard(other.getReplaceCard());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_replace_flower_nt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_replace_flower_nt];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_replace_flower_nt;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_replace_flower_nt];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_replace_flower_nt];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_replace_flower_nt];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_replace_flower_nt];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_replace_flower_nt;
        onChanged();
        return this;
      }

      // optional int32 seat_pos = 2;
      private int seatPos_ ;
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *补花的位置
       * </pre>
       */
      public boolean hasSeatPos() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *补花的位置
       * </pre>
       */
      public int getSeatPos() {
        return seatPos_;
      }
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *补花的位置
       * </pre>
       */
      public Builder setSeatPos(int value) {
        bitField0_ |= 0x00000002;
        seatPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *补花的位置
       * </pre>
       */
      public Builder clearSeatPos() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seatPos_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 flower_cards = 3;
      private java.util.List<java.lang.Integer> flowerCards_ = java.util.Collections.emptyList();
      private void ensureFlowerCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          flowerCards_ = new java.util.ArrayList<java.lang.Integer>(flowerCards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 flower_cards = 3;</code>
       *
       * <pre>
       *补花的花值
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFlowerCardsList() {
        return java.util.Collections.unmodifiableList(flowerCards_);
      }
      /**
       * <code>repeated int32 flower_cards = 3;</code>
       *
       * <pre>
       *补花的花值
       * </pre>
       */
      public int getFlowerCardsCount() {
        return flowerCards_.size();
      }
      /**
       * <code>repeated int32 flower_cards = 3;</code>
       *
       * <pre>
       *补花的花值
       * </pre>
       */
      public int getFlowerCards(int index) {
        return flowerCards_.get(index);
      }
      /**
       * <code>repeated int32 flower_cards = 3;</code>
       *
       * <pre>
       *补花的花值
       * </pre>
       */
      public Builder setFlowerCards(
          int index, int value) {
        ensureFlowerCardsIsMutable();
        flowerCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flower_cards = 3;</code>
       *
       * <pre>
       *补花的花值
       * </pre>
       */
      public Builder addFlowerCards(int value) {
        ensureFlowerCardsIsMutable();
        flowerCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flower_cards = 3;</code>
       *
       * <pre>
       *补花的花值
       * </pre>
       */
      public Builder addAllFlowerCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFlowerCardsIsMutable();
        super.addAll(values, flowerCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flower_cards = 3;</code>
       *
       * <pre>
       *补花的花值
       * </pre>
       */
      public Builder clearFlowerCards() {
        flowerCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 replace_card = 4;
      private int replaceCard_ ;
      /**
       * <code>optional int32 replace_card = 4;</code>
       *
       * <pre>
       *摸牌时，补花后的牌值
       * </pre>
       */
      public boolean hasReplaceCard() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 replace_card = 4;</code>
       *
       * <pre>
       *摸牌时，补花后的牌值
       * </pre>
       */
      public int getReplaceCard() {
        return replaceCard_;
      }
      /**
       * <code>optional int32 replace_card = 4;</code>
       *
       * <pre>
       *摸牌时，补花后的牌值
       * </pre>
       */
      public Builder setReplaceCard(int value) {
        bitField0_ |= 0x00000008;
        replaceCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 replace_card = 4;</code>
       *
       * <pre>
       *摸牌时，补花后的牌值
       * </pre>
       */
      public Builder clearReplaceCard() {
        bitField0_ = (bitField0_ & ~0x00000008);
        replaceCard_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_replace_flower_nt)
    }

    static {
      defaultInstance = new packetl2c_replace_flower_nt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_replace_flower_nt)
  }

  public interface packetl2c_player_action_ntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_action_nt];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_action_nt];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_action_nt];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // repeated .game_guanyuan_protocols.msg_action_type action_type = 2;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
     *
     * <pre>
     *玩家可以操作的列表
     * </pre>
     */
    java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type> 
        getActionTypeList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
     *
     * <pre>
     *玩家可以操作的列表
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type getActionType(int index);
    /**
     * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
     *
     * <pre>
     *玩家可以操作的列表
     * </pre>
     */
    int getActionTypeCount();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
     *
     * <pre>
     *玩家可以操作的列表
     * </pre>
     */
    java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_action_typeOrBuilder> 
        getActionTypeOrBuilderList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
     *
     * <pre>
     *玩家可以操作的列表
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_action_typeOrBuilder getActionTypeOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_player_action_nt}
   *
   * <pre>
   *通知某个玩家现在可以的操作类型
   * </pre>
   */
  public static final class packetl2c_player_action_nt extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_player_action_ntOrBuilder {
    // Use packetl2c_player_action_nt.newBuilder() to construct.
    private packetl2c_player_action_nt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_player_action_nt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_player_action_nt defaultInstance;
    public static packetl2c_player_action_nt getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_player_action_nt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_player_action_nt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                actionType_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type>();
                mutable_bitField0_ |= 0x00000002;
              }
              actionType_.add(input.readMessage(game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          actionType_ = java.util.Collections.unmodifiableList(actionType_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_player_action_nt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_player_action_nt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_player_action_nt> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_player_action_nt>() {
      public packetl2c_player_action_nt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_player_action_nt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_player_action_nt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_action_nt];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_action_nt];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_action_nt];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // repeated .game_guanyuan_protocols.msg_action_type action_type = 2;
    public static final int ACTION_TYPE_FIELD_NUMBER = 2;
    private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type> actionType_;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
     *
     * <pre>
     *玩家可以操作的列表
     * </pre>
     */
    public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type> getActionTypeList() {
      return actionType_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
     *
     * <pre>
     *玩家可以操作的列表
     * </pre>
     */
    public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_action_typeOrBuilder> 
        getActionTypeOrBuilderList() {
      return actionType_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
     *
     * <pre>
     *玩家可以操作的列表
     * </pre>
     */
    public int getActionTypeCount() {
      return actionType_.size();
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
     *
     * <pre>
     *玩家可以操作的列表
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type getActionType(int index) {
      return actionType_.get(index);
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
     *
     * <pre>
     *玩家可以操作的列表
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_action_typeOrBuilder getActionTypeOrBuilder(
        int index) {
      return actionType_.get(index);
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_player_action_nt;
      actionType_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      for (int i = 0; i < actionType_.size(); i++) {
        output.writeMessage(2, actionType_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      for (int i = 0; i < actionType_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, actionType_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_player_action_nt}
     *
     * <pre>
     *通知某个玩家现在可以的操作类型
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_ntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_player_action_nt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_player_action_nt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getActionTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_player_action_nt;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (actionTypeBuilder_ == null) {
          actionType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          actionTypeBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_player_action_nt_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (actionTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            actionType_ = java.util.Collections.unmodifiableList(actionType_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.actionType_ = actionType_;
        } else {
          result.actionType_ = actionTypeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (actionTypeBuilder_ == null) {
          if (!other.actionType_.isEmpty()) {
            if (actionType_.isEmpty()) {
              actionType_ = other.actionType_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureActionTypeIsMutable();
              actionType_.addAll(other.actionType_);
            }
            onChanged();
          }
        } else {
          if (!other.actionType_.isEmpty()) {
            if (actionTypeBuilder_.isEmpty()) {
              actionTypeBuilder_.dispose();
              actionTypeBuilder_ = null;
              actionType_ = other.actionType_;
              bitField0_ = (bitField0_ & ~0x00000002);
              actionTypeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getActionTypeFieldBuilder() : null;
            } else {
              actionTypeBuilder_.addAllMessages(other.actionType_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_action_nt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_action_nt];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_player_action_nt;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_action_nt];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_action_nt];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_action_nt];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_action_nt];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_player_action_nt;
        onChanged();
        return this;
      }

      // repeated .game_guanyuan_protocols.msg_action_type action_type = 2;
      private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type> actionType_ =
        java.util.Collections.emptyList();
      private void ensureActionTypeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          actionType_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type>(actionType_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type, game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_action_typeOrBuilder> actionTypeBuilder_;

      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type> getActionTypeList() {
        if (actionTypeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(actionType_);
        } else {
          return actionTypeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public int getActionTypeCount() {
        if (actionTypeBuilder_ == null) {
          return actionType_.size();
        } else {
          return actionTypeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type getActionType(int index) {
        if (actionTypeBuilder_ == null) {
          return actionType_.get(index);
        } else {
          return actionTypeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public Builder setActionType(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type value) {
        if (actionTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionTypeIsMutable();
          actionType_.set(index, value);
          onChanged();
        } else {
          actionTypeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public Builder setActionType(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.Builder builderForValue) {
        if (actionTypeBuilder_ == null) {
          ensureActionTypeIsMutable();
          actionType_.set(index, builderForValue.build());
          onChanged();
        } else {
          actionTypeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public Builder addActionType(game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type value) {
        if (actionTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionTypeIsMutable();
          actionType_.add(value);
          onChanged();
        } else {
          actionTypeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public Builder addActionType(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type value) {
        if (actionTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionTypeIsMutable();
          actionType_.add(index, value);
          onChanged();
        } else {
          actionTypeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public Builder addActionType(
          game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.Builder builderForValue) {
        if (actionTypeBuilder_ == null) {
          ensureActionTypeIsMutable();
          actionType_.add(builderForValue.build());
          onChanged();
        } else {
          actionTypeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public Builder addActionType(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.Builder builderForValue) {
        if (actionTypeBuilder_ == null) {
          ensureActionTypeIsMutable();
          actionType_.add(index, builderForValue.build());
          onChanged();
        } else {
          actionTypeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public Builder addAllActionType(
          java.lang.Iterable<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type> values) {
        if (actionTypeBuilder_ == null) {
          ensureActionTypeIsMutable();
          super.addAll(values, actionType_);
          onChanged();
        } else {
          actionTypeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public Builder clearActionType() {
        if (actionTypeBuilder_ == null) {
          actionType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          actionTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public Builder removeActionType(int index) {
        if (actionTypeBuilder_ == null) {
          ensureActionTypeIsMutable();
          actionType_.remove(index);
          onChanged();
        } else {
          actionTypeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.Builder getActionTypeBuilder(
          int index) {
        return getActionTypeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_action_typeOrBuilder getActionTypeOrBuilder(
          int index) {
        if (actionTypeBuilder_ == null) {
          return actionType_.get(index);  } else {
          return actionTypeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_action_typeOrBuilder> 
           getActionTypeOrBuilderList() {
        if (actionTypeBuilder_ != null) {
          return actionTypeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(actionType_);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.Builder addActionTypeBuilder() {
        return getActionTypeFieldBuilder().addBuilder(
            game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.Builder addActionTypeBuilder(
          int index) {
        return getActionTypeFieldBuilder().addBuilder(
            index, game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_action_type action_type = 2;</code>
       *
       * <pre>
       *玩家可以操作的列表
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.Builder> 
           getActionTypeBuilderList() {
        return getActionTypeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type, game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_action_typeOrBuilder> 
          getActionTypeFieldBuilder() {
        if (actionTypeBuilder_ == null) {
          actionTypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type, game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_action_typeOrBuilder>(
                  actionType_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          actionType_ = null;
        }
        return actionTypeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_player_action_nt)
    }

    static {
      defaultInstance = new packetl2c_player_action_nt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_player_action_nt)
  }

  public interface msg_action_typeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_player_ation_type action_type = 1;
    /**
     * <code>optional .game_guanyuan_protocols.e_player_ation_type action_type = 1;</code>
     *
     * <pre>
     *可以操作的类型
     * </pre>
     */
    boolean hasActionType();
    /**
     * <code>optional .game_guanyuan_protocols.e_player_ation_type action_type = 1;</code>
     *
     * <pre>
     *可以操作的类型
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.e_player_ation_type getActionType();

    // repeated int32 cards = 2;
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *当前操作可以支持的牌的类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *当前操作可以支持的牌的类型
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *当前操作可以支持的牌的类型
     * </pre>
     */
    int getCards(int index);
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.msg_action_type}
   */
  public static final class msg_action_type extends
      com.google.protobuf.GeneratedMessage
      implements msg_action_typeOrBuilder {
    // Use msg_action_type.newBuilder() to construct.
    private msg_action_type(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private msg_action_type(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final msg_action_type defaultInstance;
    public static msg_action_type getDefaultInstance() {
      return defaultInstance;
    }

    public msg_action_type getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private msg_action_type(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyunProtocol.e_player_ation_type value = game_guanyuan_protocols.GameGuanyunProtocol.e_player_ation_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                actionType_ = value;
              }
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_action_type_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_action_type_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.Builder.class);
    }

    public static com.google.protobuf.Parser<msg_action_type> PARSER =
        new com.google.protobuf.AbstractParser<msg_action_type>() {
      public msg_action_type parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new msg_action_type(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<msg_action_type> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_player_ation_type action_type = 1;
    public static final int ACTION_TYPE_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyunProtocol.e_player_ation_type actionType_;
    /**
     * <code>optional .game_guanyuan_protocols.e_player_ation_type action_type = 1;</code>
     *
     * <pre>
     *可以操作的类型
     * </pre>
     */
    public boolean hasActionType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_player_ation_type action_type = 1;</code>
     *
     * <pre>
     *可以操作的类型
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.e_player_ation_type getActionType() {
      return actionType_;
    }

    // repeated int32 cards = 2;
    public static final int CARDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *当前操作可以支持的牌的类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *当前操作可以支持的牌的类型
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *当前操作可以支持的牌的类型
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    private void initFields() {
      actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_player_ation_type.e_player_ation_peng;
      cards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, actionType_.getNumber());
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(2, cards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, actionType_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.msg_action_type}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.msg_action_typeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_action_type_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_action_type_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_player_ation_type.e_player_ation_peng;
        bitField0_ = (bitField0_ & ~0x00000001);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_action_type_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type build() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type result = new game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.actionType_ = actionType_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cards_ = cards_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type.getDefaultInstance()) return this;
        if (other.hasActionType()) {
          setActionType(other.getActionType());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.msg_action_type) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_player_ation_type action_type = 1;
      private game_guanyuan_protocols.GameGuanyunProtocol.e_player_ation_type actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_player_ation_type.e_player_ation_peng;
      /**
       * <code>optional .game_guanyuan_protocols.e_player_ation_type action_type = 1;</code>
       *
       * <pre>
       *可以操作的类型
       * </pre>
       */
      public boolean hasActionType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_player_ation_type action_type = 1;</code>
       *
       * <pre>
       *可以操作的类型
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.e_player_ation_type getActionType() {
        return actionType_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_player_ation_type action_type = 1;</code>
       *
       * <pre>
       *可以操作的类型
       * </pre>
       */
      public Builder setActionType(game_guanyuan_protocols.GameGuanyunProtocol.e_player_ation_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        actionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_player_ation_type action_type = 1;</code>
       *
       * <pre>
       *可以操作的类型
       * </pre>
       */
      public Builder clearActionType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_player_ation_type.e_player_ation_peng;
        onChanged();
        return this;
      }

      // repeated int32 cards = 2;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *当前操作可以支持的牌的类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *当前操作可以支持的牌的类型
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *当前操作可以支持的牌的类型
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *当前操作可以支持的牌的类型
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *当前操作可以支持的牌的类型
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *当前操作可以支持的牌的类型
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *当前操作可以支持的牌的类型
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.msg_action_type)
    }

    static {
      defaultInstance = new msg_action_type(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.msg_action_type)
  }

  public interface packetl2c_action_ntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_nt];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_nt];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_nt];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional int32 seat_pos = 2;
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *某个操作的玩家
     * </pre>
     */
    boolean hasSeatPos();
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *某个操作的玩家
     * </pre>
     */
    int getSeatPos();

    // optional int32 card = 3;
    /**
     * <code>optional int32 card = 3;</code>
     *
     * <pre>
     *操作的牌值
     * </pre>
     */
    boolean hasCard();
    /**
     * <code>optional int32 card = 3;</code>
     *
     * <pre>
     *操作的牌值
     * </pre>
     */
    int getCard();

    // optional .game_guanyuan_protocols.e_action_type action_type = 4;
    /**
     * <code>optional .game_guanyuan_protocols.e_action_type action_type = 4;</code>
     *
     * <pre>
     *玩家操作的类型
     * </pre>
     */
    boolean hasActionType();
    /**
     * <code>optional .game_guanyuan_protocols.e_action_type action_type = 4;</code>
     *
     * <pre>
     *玩家操作的类型
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.e_action_type getActionType();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_action_nt}
   *
   * <pre>
   *广播给所有的玩家，某个玩家要进行的某个操作，比如碰，杠，叫听，过等
   * </pre>
   */
  public static final class packetl2c_action_nt extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_action_ntOrBuilder {
    // Use packetl2c_action_nt.newBuilder() to construct.
    private packetl2c_action_nt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_action_nt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_action_nt defaultInstance;
    public static packetl2c_action_nt getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_action_nt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_action_nt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seatPos_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              card_ = input.readInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyunProtocol.e_action_type value = game_guanyuan_protocols.GameGuanyunProtocol.e_action_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                actionType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_action_nt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_action_nt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_action_nt> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_action_nt>() {
      public packetl2c_action_nt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_action_nt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_action_nt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_nt];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_nt];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_nt];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional int32 seat_pos = 2;
    public static final int SEAT_POS_FIELD_NUMBER = 2;
    private int seatPos_;
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *某个操作的玩家
     * </pre>
     */
    public boolean hasSeatPos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *某个操作的玩家
     * </pre>
     */
    public int getSeatPos() {
      return seatPos_;
    }

    // optional int32 card = 3;
    public static final int CARD_FIELD_NUMBER = 3;
    private int card_;
    /**
     * <code>optional int32 card = 3;</code>
     *
     * <pre>
     *操作的牌值
     * </pre>
     */
    public boolean hasCard() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 card = 3;</code>
     *
     * <pre>
     *操作的牌值
     * </pre>
     */
    public int getCard() {
      return card_;
    }

    // optional .game_guanyuan_protocols.e_action_type action_type = 4;
    public static final int ACTION_TYPE_FIELD_NUMBER = 4;
    private game_guanyuan_protocols.GameGuanyunProtocol.e_action_type actionType_;
    /**
     * <code>optional .game_guanyuan_protocols.e_action_type action_type = 4;</code>
     *
     * <pre>
     *玩家操作的类型
     * </pre>
     */
    public boolean hasActionType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_action_type action_type = 4;</code>
     *
     * <pre>
     *玩家操作的类型
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.e_action_type getActionType() {
      return actionType_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_action_nt;
      seatPos_ = 0;
      card_ = 0;
      actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_action_type.e_action_skip;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seatPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, card_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, actionType_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, card_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, actionType_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_action_nt}
     *
     * <pre>
     *广播给所有的玩家，某个玩家要进行的某个操作，比如碰，杠，叫听，过等
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_ntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_action_nt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_action_nt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_action_nt;
        bitField0_ = (bitField0_ & ~0x00000001);
        seatPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        card_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_action_type.e_action_skip;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_action_nt_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatPos_ = seatPos_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.card_ = card_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.actionType_ = actionType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasSeatPos()) {
          setSeatPos(other.getSeatPos());
        }
        if (other.hasCard()) {
          setCard(other.getCard());
        }
        if (other.hasActionType()) {
          setActionType(other.getActionType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_action_nt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_nt];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_action_nt;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_nt];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_nt];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_nt];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_action_nt];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_action_nt;
        onChanged();
        return this;
      }

      // optional int32 seat_pos = 2;
      private int seatPos_ ;
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *某个操作的玩家
       * </pre>
       */
      public boolean hasSeatPos() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *某个操作的玩家
       * </pre>
       */
      public int getSeatPos() {
        return seatPos_;
      }
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *某个操作的玩家
       * </pre>
       */
      public Builder setSeatPos(int value) {
        bitField0_ |= 0x00000002;
        seatPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *某个操作的玩家
       * </pre>
       */
      public Builder clearSeatPos() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seatPos_ = 0;
        onChanged();
        return this;
      }

      // optional int32 card = 3;
      private int card_ ;
      /**
       * <code>optional int32 card = 3;</code>
       *
       * <pre>
       *操作的牌值
       * </pre>
       */
      public boolean hasCard() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 card = 3;</code>
       *
       * <pre>
       *操作的牌值
       * </pre>
       */
      public int getCard() {
        return card_;
      }
      /**
       * <code>optional int32 card = 3;</code>
       *
       * <pre>
       *操作的牌值
       * </pre>
       */
      public Builder setCard(int value) {
        bitField0_ |= 0x00000004;
        card_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card = 3;</code>
       *
       * <pre>
       *操作的牌值
       * </pre>
       */
      public Builder clearCard() {
        bitField0_ = (bitField0_ & ~0x00000004);
        card_ = 0;
        onChanged();
        return this;
      }

      // optional .game_guanyuan_protocols.e_action_type action_type = 4;
      private game_guanyuan_protocols.GameGuanyunProtocol.e_action_type actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_action_type.e_action_skip;
      /**
       * <code>optional .game_guanyuan_protocols.e_action_type action_type = 4;</code>
       *
       * <pre>
       *玩家操作的类型
       * </pre>
       */
      public boolean hasActionType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_action_type action_type = 4;</code>
       *
       * <pre>
       *玩家操作的类型
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.e_action_type getActionType() {
        return actionType_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_action_type action_type = 4;</code>
       *
       * <pre>
       *玩家操作的类型
       * </pre>
       */
      public Builder setActionType(game_guanyuan_protocols.GameGuanyunProtocol.e_action_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        actionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_action_type action_type = 4;</code>
       *
       * <pre>
       *玩家操作的类型
       * </pre>
       */
      public Builder clearActionType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        actionType_ = game_guanyuan_protocols.GameGuanyunProtocol.e_action_type.e_action_skip;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_action_nt)
    }

    static {
      defaultInstance = new packetl2c_action_nt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_action_nt)
  }

  public interface packetl2c_hu_info_ntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_hu_info_nt];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_hu_info_nt];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_hu_info_nt];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional int32 hu_pos = 2;
    /**
     * <code>optional int32 hu_pos = 2;</code>
     *
     * <pre>
     *胡牌位置
     * </pre>
     */
    boolean hasHuPos();
    /**
     * <code>optional int32 hu_pos = 2;</code>
     *
     * <pre>
     *胡牌位置
     * </pre>
     */
    int getHuPos();

    // optional int32 fire_pos = 3;
    /**
     * <code>optional int32 fire_pos = 3;</code>
     *
     * <pre>
     *炮手位置
     * </pre>
     */
    boolean hasFirePos();
    /**
     * <code>optional int32 fire_pos = 3;</code>
     *
     * <pre>
     *炮手位置
     * </pre>
     */
    int getFirePos();

    // optional int32 card = 4;
    /**
     * <code>optional int32 card = 4;</code>
     *
     * <pre>
     *胡的哪张牌
     * </pre>
     */
    boolean hasCard();
    /**
     * <code>optional int32 card = 4;</code>
     *
     * <pre>
     *胡的哪张牌
     * </pre>
     */
    int getCard();

    // optional int32 hu_type = 5;
    /**
     * <code>optional int32 hu_type = 5;</code>
     *
     * <pre>
     *胡牌的类型 0：普通胡 1：抢杠胡
     * </pre>
     */
    boolean hasHuType();
    /**
     * <code>optional int32 hu_type = 5;</code>
     *
     * <pre>
     *胡牌的类型 0：普通胡 1：抢杠胡
     * </pre>
     */
    int getHuType();

    // repeated int32 scroes = 6;
    /**
     * <code>repeated int32 scroes = 6;</code>
     *
     * <pre>
     *胡牌后每个的分数
     * </pre>
     */
    java.util.List<java.lang.Integer> getScroesList();
    /**
     * <code>repeated int32 scroes = 6;</code>
     *
     * <pre>
     *胡牌后每个的分数
     * </pre>
     */
    int getScroesCount();
    /**
     * <code>repeated int32 scroes = 6;</code>
     *
     * <pre>
     *胡牌后每个的分数
     * </pre>
     */
    int getScroes(int index);
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_hu_info_nt}
   *
   * <pre>
   *胡牌后的广播信息
   * </pre>
   */
  public static final class packetl2c_hu_info_nt extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_hu_info_ntOrBuilder {
    // Use packetl2c_hu_info_nt.newBuilder() to construct.
    private packetl2c_hu_info_nt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_hu_info_nt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_hu_info_nt defaultInstance;
    public static packetl2c_hu_info_nt getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_hu_info_nt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_hu_info_nt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              huPos_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              firePos_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              card_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              huType_ = input.readInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                scroes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              scroes_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                scroes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                scroes_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          scroes_ = java.util.Collections.unmodifiableList(scroes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_hu_info_nt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_hu_info_nt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_hu_info_nt> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_hu_info_nt>() {
      public packetl2c_hu_info_nt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_hu_info_nt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_hu_info_nt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_hu_info_nt];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_hu_info_nt];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_hu_info_nt];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional int32 hu_pos = 2;
    public static final int HU_POS_FIELD_NUMBER = 2;
    private int huPos_;
    /**
     * <code>optional int32 hu_pos = 2;</code>
     *
     * <pre>
     *胡牌位置
     * </pre>
     */
    public boolean hasHuPos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 hu_pos = 2;</code>
     *
     * <pre>
     *胡牌位置
     * </pre>
     */
    public int getHuPos() {
      return huPos_;
    }

    // optional int32 fire_pos = 3;
    public static final int FIRE_POS_FIELD_NUMBER = 3;
    private int firePos_;
    /**
     * <code>optional int32 fire_pos = 3;</code>
     *
     * <pre>
     *炮手位置
     * </pre>
     */
    public boolean hasFirePos() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 fire_pos = 3;</code>
     *
     * <pre>
     *炮手位置
     * </pre>
     */
    public int getFirePos() {
      return firePos_;
    }

    // optional int32 card = 4;
    public static final int CARD_FIELD_NUMBER = 4;
    private int card_;
    /**
     * <code>optional int32 card = 4;</code>
     *
     * <pre>
     *胡的哪张牌
     * </pre>
     */
    public boolean hasCard() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 card = 4;</code>
     *
     * <pre>
     *胡的哪张牌
     * </pre>
     */
    public int getCard() {
      return card_;
    }

    // optional int32 hu_type = 5;
    public static final int HU_TYPE_FIELD_NUMBER = 5;
    private int huType_;
    /**
     * <code>optional int32 hu_type = 5;</code>
     *
     * <pre>
     *胡牌的类型 0：普通胡 1：抢杠胡
     * </pre>
     */
    public boolean hasHuType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 hu_type = 5;</code>
     *
     * <pre>
     *胡牌的类型 0：普通胡 1：抢杠胡
     * </pre>
     */
    public int getHuType() {
      return huType_;
    }

    // repeated int32 scroes = 6;
    public static final int SCROES_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> scroes_;
    /**
     * <code>repeated int32 scroes = 6;</code>
     *
     * <pre>
     *胡牌后每个的分数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getScroesList() {
      return scroes_;
    }
    /**
     * <code>repeated int32 scroes = 6;</code>
     *
     * <pre>
     *胡牌后每个的分数
     * </pre>
     */
    public int getScroesCount() {
      return scroes_.size();
    }
    /**
     * <code>repeated int32 scroes = 6;</code>
     *
     * <pre>
     *胡牌后每个的分数
     * </pre>
     */
    public int getScroes(int index) {
      return scroes_.get(index);
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_hu_info_nt;
      huPos_ = 0;
      firePos_ = 0;
      card_ = 0;
      huType_ = 0;
      scroes_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, huPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, firePos_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, card_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, huType_);
      }
      for (int i = 0; i < scroes_.size(); i++) {
        output.writeInt32(6, scroes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, huPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, firePos_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, card_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, huType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < scroes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(scroes_.get(i));
        }
        size += dataSize;
        size += 1 * getScroesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_hu_info_nt}
     *
     * <pre>
     *胡牌后的广播信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_ntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_hu_info_nt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_hu_info_nt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_hu_info_nt;
        bitField0_ = (bitField0_ & ~0x00000001);
        huPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        firePos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        card_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        huType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        scroes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_hu_info_nt_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.huPos_ = huPos_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.firePos_ = firePos_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.card_ = card_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.huType_ = huType_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          scroes_ = java.util.Collections.unmodifiableList(scroes_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.scroes_ = scroes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasHuPos()) {
          setHuPos(other.getHuPos());
        }
        if (other.hasFirePos()) {
          setFirePos(other.getFirePos());
        }
        if (other.hasCard()) {
          setCard(other.getCard());
        }
        if (other.hasHuType()) {
          setHuType(other.getHuType());
        }
        if (!other.scroes_.isEmpty()) {
          if (scroes_.isEmpty()) {
            scroes_ = other.scroes_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureScroesIsMutable();
            scroes_.addAll(other.scroes_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_hu_info_nt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_hu_info_nt];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_hu_info_nt;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_hu_info_nt];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_hu_info_nt];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_hu_info_nt];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_hu_info_nt];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_hu_info_nt;
        onChanged();
        return this;
      }

      // optional int32 hu_pos = 2;
      private int huPos_ ;
      /**
       * <code>optional int32 hu_pos = 2;</code>
       *
       * <pre>
       *胡牌位置
       * </pre>
       */
      public boolean hasHuPos() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 hu_pos = 2;</code>
       *
       * <pre>
       *胡牌位置
       * </pre>
       */
      public int getHuPos() {
        return huPos_;
      }
      /**
       * <code>optional int32 hu_pos = 2;</code>
       *
       * <pre>
       *胡牌位置
       * </pre>
       */
      public Builder setHuPos(int value) {
        bitField0_ |= 0x00000002;
        huPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hu_pos = 2;</code>
       *
       * <pre>
       *胡牌位置
       * </pre>
       */
      public Builder clearHuPos() {
        bitField0_ = (bitField0_ & ~0x00000002);
        huPos_ = 0;
        onChanged();
        return this;
      }

      // optional int32 fire_pos = 3;
      private int firePos_ ;
      /**
       * <code>optional int32 fire_pos = 3;</code>
       *
       * <pre>
       *炮手位置
       * </pre>
       */
      public boolean hasFirePos() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 fire_pos = 3;</code>
       *
       * <pre>
       *炮手位置
       * </pre>
       */
      public int getFirePos() {
        return firePos_;
      }
      /**
       * <code>optional int32 fire_pos = 3;</code>
       *
       * <pre>
       *炮手位置
       * </pre>
       */
      public Builder setFirePos(int value) {
        bitField0_ |= 0x00000004;
        firePos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fire_pos = 3;</code>
       *
       * <pre>
       *炮手位置
       * </pre>
       */
      public Builder clearFirePos() {
        bitField0_ = (bitField0_ & ~0x00000004);
        firePos_ = 0;
        onChanged();
        return this;
      }

      // optional int32 card = 4;
      private int card_ ;
      /**
       * <code>optional int32 card = 4;</code>
       *
       * <pre>
       *胡的哪张牌
       * </pre>
       */
      public boolean hasCard() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 card = 4;</code>
       *
       * <pre>
       *胡的哪张牌
       * </pre>
       */
      public int getCard() {
        return card_;
      }
      /**
       * <code>optional int32 card = 4;</code>
       *
       * <pre>
       *胡的哪张牌
       * </pre>
       */
      public Builder setCard(int value) {
        bitField0_ |= 0x00000008;
        card_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card = 4;</code>
       *
       * <pre>
       *胡的哪张牌
       * </pre>
       */
      public Builder clearCard() {
        bitField0_ = (bitField0_ & ~0x00000008);
        card_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hu_type = 5;
      private int huType_ ;
      /**
       * <code>optional int32 hu_type = 5;</code>
       *
       * <pre>
       *胡牌的类型 0：普通胡 1：抢杠胡
       * </pre>
       */
      public boolean hasHuType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 hu_type = 5;</code>
       *
       * <pre>
       *胡牌的类型 0：普通胡 1：抢杠胡
       * </pre>
       */
      public int getHuType() {
        return huType_;
      }
      /**
       * <code>optional int32 hu_type = 5;</code>
       *
       * <pre>
       *胡牌的类型 0：普通胡 1：抢杠胡
       * </pre>
       */
      public Builder setHuType(int value) {
        bitField0_ |= 0x00000010;
        huType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hu_type = 5;</code>
       *
       * <pre>
       *胡牌的类型 0：普通胡 1：抢杠胡
       * </pre>
       */
      public Builder clearHuType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        huType_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 scroes = 6;
      private java.util.List<java.lang.Integer> scroes_ = java.util.Collections.emptyList();
      private void ensureScroesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          scroes_ = new java.util.ArrayList<java.lang.Integer>(scroes_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 scroes = 6;</code>
       *
       * <pre>
       *胡牌后每个的分数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getScroesList() {
        return java.util.Collections.unmodifiableList(scroes_);
      }
      /**
       * <code>repeated int32 scroes = 6;</code>
       *
       * <pre>
       *胡牌后每个的分数
       * </pre>
       */
      public int getScroesCount() {
        return scroes_.size();
      }
      /**
       * <code>repeated int32 scroes = 6;</code>
       *
       * <pre>
       *胡牌后每个的分数
       * </pre>
       */
      public int getScroes(int index) {
        return scroes_.get(index);
      }
      /**
       * <code>repeated int32 scroes = 6;</code>
       *
       * <pre>
       *胡牌后每个的分数
       * </pre>
       */
      public Builder setScroes(
          int index, int value) {
        ensureScroesIsMutable();
        scroes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 scroes = 6;</code>
       *
       * <pre>
       *胡牌后每个的分数
       * </pre>
       */
      public Builder addScroes(int value) {
        ensureScroesIsMutable();
        scroes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 scroes = 6;</code>
       *
       * <pre>
       *胡牌后每个的分数
       * </pre>
       */
      public Builder addAllScroes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureScroesIsMutable();
        super.addAll(values, scroes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 scroes = 6;</code>
       *
       * <pre>
       *胡牌后每个的分数
       * </pre>
       */
      public Builder clearScroes() {
        scroes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_hu_info_nt)
    }

    static {
      defaultInstance = new packetl2c_hu_info_nt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_hu_info_nt)
  }

  public interface packetl2c_circle_result_ntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_result_nt];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_result_nt];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_result_nt];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional int32 hu_type = 2;
    /**
     * <code>optional int32 hu_type = 2;</code>
     *
     * <pre>
     *类型：0；流局 1-胡；2-自摸；
     * </pre>
     */
    boolean hasHuType();
    /**
     * <code>optional int32 hu_type = 2;</code>
     *
     * <pre>
     *类型：0；流局 1-胡；2-自摸；
     * </pre>
     */
    int getHuType();

    // optional int32 hu_pos = 3;
    /**
     * <code>optional int32 hu_pos = 3;</code>
     *
     * <pre>
     *胡牌位置
     * </pre>
     */
    boolean hasHuPos();
    /**
     * <code>optional int32 hu_pos = 3;</code>
     *
     * <pre>
     *胡牌位置
     * </pre>
     */
    int getHuPos();

    // optional int32 hued_pos = 4;
    /**
     * <code>optional int32 hued_pos = 4;</code>
     *
     * <pre>
     *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
     * </pre>
     */
    boolean hasHuedPos();
    /**
     * <code>optional int32 hued_pos = 4;</code>
     *
     * <pre>
     *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
     * </pre>
     */
    int getHuedPos();

    // optional int32 circleN_idx = 5;
    /**
     * <code>optional int32 circleN_idx = 5;</code>
     *
     * <pre>
     *当前是第几局
     * </pre>
     */
    boolean hasCircleNIdx();
    /**
     * <code>optional int32 circleN_idx = 5;</code>
     *
     * <pre>
     *当前是第几局
     * </pre>
     */
    int getCircleNIdx();

    // optional int32 next_circle_start_tm = 6;
    /**
     * <code>optional int32 next_circle_start_tm = 6;</code>
     *
     * <pre>
     *下局开始时间戳
     * </pre>
     */
    boolean hasNextCircleStartTm();
    /**
     * <code>optional int32 next_circle_start_tm = 6;</code>
     *
     * <pre>
     *下局开始时间戳
     * </pre>
     */
    int getNextCircleStartTm();

    // optional int32 hu_card = 7;
    /**
     * <code>optional int32 hu_card = 7;</code>
     *
     * <pre>
     *胡牌的值
     * </pre>
     */
    boolean hasHuCard();
    /**
     * <code>optional int32 hu_card = 7;</code>
     *
     * <pre>
     *胡牌的值
     * </pre>
     */
    int getHuCard();

    // optional int32 best_pao_player = 8;
    /**
     * <code>optional int32 best_pao_player = 8;</code>
     *
     * <pre>
     *最佳炮手
     * </pre>
     */
    boolean hasBestPaoPlayer();
    /**
     * <code>optional int32 best_pao_player = 8;</code>
     *
     * <pre>
     *最佳炮手
     * </pre>
     */
    int getBestPaoPlayer();

    // repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
     *
     * <pre>
     *此局人物相关的数据
     * </pre>
     */
    java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result> 
        getPlayersResultList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
     *
     * <pre>
     *此局人物相关的数据
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result getPlayersResult(int index);
    /**
     * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
     *
     * <pre>
     *此局人物相关的数据
     * </pre>
     */
    int getPlayersResultCount();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
     *
     * <pre>
     *此局人物相关的数据
     * </pre>
     */
    java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_resultOrBuilder> 
        getPlayersResultOrBuilderList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
     *
     * <pre>
     *此局人物相关的数据
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_resultOrBuilder getPlayersResultOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_circle_result_nt}
   *
   * <pre>
   *胡牌后一局情况
   * </pre>
   */
  public static final class packetl2c_circle_result_nt extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_circle_result_ntOrBuilder {
    // Use packetl2c_circle_result_nt.newBuilder() to construct.
    private packetl2c_circle_result_nt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_circle_result_nt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_circle_result_nt defaultInstance;
    public static packetl2c_circle_result_nt getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_circle_result_nt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_circle_result_nt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              huType_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              huPos_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              huedPos_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              circleNIdx_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              nextCircleStartTm_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              huCard_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              bestPaoPlayer_ = input.readInt32();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                playersResult_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result>();
                mutable_bitField0_ |= 0x00000100;
              }
              playersResult_.add(input.readMessage(game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          playersResult_ = java.util.Collections.unmodifiableList(playersResult_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_circle_result_nt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_circle_result_nt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_circle_result_nt> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_circle_result_nt>() {
      public packetl2c_circle_result_nt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_circle_result_nt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_circle_result_nt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_result_nt];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_result_nt];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_result_nt];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional int32 hu_type = 2;
    public static final int HU_TYPE_FIELD_NUMBER = 2;
    private int huType_;
    /**
     * <code>optional int32 hu_type = 2;</code>
     *
     * <pre>
     *类型：0；流局 1-胡；2-自摸；
     * </pre>
     */
    public boolean hasHuType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 hu_type = 2;</code>
     *
     * <pre>
     *类型：0；流局 1-胡；2-自摸；
     * </pre>
     */
    public int getHuType() {
      return huType_;
    }

    // optional int32 hu_pos = 3;
    public static final int HU_POS_FIELD_NUMBER = 3;
    private int huPos_;
    /**
     * <code>optional int32 hu_pos = 3;</code>
     *
     * <pre>
     *胡牌位置
     * </pre>
     */
    public boolean hasHuPos() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 hu_pos = 3;</code>
     *
     * <pre>
     *胡牌位置
     * </pre>
     */
    public int getHuPos() {
      return huPos_;
    }

    // optional int32 hued_pos = 4;
    public static final int HUED_POS_FIELD_NUMBER = 4;
    private int huedPos_;
    /**
     * <code>optional int32 hued_pos = 4;</code>
     *
     * <pre>
     *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
     * </pre>
     */
    public boolean hasHuedPos() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 hued_pos = 4;</code>
     *
     * <pre>
     *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
     * </pre>
     */
    public int getHuedPos() {
      return huedPos_;
    }

    // optional int32 circleN_idx = 5;
    public static final int CIRCLEN_IDX_FIELD_NUMBER = 5;
    private int circleNIdx_;
    /**
     * <code>optional int32 circleN_idx = 5;</code>
     *
     * <pre>
     *当前是第几局
     * </pre>
     */
    public boolean hasCircleNIdx() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 circleN_idx = 5;</code>
     *
     * <pre>
     *当前是第几局
     * </pre>
     */
    public int getCircleNIdx() {
      return circleNIdx_;
    }

    // optional int32 next_circle_start_tm = 6;
    public static final int NEXT_CIRCLE_START_TM_FIELD_NUMBER = 6;
    private int nextCircleStartTm_;
    /**
     * <code>optional int32 next_circle_start_tm = 6;</code>
     *
     * <pre>
     *下局开始时间戳
     * </pre>
     */
    public boolean hasNextCircleStartTm() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 next_circle_start_tm = 6;</code>
     *
     * <pre>
     *下局开始时间戳
     * </pre>
     */
    public int getNextCircleStartTm() {
      return nextCircleStartTm_;
    }

    // optional int32 hu_card = 7;
    public static final int HU_CARD_FIELD_NUMBER = 7;
    private int huCard_;
    /**
     * <code>optional int32 hu_card = 7;</code>
     *
     * <pre>
     *胡牌的值
     * </pre>
     */
    public boolean hasHuCard() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 hu_card = 7;</code>
     *
     * <pre>
     *胡牌的值
     * </pre>
     */
    public int getHuCard() {
      return huCard_;
    }

    // optional int32 best_pao_player = 8;
    public static final int BEST_PAO_PLAYER_FIELD_NUMBER = 8;
    private int bestPaoPlayer_;
    /**
     * <code>optional int32 best_pao_player = 8;</code>
     *
     * <pre>
     *最佳炮手
     * </pre>
     */
    public boolean hasBestPaoPlayer() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 best_pao_player = 8;</code>
     *
     * <pre>
     *最佳炮手
     * </pre>
     */
    public int getBestPaoPlayer() {
      return bestPaoPlayer_;
    }

    // repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;
    public static final int PLAYERS_RESULT_FIELD_NUMBER = 9;
    private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result> playersResult_;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
     *
     * <pre>
     *此局人物相关的数据
     * </pre>
     */
    public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result> getPlayersResultList() {
      return playersResult_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
     *
     * <pre>
     *此局人物相关的数据
     * </pre>
     */
    public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_resultOrBuilder> 
        getPlayersResultOrBuilderList() {
      return playersResult_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
     *
     * <pre>
     *此局人物相关的数据
     * </pre>
     */
    public int getPlayersResultCount() {
      return playersResult_.size();
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
     *
     * <pre>
     *此局人物相关的数据
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result getPlayersResult(int index) {
      return playersResult_.get(index);
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
     *
     * <pre>
     *此局人物相关的数据
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_resultOrBuilder getPlayersResultOrBuilder(
        int index) {
      return playersResult_.get(index);
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_circle_result_nt;
      huType_ = 0;
      huPos_ = 0;
      huedPos_ = 0;
      circleNIdx_ = 0;
      nextCircleStartTm_ = 0;
      huCard_ = 0;
      bestPaoPlayer_ = 0;
      playersResult_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, huType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, huPos_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, huedPos_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, circleNIdx_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, nextCircleStartTm_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, huCard_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, bestPaoPlayer_);
      }
      for (int i = 0; i < playersResult_.size(); i++) {
        output.writeMessage(9, playersResult_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, huType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, huPos_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, huedPos_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, circleNIdx_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, nextCircleStartTm_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, huCard_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, bestPaoPlayer_);
      }
      for (int i = 0; i < playersResult_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, playersResult_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_circle_result_nt}
     *
     * <pre>
     *胡牌后一局情况
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_ntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_circle_result_nt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_circle_result_nt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersResultFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_circle_result_nt;
        bitField0_ = (bitField0_ & ~0x00000001);
        huType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        huPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        huedPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        circleNIdx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        nextCircleStartTm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        huCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        bestPaoPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (playersResultBuilder_ == null) {
          playersResult_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          playersResultBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_circle_result_nt_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.huType_ = huType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.huPos_ = huPos_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.huedPos_ = huedPos_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.circleNIdx_ = circleNIdx_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.nextCircleStartTm_ = nextCircleStartTm_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.huCard_ = huCard_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.bestPaoPlayer_ = bestPaoPlayer_;
        if (playersResultBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            playersResult_ = java.util.Collections.unmodifiableList(playersResult_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.playersResult_ = playersResult_;
        } else {
          result.playersResult_ = playersResultBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasHuType()) {
          setHuType(other.getHuType());
        }
        if (other.hasHuPos()) {
          setHuPos(other.getHuPos());
        }
        if (other.hasHuedPos()) {
          setHuedPos(other.getHuedPos());
        }
        if (other.hasCircleNIdx()) {
          setCircleNIdx(other.getCircleNIdx());
        }
        if (other.hasNextCircleStartTm()) {
          setNextCircleStartTm(other.getNextCircleStartTm());
        }
        if (other.hasHuCard()) {
          setHuCard(other.getHuCard());
        }
        if (other.hasBestPaoPlayer()) {
          setBestPaoPlayer(other.getBestPaoPlayer());
        }
        if (playersResultBuilder_ == null) {
          if (!other.playersResult_.isEmpty()) {
            if (playersResult_.isEmpty()) {
              playersResult_ = other.playersResult_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensurePlayersResultIsMutable();
              playersResult_.addAll(other.playersResult_);
            }
            onChanged();
          }
        } else {
          if (!other.playersResult_.isEmpty()) {
            if (playersResultBuilder_.isEmpty()) {
              playersResultBuilder_.dispose();
              playersResultBuilder_ = null;
              playersResult_ = other.playersResult_;
              bitField0_ = (bitField0_ & ~0x00000100);
              playersResultBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersResultFieldBuilder() : null;
            } else {
              playersResultBuilder_.addAllMessages(other.playersResult_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_circle_result_nt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_result_nt];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_circle_result_nt;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_result_nt];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_result_nt];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_result_nt];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_circle_result_nt];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_circle_result_nt;
        onChanged();
        return this;
      }

      // optional int32 hu_type = 2;
      private int huType_ ;
      /**
       * <code>optional int32 hu_type = 2;</code>
       *
       * <pre>
       *类型：0；流局 1-胡；2-自摸；
       * </pre>
       */
      public boolean hasHuType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 hu_type = 2;</code>
       *
       * <pre>
       *类型：0；流局 1-胡；2-自摸；
       * </pre>
       */
      public int getHuType() {
        return huType_;
      }
      /**
       * <code>optional int32 hu_type = 2;</code>
       *
       * <pre>
       *类型：0；流局 1-胡；2-自摸；
       * </pre>
       */
      public Builder setHuType(int value) {
        bitField0_ |= 0x00000002;
        huType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hu_type = 2;</code>
       *
       * <pre>
       *类型：0；流局 1-胡；2-自摸；
       * </pre>
       */
      public Builder clearHuType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        huType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hu_pos = 3;
      private int huPos_ ;
      /**
       * <code>optional int32 hu_pos = 3;</code>
       *
       * <pre>
       *胡牌位置
       * </pre>
       */
      public boolean hasHuPos() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 hu_pos = 3;</code>
       *
       * <pre>
       *胡牌位置
       * </pre>
       */
      public int getHuPos() {
        return huPos_;
      }
      /**
       * <code>optional int32 hu_pos = 3;</code>
       *
       * <pre>
       *胡牌位置
       * </pre>
       */
      public Builder setHuPos(int value) {
        bitField0_ |= 0x00000004;
        huPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hu_pos = 3;</code>
       *
       * <pre>
       *胡牌位置
       * </pre>
       */
      public Builder clearHuPos() {
        bitField0_ = (bitField0_ & ~0x00000004);
        huPos_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hued_pos = 4;
      private int huedPos_ ;
      /**
       * <code>optional int32 hued_pos = 4;</code>
       *
       * <pre>
       *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
       * </pre>
       */
      public boolean hasHuedPos() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 hued_pos = 4;</code>
       *
       * <pre>
       *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
       * </pre>
       */
      public int getHuedPos() {
        return huedPos_;
      }
      /**
       * <code>optional int32 hued_pos = 4;</code>
       *
       * <pre>
       *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
       * </pre>
       */
      public Builder setHuedPos(int value) {
        bitField0_ |= 0x00000008;
        huedPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hued_pos = 4;</code>
       *
       * <pre>
       *最后出牌的位置，也就是放炮的位置，如自摸就是自己，如－1代表无意义
       * </pre>
       */
      public Builder clearHuedPos() {
        bitField0_ = (bitField0_ & ~0x00000008);
        huedPos_ = 0;
        onChanged();
        return this;
      }

      // optional int32 circleN_idx = 5;
      private int circleNIdx_ ;
      /**
       * <code>optional int32 circleN_idx = 5;</code>
       *
       * <pre>
       *当前是第几局
       * </pre>
       */
      public boolean hasCircleNIdx() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 circleN_idx = 5;</code>
       *
       * <pre>
       *当前是第几局
       * </pre>
       */
      public int getCircleNIdx() {
        return circleNIdx_;
      }
      /**
       * <code>optional int32 circleN_idx = 5;</code>
       *
       * <pre>
       *当前是第几局
       * </pre>
       */
      public Builder setCircleNIdx(int value) {
        bitField0_ |= 0x00000010;
        circleNIdx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 circleN_idx = 5;</code>
       *
       * <pre>
       *当前是第几局
       * </pre>
       */
      public Builder clearCircleNIdx() {
        bitField0_ = (bitField0_ & ~0x00000010);
        circleNIdx_ = 0;
        onChanged();
        return this;
      }

      // optional int32 next_circle_start_tm = 6;
      private int nextCircleStartTm_ ;
      /**
       * <code>optional int32 next_circle_start_tm = 6;</code>
       *
       * <pre>
       *下局开始时间戳
       * </pre>
       */
      public boolean hasNextCircleStartTm() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 next_circle_start_tm = 6;</code>
       *
       * <pre>
       *下局开始时间戳
       * </pre>
       */
      public int getNextCircleStartTm() {
        return nextCircleStartTm_;
      }
      /**
       * <code>optional int32 next_circle_start_tm = 6;</code>
       *
       * <pre>
       *下局开始时间戳
       * </pre>
       */
      public Builder setNextCircleStartTm(int value) {
        bitField0_ |= 0x00000020;
        nextCircleStartTm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 next_circle_start_tm = 6;</code>
       *
       * <pre>
       *下局开始时间戳
       * </pre>
       */
      public Builder clearNextCircleStartTm() {
        bitField0_ = (bitField0_ & ~0x00000020);
        nextCircleStartTm_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hu_card = 7;
      private int huCard_ ;
      /**
       * <code>optional int32 hu_card = 7;</code>
       *
       * <pre>
       *胡牌的值
       * </pre>
       */
      public boolean hasHuCard() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 hu_card = 7;</code>
       *
       * <pre>
       *胡牌的值
       * </pre>
       */
      public int getHuCard() {
        return huCard_;
      }
      /**
       * <code>optional int32 hu_card = 7;</code>
       *
       * <pre>
       *胡牌的值
       * </pre>
       */
      public Builder setHuCard(int value) {
        bitField0_ |= 0x00000040;
        huCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hu_card = 7;</code>
       *
       * <pre>
       *胡牌的值
       * </pre>
       */
      public Builder clearHuCard() {
        bitField0_ = (bitField0_ & ~0x00000040);
        huCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 best_pao_player = 8;
      private int bestPaoPlayer_ ;
      /**
       * <code>optional int32 best_pao_player = 8;</code>
       *
       * <pre>
       *最佳炮手
       * </pre>
       */
      public boolean hasBestPaoPlayer() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 best_pao_player = 8;</code>
       *
       * <pre>
       *最佳炮手
       * </pre>
       */
      public int getBestPaoPlayer() {
        return bestPaoPlayer_;
      }
      /**
       * <code>optional int32 best_pao_player = 8;</code>
       *
       * <pre>
       *最佳炮手
       * </pre>
       */
      public Builder setBestPaoPlayer(int value) {
        bitField0_ |= 0x00000080;
        bestPaoPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 best_pao_player = 8;</code>
       *
       * <pre>
       *最佳炮手
       * </pre>
       */
      public Builder clearBestPaoPlayer() {
        bitField0_ = (bitField0_ & ~0x00000080);
        bestPaoPlayer_ = 0;
        onChanged();
        return this;
      }

      // repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;
      private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result> playersResult_ =
        java.util.Collections.emptyList();
      private void ensurePlayersResultIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          playersResult_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result>(playersResult_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result, game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_resultOrBuilder> playersResultBuilder_;

      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result> getPlayersResultList() {
        if (playersResultBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playersResult_);
        } else {
          return playersResultBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public int getPlayersResultCount() {
        if (playersResultBuilder_ == null) {
          return playersResult_.size();
        } else {
          return playersResultBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result getPlayersResult(int index) {
        if (playersResultBuilder_ == null) {
          return playersResult_.get(index);
        } else {
          return playersResultBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public Builder setPlayersResult(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result value) {
        if (playersResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersResultIsMutable();
          playersResult_.set(index, value);
          onChanged();
        } else {
          playersResultBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public Builder setPlayersResult(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.Builder builderForValue) {
        if (playersResultBuilder_ == null) {
          ensurePlayersResultIsMutable();
          playersResult_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersResultBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public Builder addPlayersResult(game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result value) {
        if (playersResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersResultIsMutable();
          playersResult_.add(value);
          onChanged();
        } else {
          playersResultBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public Builder addPlayersResult(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result value) {
        if (playersResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersResultIsMutable();
          playersResult_.add(index, value);
          onChanged();
        } else {
          playersResultBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public Builder addPlayersResult(
          game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.Builder builderForValue) {
        if (playersResultBuilder_ == null) {
          ensurePlayersResultIsMutable();
          playersResult_.add(builderForValue.build());
          onChanged();
        } else {
          playersResultBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public Builder addPlayersResult(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.Builder builderForValue) {
        if (playersResultBuilder_ == null) {
          ensurePlayersResultIsMutable();
          playersResult_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersResultBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public Builder addAllPlayersResult(
          java.lang.Iterable<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result> values) {
        if (playersResultBuilder_ == null) {
          ensurePlayersResultIsMutable();
          super.addAll(values, playersResult_);
          onChanged();
        } else {
          playersResultBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public Builder clearPlayersResult() {
        if (playersResultBuilder_ == null) {
          playersResult_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          playersResultBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public Builder removePlayersResult(int index) {
        if (playersResultBuilder_ == null) {
          ensurePlayersResultIsMutable();
          playersResult_.remove(index);
          onChanged();
        } else {
          playersResultBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.Builder getPlayersResultBuilder(
          int index) {
        return getPlayersResultFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_resultOrBuilder getPlayersResultOrBuilder(
          int index) {
        if (playersResultBuilder_ == null) {
          return playersResult_.get(index);  } else {
          return playersResultBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_resultOrBuilder> 
           getPlayersResultOrBuilderList() {
        if (playersResultBuilder_ != null) {
          return playersResultBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playersResult_);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.Builder addPlayersResultBuilder() {
        return getPlayersResultFieldBuilder().addBuilder(
            game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.Builder addPlayersResultBuilder(
          int index) {
        return getPlayersResultFieldBuilder().addBuilder(
            index, game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_player_circle_result players_result = 9;</code>
       *
       * <pre>
       *此局人物相关的数据
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.Builder> 
           getPlayersResultBuilderList() {
        return getPlayersResultFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result, game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_resultOrBuilder> 
          getPlayersResultFieldBuilder() {
        if (playersResultBuilder_ == null) {
          playersResultBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result, game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_resultOrBuilder>(
                  playersResult_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          playersResult_ = null;
        }
        return playersResultBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_circle_result_nt)
    }

    static {
      defaultInstance = new packetl2c_circle_result_nt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_circle_result_nt)
  }

  public interface msg_player_circle_resultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 hide_cards = 1;
    /**
     * <code>repeated int32 hide_cards = 1;</code>
     *
     * <pre>
     *玩家最后手上的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getHideCardsList();
    /**
     * <code>repeated int32 hide_cards = 1;</code>
     *
     * <pre>
     *玩家最后手上的牌
     * </pre>
     */
    int getHideCardsCount();
    /**
     * <code>repeated int32 hide_cards = 1;</code>
     *
     * <pre>
     *玩家最后手上的牌
     * </pre>
     */
    int getHideCards(int index);

    // repeated int32 gang_cards = 2;
    /**
     * <code>repeated int32 gang_cards = 2;</code>
     *
     * <pre>
     *玩家最后手上的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getGangCardsList();
    /**
     * <code>repeated int32 gang_cards = 2;</code>
     *
     * <pre>
     *玩家最后手上的牌
     * </pre>
     */
    int getGangCardsCount();
    /**
     * <code>repeated int32 gang_cards = 2;</code>
     *
     * <pre>
     *玩家最后手上的牌
     * </pre>
     */
    int getGangCards(int index);

    // repeated int32 angang_cards = 3;
    /**
     * <code>repeated int32 angang_cards = 3;</code>
     *
     * <pre>
     *暗杠牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getAngangCardsList();
    /**
     * <code>repeated int32 angang_cards = 3;</code>
     *
     * <pre>
     *暗杠牌
     * </pre>
     */
    int getAngangCardsCount();
    /**
     * <code>repeated int32 angang_cards = 3;</code>
     *
     * <pre>
     *暗杠牌
     * </pre>
     */
    int getAngangCards(int index);

    // repeated int32 peng_cards = 4;
    /**
     * <code>repeated int32 peng_cards = 4;</code>
     *
     * <pre>
     *碰牌的
     * </pre>
     */
    java.util.List<java.lang.Integer> getPengCardsList();
    /**
     * <code>repeated int32 peng_cards = 4;</code>
     *
     * <pre>
     *碰牌的
     * </pre>
     */
    int getPengCardsCount();
    /**
     * <code>repeated int32 peng_cards = 4;</code>
     *
     * <pre>
     *碰牌的
     * </pre>
     */
    int getPengCards(int index);

    // repeated int32 flower_cards = 5;
    /**
     * <code>repeated int32 flower_cards = 5;</code>
     *
     * <pre>
     *吃的牌的集合
     * </pre>
     */
    java.util.List<java.lang.Integer> getFlowerCardsList();
    /**
     * <code>repeated int32 flower_cards = 5;</code>
     *
     * <pre>
     *吃的牌的集合
     * </pre>
     */
    int getFlowerCardsCount();
    /**
     * <code>repeated int32 flower_cards = 5;</code>
     *
     * <pre>
     *吃的牌的集合
     * </pre>
     */
    int getFlowerCards(int index);

    // optional int32 score = 6;
    /**
     * <code>optional int32 score = 6;</code>
     *
     * <pre>
     *玩家得分
     * </pre>
     */
    boolean hasScore();
    /**
     * <code>optional int32 score = 6;</code>
     *
     * <pre>
     *玩家得分
     * </pre>
     */
    int getScore();

    // optional int32 ting_card = 7;
    /**
     * <code>optional int32 ting_card = 7;</code>
     *
     * <pre>
     *玩家叫听的牌
     * </pre>
     */
    boolean hasTingCard();
    /**
     * <code>optional int32 ting_card = 7;</code>
     *
     * <pre>
     *玩家叫听的牌
     * </pre>
     */
    int getTingCard();

    // repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
     *
     * <pre>
     *胡牌时的信息状态
     * </pre>
     */
    java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info> 
        getDetailInfoList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
     *
     * <pre>
     *胡牌时的信息状态
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info getDetailInfo(int index);
    /**
     * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
     *
     * <pre>
     *胡牌时的信息状态
     * </pre>
     */
    int getDetailInfoCount();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
     *
     * <pre>
     *胡牌时的信息状态
     * </pre>
     */
    java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_infoOrBuilder> 
        getDetailInfoOrBuilderList();
    /**
     * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
     *
     * <pre>
     *胡牌时的信息状态
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_infoOrBuilder getDetailInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.msg_player_circle_result}
   */
  public static final class msg_player_circle_result extends
      com.google.protobuf.GeneratedMessage
      implements msg_player_circle_resultOrBuilder {
    // Use msg_player_circle_result.newBuilder() to construct.
    private msg_player_circle_result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private msg_player_circle_result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final msg_player_circle_result defaultInstance;
    public static msg_player_circle_result getDefaultInstance() {
      return defaultInstance;
    }

    public msg_player_circle_result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private msg_player_circle_result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                hideCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              hideCards_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                hideCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                hideCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                gangCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              gangCards_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                gangCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                gangCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                angangCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              angangCards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                angangCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                angangCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                pengCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              pengCards_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                pengCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                pengCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                flowerCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              flowerCards_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                flowerCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                flowerCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000001;
              score_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000002;
              tingCard_ = input.readInt32();
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                detailInfo_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info>();
                mutable_bitField0_ |= 0x00000080;
              }
              detailInfo_.add(input.readMessage(game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          hideCards_ = java.util.Collections.unmodifiableList(hideCards_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          gangCards_ = java.util.Collections.unmodifiableList(gangCards_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          angangCards_ = java.util.Collections.unmodifiableList(angangCards_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          pengCards_ = java.util.Collections.unmodifiableList(pengCards_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          flowerCards_ = java.util.Collections.unmodifiableList(flowerCards_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          detailInfo_ = java.util.Collections.unmodifiableList(detailInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_player_circle_result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_player_circle_result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.Builder.class);
    }

    public static com.google.protobuf.Parser<msg_player_circle_result> PARSER =
        new com.google.protobuf.AbstractParser<msg_player_circle_result>() {
      public msg_player_circle_result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new msg_player_circle_result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<msg_player_circle_result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 hide_cards = 1;
    public static final int HIDE_CARDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> hideCards_;
    /**
     * <code>repeated int32 hide_cards = 1;</code>
     *
     * <pre>
     *玩家最后手上的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHideCardsList() {
      return hideCards_;
    }
    /**
     * <code>repeated int32 hide_cards = 1;</code>
     *
     * <pre>
     *玩家最后手上的牌
     * </pre>
     */
    public int getHideCardsCount() {
      return hideCards_.size();
    }
    /**
     * <code>repeated int32 hide_cards = 1;</code>
     *
     * <pre>
     *玩家最后手上的牌
     * </pre>
     */
    public int getHideCards(int index) {
      return hideCards_.get(index);
    }

    // repeated int32 gang_cards = 2;
    public static final int GANG_CARDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> gangCards_;
    /**
     * <code>repeated int32 gang_cards = 2;</code>
     *
     * <pre>
     *玩家最后手上的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGangCardsList() {
      return gangCards_;
    }
    /**
     * <code>repeated int32 gang_cards = 2;</code>
     *
     * <pre>
     *玩家最后手上的牌
     * </pre>
     */
    public int getGangCardsCount() {
      return gangCards_.size();
    }
    /**
     * <code>repeated int32 gang_cards = 2;</code>
     *
     * <pre>
     *玩家最后手上的牌
     * </pre>
     */
    public int getGangCards(int index) {
      return gangCards_.get(index);
    }

    // repeated int32 angang_cards = 3;
    public static final int ANGANG_CARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> angangCards_;
    /**
     * <code>repeated int32 angang_cards = 3;</code>
     *
     * <pre>
     *暗杠牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAngangCardsList() {
      return angangCards_;
    }
    /**
     * <code>repeated int32 angang_cards = 3;</code>
     *
     * <pre>
     *暗杠牌
     * </pre>
     */
    public int getAngangCardsCount() {
      return angangCards_.size();
    }
    /**
     * <code>repeated int32 angang_cards = 3;</code>
     *
     * <pre>
     *暗杠牌
     * </pre>
     */
    public int getAngangCards(int index) {
      return angangCards_.get(index);
    }

    // repeated int32 peng_cards = 4;
    public static final int PENG_CARDS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> pengCards_;
    /**
     * <code>repeated int32 peng_cards = 4;</code>
     *
     * <pre>
     *碰牌的
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPengCardsList() {
      return pengCards_;
    }
    /**
     * <code>repeated int32 peng_cards = 4;</code>
     *
     * <pre>
     *碰牌的
     * </pre>
     */
    public int getPengCardsCount() {
      return pengCards_.size();
    }
    /**
     * <code>repeated int32 peng_cards = 4;</code>
     *
     * <pre>
     *碰牌的
     * </pre>
     */
    public int getPengCards(int index) {
      return pengCards_.get(index);
    }

    // repeated int32 flower_cards = 5;
    public static final int FLOWER_CARDS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> flowerCards_;
    /**
     * <code>repeated int32 flower_cards = 5;</code>
     *
     * <pre>
     *吃的牌的集合
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFlowerCardsList() {
      return flowerCards_;
    }
    /**
     * <code>repeated int32 flower_cards = 5;</code>
     *
     * <pre>
     *吃的牌的集合
     * </pre>
     */
    public int getFlowerCardsCount() {
      return flowerCards_.size();
    }
    /**
     * <code>repeated int32 flower_cards = 5;</code>
     *
     * <pre>
     *吃的牌的集合
     * </pre>
     */
    public int getFlowerCards(int index) {
      return flowerCards_.get(index);
    }

    // optional int32 score = 6;
    public static final int SCORE_FIELD_NUMBER = 6;
    private int score_;
    /**
     * <code>optional int32 score = 6;</code>
     *
     * <pre>
     *玩家得分
     * </pre>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 score = 6;</code>
     *
     * <pre>
     *玩家得分
     * </pre>
     */
    public int getScore() {
      return score_;
    }

    // optional int32 ting_card = 7;
    public static final int TING_CARD_FIELD_NUMBER = 7;
    private int tingCard_;
    /**
     * <code>optional int32 ting_card = 7;</code>
     *
     * <pre>
     *玩家叫听的牌
     * </pre>
     */
    public boolean hasTingCard() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 ting_card = 7;</code>
     *
     * <pre>
     *玩家叫听的牌
     * </pre>
     */
    public int getTingCard() {
      return tingCard_;
    }

    // repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;
    public static final int DETAIL_INFO_FIELD_NUMBER = 8;
    private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info> detailInfo_;
    /**
     * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
     *
     * <pre>
     *胡牌时的信息状态
     * </pre>
     */
    public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info> getDetailInfoList() {
      return detailInfo_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
     *
     * <pre>
     *胡牌时的信息状态
     * </pre>
     */
    public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_infoOrBuilder> 
        getDetailInfoOrBuilderList() {
      return detailInfo_;
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
     *
     * <pre>
     *胡牌时的信息状态
     * </pre>
     */
    public int getDetailInfoCount() {
      return detailInfo_.size();
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
     *
     * <pre>
     *胡牌时的信息状态
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info getDetailInfo(int index) {
      return detailInfo_.get(index);
    }
    /**
     * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
     *
     * <pre>
     *胡牌时的信息状态
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_infoOrBuilder getDetailInfoOrBuilder(
        int index) {
      return detailInfo_.get(index);
    }

    private void initFields() {
      hideCards_ = java.util.Collections.emptyList();
      gangCards_ = java.util.Collections.emptyList();
      angangCards_ = java.util.Collections.emptyList();
      pengCards_ = java.util.Collections.emptyList();
      flowerCards_ = java.util.Collections.emptyList();
      score_ = 0;
      tingCard_ = 0;
      detailInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < hideCards_.size(); i++) {
        output.writeInt32(1, hideCards_.get(i));
      }
      for (int i = 0; i < gangCards_.size(); i++) {
        output.writeInt32(2, gangCards_.get(i));
      }
      for (int i = 0; i < angangCards_.size(); i++) {
        output.writeInt32(3, angangCards_.get(i));
      }
      for (int i = 0; i < pengCards_.size(); i++) {
        output.writeInt32(4, pengCards_.get(i));
      }
      for (int i = 0; i < flowerCards_.size(); i++) {
        output.writeInt32(5, flowerCards_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(6, score_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(7, tingCard_);
      }
      for (int i = 0; i < detailInfo_.size(); i++) {
        output.writeMessage(8, detailInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < hideCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(hideCards_.get(i));
        }
        size += dataSize;
        size += 1 * getHideCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gangCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gangCards_.get(i));
        }
        size += dataSize;
        size += 1 * getGangCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < angangCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(angangCards_.get(i));
        }
        size += dataSize;
        size += 1 * getAngangCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pengCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(pengCards_.get(i));
        }
        size += dataSize;
        size += 1 * getPengCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < flowerCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(flowerCards_.get(i));
        }
        size += dataSize;
        size += 1 * getFlowerCardsList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, score_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, tingCard_);
      }
      for (int i = 0; i < detailInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, detailInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.msg_player_circle_result}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_resultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_player_circle_result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_player_circle_result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDetailInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        hideCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        gangCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        angangCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        pengCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        flowerCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        tingCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (detailInfoBuilder_ == null) {
          detailInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          detailInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_player_circle_result_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result build() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result result = new game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          hideCards_ = java.util.Collections.unmodifiableList(hideCards_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.hideCards_ = hideCards_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          gangCards_ = java.util.Collections.unmodifiableList(gangCards_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.gangCards_ = gangCards_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          angangCards_ = java.util.Collections.unmodifiableList(angangCards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.angangCards_ = angangCards_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          pengCards_ = java.util.Collections.unmodifiableList(pengCards_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.pengCards_ = pengCards_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          flowerCards_ = java.util.Collections.unmodifiableList(flowerCards_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.flowerCards_ = flowerCards_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000001;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tingCard_ = tingCard_;
        if (detailInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            detailInfo_ = java.util.Collections.unmodifiableList(detailInfo_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.detailInfo_ = detailInfo_;
        } else {
          result.detailInfo_ = detailInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result.getDefaultInstance()) return this;
        if (!other.hideCards_.isEmpty()) {
          if (hideCards_.isEmpty()) {
            hideCards_ = other.hideCards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHideCardsIsMutable();
            hideCards_.addAll(other.hideCards_);
          }
          onChanged();
        }
        if (!other.gangCards_.isEmpty()) {
          if (gangCards_.isEmpty()) {
            gangCards_ = other.gangCards_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureGangCardsIsMutable();
            gangCards_.addAll(other.gangCards_);
          }
          onChanged();
        }
        if (!other.angangCards_.isEmpty()) {
          if (angangCards_.isEmpty()) {
            angangCards_ = other.angangCards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAngangCardsIsMutable();
            angangCards_.addAll(other.angangCards_);
          }
          onChanged();
        }
        if (!other.pengCards_.isEmpty()) {
          if (pengCards_.isEmpty()) {
            pengCards_ = other.pengCards_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensurePengCardsIsMutable();
            pengCards_.addAll(other.pengCards_);
          }
          onChanged();
        }
        if (!other.flowerCards_.isEmpty()) {
          if (flowerCards_.isEmpty()) {
            flowerCards_ = other.flowerCards_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureFlowerCardsIsMutable();
            flowerCards_.addAll(other.flowerCards_);
          }
          onChanged();
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasTingCard()) {
          setTingCard(other.getTingCard());
        }
        if (detailInfoBuilder_ == null) {
          if (!other.detailInfo_.isEmpty()) {
            if (detailInfo_.isEmpty()) {
              detailInfo_ = other.detailInfo_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureDetailInfoIsMutable();
              detailInfo_.addAll(other.detailInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.detailInfo_.isEmpty()) {
            if (detailInfoBuilder_.isEmpty()) {
              detailInfoBuilder_.dispose();
              detailInfoBuilder_ = null;
              detailInfo_ = other.detailInfo_;
              bitField0_ = (bitField0_ & ~0x00000080);
              detailInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDetailInfoFieldBuilder() : null;
            } else {
              detailInfoBuilder_.addAllMessages(other.detailInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.msg_player_circle_result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 hide_cards = 1;
      private java.util.List<java.lang.Integer> hideCards_ = java.util.Collections.emptyList();
      private void ensureHideCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          hideCards_ = new java.util.ArrayList<java.lang.Integer>(hideCards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 hide_cards = 1;</code>
       *
       * <pre>
       *玩家最后手上的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHideCardsList() {
        return java.util.Collections.unmodifiableList(hideCards_);
      }
      /**
       * <code>repeated int32 hide_cards = 1;</code>
       *
       * <pre>
       *玩家最后手上的牌
       * </pre>
       */
      public int getHideCardsCount() {
        return hideCards_.size();
      }
      /**
       * <code>repeated int32 hide_cards = 1;</code>
       *
       * <pre>
       *玩家最后手上的牌
       * </pre>
       */
      public int getHideCards(int index) {
        return hideCards_.get(index);
      }
      /**
       * <code>repeated int32 hide_cards = 1;</code>
       *
       * <pre>
       *玩家最后手上的牌
       * </pre>
       */
      public Builder setHideCards(
          int index, int value) {
        ensureHideCardsIsMutable();
        hideCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hide_cards = 1;</code>
       *
       * <pre>
       *玩家最后手上的牌
       * </pre>
       */
      public Builder addHideCards(int value) {
        ensureHideCardsIsMutable();
        hideCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hide_cards = 1;</code>
       *
       * <pre>
       *玩家最后手上的牌
       * </pre>
       */
      public Builder addAllHideCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHideCardsIsMutable();
        super.addAll(values, hideCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 hide_cards = 1;</code>
       *
       * <pre>
       *玩家最后手上的牌
       * </pre>
       */
      public Builder clearHideCards() {
        hideCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated int32 gang_cards = 2;
      private java.util.List<java.lang.Integer> gangCards_ = java.util.Collections.emptyList();
      private void ensureGangCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          gangCards_ = new java.util.ArrayList<java.lang.Integer>(gangCards_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 gang_cards = 2;</code>
       *
       * <pre>
       *玩家最后手上的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGangCardsList() {
        return java.util.Collections.unmodifiableList(gangCards_);
      }
      /**
       * <code>repeated int32 gang_cards = 2;</code>
       *
       * <pre>
       *玩家最后手上的牌
       * </pre>
       */
      public int getGangCardsCount() {
        return gangCards_.size();
      }
      /**
       * <code>repeated int32 gang_cards = 2;</code>
       *
       * <pre>
       *玩家最后手上的牌
       * </pre>
       */
      public int getGangCards(int index) {
        return gangCards_.get(index);
      }
      /**
       * <code>repeated int32 gang_cards = 2;</code>
       *
       * <pre>
       *玩家最后手上的牌
       * </pre>
       */
      public Builder setGangCards(
          int index, int value) {
        ensureGangCardsIsMutable();
        gangCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gang_cards = 2;</code>
       *
       * <pre>
       *玩家最后手上的牌
       * </pre>
       */
      public Builder addGangCards(int value) {
        ensureGangCardsIsMutable();
        gangCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gang_cards = 2;</code>
       *
       * <pre>
       *玩家最后手上的牌
       * </pre>
       */
      public Builder addAllGangCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGangCardsIsMutable();
        super.addAll(values, gangCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gang_cards = 2;</code>
       *
       * <pre>
       *玩家最后手上的牌
       * </pre>
       */
      public Builder clearGangCards() {
        gangCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 angang_cards = 3;
      private java.util.List<java.lang.Integer> angangCards_ = java.util.Collections.emptyList();
      private void ensureAngangCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          angangCards_ = new java.util.ArrayList<java.lang.Integer>(angangCards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 angang_cards = 3;</code>
       *
       * <pre>
       *暗杠牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAngangCardsList() {
        return java.util.Collections.unmodifiableList(angangCards_);
      }
      /**
       * <code>repeated int32 angang_cards = 3;</code>
       *
       * <pre>
       *暗杠牌
       * </pre>
       */
      public int getAngangCardsCount() {
        return angangCards_.size();
      }
      /**
       * <code>repeated int32 angang_cards = 3;</code>
       *
       * <pre>
       *暗杠牌
       * </pre>
       */
      public int getAngangCards(int index) {
        return angangCards_.get(index);
      }
      /**
       * <code>repeated int32 angang_cards = 3;</code>
       *
       * <pre>
       *暗杠牌
       * </pre>
       */
      public Builder setAngangCards(
          int index, int value) {
        ensureAngangCardsIsMutable();
        angangCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 angang_cards = 3;</code>
       *
       * <pre>
       *暗杠牌
       * </pre>
       */
      public Builder addAngangCards(int value) {
        ensureAngangCardsIsMutable();
        angangCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 angang_cards = 3;</code>
       *
       * <pre>
       *暗杠牌
       * </pre>
       */
      public Builder addAllAngangCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAngangCardsIsMutable();
        super.addAll(values, angangCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 angang_cards = 3;</code>
       *
       * <pre>
       *暗杠牌
       * </pre>
       */
      public Builder clearAngangCards() {
        angangCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int32 peng_cards = 4;
      private java.util.List<java.lang.Integer> pengCards_ = java.util.Collections.emptyList();
      private void ensurePengCardsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          pengCards_ = new java.util.ArrayList<java.lang.Integer>(pengCards_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 peng_cards = 4;</code>
       *
       * <pre>
       *碰牌的
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPengCardsList() {
        return java.util.Collections.unmodifiableList(pengCards_);
      }
      /**
       * <code>repeated int32 peng_cards = 4;</code>
       *
       * <pre>
       *碰牌的
       * </pre>
       */
      public int getPengCardsCount() {
        return pengCards_.size();
      }
      /**
       * <code>repeated int32 peng_cards = 4;</code>
       *
       * <pre>
       *碰牌的
       * </pre>
       */
      public int getPengCards(int index) {
        return pengCards_.get(index);
      }
      /**
       * <code>repeated int32 peng_cards = 4;</code>
       *
       * <pre>
       *碰牌的
       * </pre>
       */
      public Builder setPengCards(
          int index, int value) {
        ensurePengCardsIsMutable();
        pengCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 peng_cards = 4;</code>
       *
       * <pre>
       *碰牌的
       * </pre>
       */
      public Builder addPengCards(int value) {
        ensurePengCardsIsMutable();
        pengCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 peng_cards = 4;</code>
       *
       * <pre>
       *碰牌的
       * </pre>
       */
      public Builder addAllPengCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePengCardsIsMutable();
        super.addAll(values, pengCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 peng_cards = 4;</code>
       *
       * <pre>
       *碰牌的
       * </pre>
       */
      public Builder clearPengCards() {
        pengCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // repeated int32 flower_cards = 5;
      private java.util.List<java.lang.Integer> flowerCards_ = java.util.Collections.emptyList();
      private void ensureFlowerCardsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          flowerCards_ = new java.util.ArrayList<java.lang.Integer>(flowerCards_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 flower_cards = 5;</code>
       *
       * <pre>
       *吃的牌的集合
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFlowerCardsList() {
        return java.util.Collections.unmodifiableList(flowerCards_);
      }
      /**
       * <code>repeated int32 flower_cards = 5;</code>
       *
       * <pre>
       *吃的牌的集合
       * </pre>
       */
      public int getFlowerCardsCount() {
        return flowerCards_.size();
      }
      /**
       * <code>repeated int32 flower_cards = 5;</code>
       *
       * <pre>
       *吃的牌的集合
       * </pre>
       */
      public int getFlowerCards(int index) {
        return flowerCards_.get(index);
      }
      /**
       * <code>repeated int32 flower_cards = 5;</code>
       *
       * <pre>
       *吃的牌的集合
       * </pre>
       */
      public Builder setFlowerCards(
          int index, int value) {
        ensureFlowerCardsIsMutable();
        flowerCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flower_cards = 5;</code>
       *
       * <pre>
       *吃的牌的集合
       * </pre>
       */
      public Builder addFlowerCards(int value) {
        ensureFlowerCardsIsMutable();
        flowerCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flower_cards = 5;</code>
       *
       * <pre>
       *吃的牌的集合
       * </pre>
       */
      public Builder addAllFlowerCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFlowerCardsIsMutable();
        super.addAll(values, flowerCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flower_cards = 5;</code>
       *
       * <pre>
       *吃的牌的集合
       * </pre>
       */
      public Builder clearFlowerCards() {
        flowerCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional int32 score = 6;
      private int score_ ;
      /**
       * <code>optional int32 score = 6;</code>
       *
       * <pre>
       *玩家得分
       * </pre>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 score = 6;</code>
       *
       * <pre>
       *玩家得分
       * </pre>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <code>optional int32 score = 6;</code>
       *
       * <pre>
       *玩家得分
       * </pre>
       */
      public Builder setScore(int value) {
        bitField0_ |= 0x00000020;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 score = 6;</code>
       *
       * <pre>
       *玩家得分
       * </pre>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000020);
        score_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ting_card = 7;
      private int tingCard_ ;
      /**
       * <code>optional int32 ting_card = 7;</code>
       *
       * <pre>
       *玩家叫听的牌
       * </pre>
       */
      public boolean hasTingCard() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 ting_card = 7;</code>
       *
       * <pre>
       *玩家叫听的牌
       * </pre>
       */
      public int getTingCard() {
        return tingCard_;
      }
      /**
       * <code>optional int32 ting_card = 7;</code>
       *
       * <pre>
       *玩家叫听的牌
       * </pre>
       */
      public Builder setTingCard(int value) {
        bitField0_ |= 0x00000040;
        tingCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ting_card = 7;</code>
       *
       * <pre>
       *玩家叫听的牌
       * </pre>
       */
      public Builder clearTingCard() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tingCard_ = 0;
        onChanged();
        return this;
      }

      // repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;
      private java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info> detailInfo_ =
        java.util.Collections.emptyList();
      private void ensureDetailInfoIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          detailInfo_ = new java.util.ArrayList<game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info>(detailInfo_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_infoOrBuilder> detailInfoBuilder_;

      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info> getDetailInfoList() {
        if (detailInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(detailInfo_);
        } else {
          return detailInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public int getDetailInfoCount() {
        if (detailInfoBuilder_ == null) {
          return detailInfo_.size();
        } else {
          return detailInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info getDetailInfo(int index) {
        if (detailInfoBuilder_ == null) {
          return detailInfo_.get(index);
        } else {
          return detailInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public Builder setDetailInfo(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info value) {
        if (detailInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailInfoIsMutable();
          detailInfo_.set(index, value);
          onChanged();
        } else {
          detailInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public Builder setDetailInfo(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.Builder builderForValue) {
        if (detailInfoBuilder_ == null) {
          ensureDetailInfoIsMutable();
          detailInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          detailInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public Builder addDetailInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info value) {
        if (detailInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailInfoIsMutable();
          detailInfo_.add(value);
          onChanged();
        } else {
          detailInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public Builder addDetailInfo(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info value) {
        if (detailInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailInfoIsMutable();
          detailInfo_.add(index, value);
          onChanged();
        } else {
          detailInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public Builder addDetailInfo(
          game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.Builder builderForValue) {
        if (detailInfoBuilder_ == null) {
          ensureDetailInfoIsMutable();
          detailInfo_.add(builderForValue.build());
          onChanged();
        } else {
          detailInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public Builder addDetailInfo(
          int index, game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.Builder builderForValue) {
        if (detailInfoBuilder_ == null) {
          ensureDetailInfoIsMutable();
          detailInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          detailInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public Builder addAllDetailInfo(
          java.lang.Iterable<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info> values) {
        if (detailInfoBuilder_ == null) {
          ensureDetailInfoIsMutable();
          super.addAll(values, detailInfo_);
          onChanged();
        } else {
          detailInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public Builder clearDetailInfo() {
        if (detailInfoBuilder_ == null) {
          detailInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          detailInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public Builder removeDetailInfo(int index) {
        if (detailInfoBuilder_ == null) {
          ensureDetailInfoIsMutable();
          detailInfo_.remove(index);
          onChanged();
        } else {
          detailInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.Builder getDetailInfoBuilder(
          int index) {
        return getDetailInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_infoOrBuilder getDetailInfoOrBuilder(
          int index) {
        if (detailInfoBuilder_ == null) {
          return detailInfo_.get(index);  } else {
          return detailInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public java.util.List<? extends game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_infoOrBuilder> 
           getDetailInfoOrBuilderList() {
        if (detailInfoBuilder_ != null) {
          return detailInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(detailInfo_);
        }
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.Builder addDetailInfoBuilder() {
        return getDetailInfoFieldBuilder().addBuilder(
            game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.Builder addDetailInfoBuilder(
          int index) {
        return getDetailInfoFieldBuilder().addBuilder(
            index, game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.getDefaultInstance());
      }
      /**
       * <code>repeated .game_guanyuan_protocols.msg_hu_detail_info detail_info = 8;</code>
       *
       * <pre>
       *胡牌时的信息状态
       * </pre>
       */
      public java.util.List<game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.Builder> 
           getDetailInfoBuilderList() {
        return getDetailInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_infoOrBuilder> 
          getDetailInfoFieldBuilder() {
        if (detailInfoBuilder_ == null) {
          detailInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_infoOrBuilder>(
                  detailInfo_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          detailInfo_ = null;
        }
        return detailInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.msg_player_circle_result)
    }

    static {
      defaultInstance = new msg_player_circle_result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.msg_player_circle_result)
  }

  public interface msg_hu_detail_infoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 hu_id = 1;
    /**
     * <code>optional int32 hu_id = 1;</code>
     *
     * <pre>
     *胡牌的具体Id
     * </pre>
     */
    boolean hasHuId();
    /**
     * <code>optional int32 hu_id = 1;</code>
     *
     * <pre>
     *胡牌的具体Id
     * </pre>
     */
    int getHuId();

    // optional int32 fen = 2;
    /**
     * <code>optional int32 fen = 2;</code>
     *
     * <pre>
     *分值
     * </pre>
     */
    boolean hasFen();
    /**
     * <code>optional int32 fen = 2;</code>
     *
     * <pre>
     *分值
     * </pre>
     */
    int getFen();

    // optional int32 hua = 3;
    /**
     * <code>optional int32 hua = 3;</code>
     *
     * <pre>
     *花值
     * </pre>
     */
    boolean hasHua();
    /**
     * <code>optional int32 hua = 3;</code>
     *
     * <pre>
     *花值
     * </pre>
     */
    int getHua();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.msg_hu_detail_info}
   */
  public static final class msg_hu_detail_info extends
      com.google.protobuf.GeneratedMessage
      implements msg_hu_detail_infoOrBuilder {
    // Use msg_hu_detail_info.newBuilder() to construct.
    private msg_hu_detail_info(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private msg_hu_detail_info(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final msg_hu_detail_info defaultInstance;
    public static msg_hu_detail_info getDefaultInstance() {
      return defaultInstance;
    }

    public msg_hu_detail_info getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private msg_hu_detail_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              huId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fen_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              hua_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_hu_detail_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_hu_detail_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.Builder.class);
    }

    public static com.google.protobuf.Parser<msg_hu_detail_info> PARSER =
        new com.google.protobuf.AbstractParser<msg_hu_detail_info>() {
      public msg_hu_detail_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new msg_hu_detail_info(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<msg_hu_detail_info> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 hu_id = 1;
    public static final int HU_ID_FIELD_NUMBER = 1;
    private int huId_;
    /**
     * <code>optional int32 hu_id = 1;</code>
     *
     * <pre>
     *胡牌的具体Id
     * </pre>
     */
    public boolean hasHuId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 hu_id = 1;</code>
     *
     * <pre>
     *胡牌的具体Id
     * </pre>
     */
    public int getHuId() {
      return huId_;
    }

    // optional int32 fen = 2;
    public static final int FEN_FIELD_NUMBER = 2;
    private int fen_;
    /**
     * <code>optional int32 fen = 2;</code>
     *
     * <pre>
     *分值
     * </pre>
     */
    public boolean hasFen() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 fen = 2;</code>
     *
     * <pre>
     *分值
     * </pre>
     */
    public int getFen() {
      return fen_;
    }

    // optional int32 hua = 3;
    public static final int HUA_FIELD_NUMBER = 3;
    private int hua_;
    /**
     * <code>optional int32 hua = 3;</code>
     *
     * <pre>
     *花值
     * </pre>
     */
    public boolean hasHua() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 hua = 3;</code>
     *
     * <pre>
     *花值
     * </pre>
     */
    public int getHua() {
      return hua_;
    }

    private void initFields() {
      huId_ = 0;
      fen_ = 0;
      hua_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, huId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, fen_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, hua_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, huId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, fen_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, hua_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.msg_hu_detail_info}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_hu_detail_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_hu_detail_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        huId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        hua_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_hu_detail_info_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info build() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info result = new game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.huId_ = huId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fen_ = fen_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.hua_ = hua_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info.getDefaultInstance()) return this;
        if (other.hasHuId()) {
          setHuId(other.getHuId());
        }
        if (other.hasFen()) {
          setFen(other.getFen());
        }
        if (other.hasHua()) {
          setHua(other.getHua());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.msg_hu_detail_info) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 hu_id = 1;
      private int huId_ ;
      /**
       * <code>optional int32 hu_id = 1;</code>
       *
       * <pre>
       *胡牌的具体Id
       * </pre>
       */
      public boolean hasHuId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 hu_id = 1;</code>
       *
       * <pre>
       *胡牌的具体Id
       * </pre>
       */
      public int getHuId() {
        return huId_;
      }
      /**
       * <code>optional int32 hu_id = 1;</code>
       *
       * <pre>
       *胡牌的具体Id
       * </pre>
       */
      public Builder setHuId(int value) {
        bitField0_ |= 0x00000001;
        huId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hu_id = 1;</code>
       *
       * <pre>
       *胡牌的具体Id
       * </pre>
       */
      public Builder clearHuId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        huId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 fen = 2;
      private int fen_ ;
      /**
       * <code>optional int32 fen = 2;</code>
       *
       * <pre>
       *分值
       * </pre>
       */
      public boolean hasFen() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 fen = 2;</code>
       *
       * <pre>
       *分值
       * </pre>
       */
      public int getFen() {
        return fen_;
      }
      /**
       * <code>optional int32 fen = 2;</code>
       *
       * <pre>
       *分值
       * </pre>
       */
      public Builder setFen(int value) {
        bitField0_ |= 0x00000002;
        fen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fen = 2;</code>
       *
       * <pre>
       *分值
       * </pre>
       */
      public Builder clearFen() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fen_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hua = 3;
      private int hua_ ;
      /**
       * <code>optional int32 hua = 3;</code>
       *
       * <pre>
       *花值
       * </pre>
       */
      public boolean hasHua() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 hua = 3;</code>
       *
       * <pre>
       *花值
       * </pre>
       */
      public int getHua() {
        return hua_;
      }
      /**
       * <code>optional int32 hua = 3;</code>
       *
       * <pre>
       *花值
       * </pre>
       */
      public Builder setHua(int value) {
        bitField0_ |= 0x00000004;
        hua_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hua = 3;</code>
       *
       * <pre>
       *花值
       * </pre>
       */
      public Builder clearHua() {
        bitField0_ = (bitField0_ & ~0x00000004);
        hua_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.msg_hu_detail_info)
    }

    static {
      defaultInstance = new msg_hu_detail_info(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.msg_hu_detail_info)
  }

  public interface packetl2c_player_enter_game_ntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_enter_room_nt];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_enter_room_nt];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_enter_room_nt];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional .game_guanyuan_protocols.msg_user_info user_info = 2;
    /**
     * <code>optional .game_guanyuan_protocols.msg_user_info user_info = 2;</code>
     *
     * <pre>
     *当前玩家信息
     * </pre>
     */
    boolean hasUserInfo();
    /**
     * <code>optional .game_guanyuan_protocols.msg_user_info user_info = 2;</code>
     *
     * <pre>
     *当前玩家信息
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info getUserInfo();
    /**
     * <code>optional .game_guanyuan_protocols.msg_user_info user_info = 2;</code>
     *
     * <pre>
     *当前玩家信息
     * </pre>
     */
    game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder getUserInfoOrBuilder();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_player_enter_game_nt}
   *
   * <pre>
   *通知桌上其它玩家，某个人进入房间了
   * </pre>
   */
  public static final class packetl2c_player_enter_game_nt extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_player_enter_game_ntOrBuilder {
    // Use packetl2c_player_enter_game_nt.newBuilder() to construct.
    private packetl2c_player_enter_game_nt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_player_enter_game_nt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_player_enter_game_nt defaultInstance;
    public static packetl2c_player_enter_game_nt getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_player_enter_game_nt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_player_enter_game_nt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 18: {
              game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = userInfo_.toBuilder();
              }
              userInfo_ = input.readMessage(game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userInfo_);
                userInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_player_enter_game_nt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_player_enter_game_nt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_player_enter_game_nt> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_player_enter_game_nt>() {
      public packetl2c_player_enter_game_nt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_player_enter_game_nt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_player_enter_game_nt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_enter_room_nt];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_enter_room_nt];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_enter_room_nt];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional .game_guanyuan_protocols.msg_user_info user_info = 2;
    public static final int USER_INFO_FIELD_NUMBER = 2;
    private game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info userInfo_;
    /**
     * <code>optional .game_guanyuan_protocols.msg_user_info user_info = 2;</code>
     *
     * <pre>
     *当前玩家信息
     * </pre>
     */
    public boolean hasUserInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .game_guanyuan_protocols.msg_user_info user_info = 2;</code>
     *
     * <pre>
     *当前玩家信息
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info getUserInfo() {
      return userInfo_;
    }
    /**
     * <code>optional .game_guanyuan_protocols.msg_user_info user_info = 2;</code>
     *
     * <pre>
     *当前玩家信息
     * </pre>
     */
    public game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder getUserInfoOrBuilder() {
      return userInfo_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_player_enter_room_nt;
      userInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, userInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, userInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_player_enter_game_nt}
     *
     * <pre>
     *通知桌上其它玩家，某个人进入房间了
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_ntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_player_enter_game_nt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_player_enter_game_nt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUserInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_player_enter_room_nt;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (userInfoBuilder_ == null) {
          userInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.getDefaultInstance();
        } else {
          userInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_player_enter_game_nt_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (userInfoBuilder_ == null) {
          result.userInfo_ = userInfo_;
        } else {
          result.userInfo_ = userInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasUserInfo()) {
          mergeUserInfo(other.getUserInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_player_enter_game_nt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_enter_room_nt];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_player_enter_room_nt;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_enter_room_nt];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_enter_room_nt];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_enter_room_nt];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_player_enter_room_nt];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_player_enter_room_nt;
        onChanged();
        return this;
      }

      // optional .game_guanyuan_protocols.msg_user_info user_info = 2;
      private game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info userInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder> userInfoBuilder_;
      /**
       * <code>optional .game_guanyuan_protocols.msg_user_info user_info = 2;</code>
       *
       * <pre>
       *当前玩家信息
       * </pre>
       */
      public boolean hasUserInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_user_info user_info = 2;</code>
       *
       * <pre>
       *当前玩家信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info getUserInfo() {
        if (userInfoBuilder_ == null) {
          return userInfo_;
        } else {
          return userInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_user_info user_info = 2;</code>
       *
       * <pre>
       *当前玩家信息
       * </pre>
       */
      public Builder setUserInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info value) {
        if (userInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userInfo_ = value;
          onChanged();
        } else {
          userInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_user_info user_info = 2;</code>
       *
       * <pre>
       *当前玩家信息
       * </pre>
       */
      public Builder setUserInfo(
          game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder builderForValue) {
        if (userInfoBuilder_ == null) {
          userInfo_ = builderForValue.build();
          onChanged();
        } else {
          userInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_user_info user_info = 2;</code>
       *
       * <pre>
       *当前玩家信息
       * </pre>
       */
      public Builder mergeUserInfo(game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info value) {
        if (userInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              userInfo_ != game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.getDefaultInstance()) {
            userInfo_ =
              game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.newBuilder(userInfo_).mergeFrom(value).buildPartial();
          } else {
            userInfo_ = value;
          }
          onChanged();
        } else {
          userInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_user_info user_info = 2;</code>
       *
       * <pre>
       *当前玩家信息
       * </pre>
       */
      public Builder clearUserInfo() {
        if (userInfoBuilder_ == null) {
          userInfo_ = game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.getDefaultInstance();
          onChanged();
        } else {
          userInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_user_info user_info = 2;</code>
       *
       * <pre>
       *当前玩家信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder getUserInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getUserInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_user_info user_info = 2;</code>
       *
       * <pre>
       *当前玩家信息
       * </pre>
       */
      public game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder getUserInfoOrBuilder() {
        if (userInfoBuilder_ != null) {
          return userInfoBuilder_.getMessageOrBuilder();
        } else {
          return userInfo_;
        }
      }
      /**
       * <code>optional .game_guanyuan_protocols.msg_user_info user_info = 2;</code>
       *
       * <pre>
       *当前玩家信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder> 
          getUserInfoFieldBuilder() {
        if (userInfoBuilder_ == null) {
          userInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_info.Builder, game_guanyuan_protocols.GameGuanyunProtocol.msg_user_infoOrBuilder>(
                  userInfo_,
                  getParentForChildren(),
                  isClean());
          userInfo_ = null;
        }
        return userInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_player_enter_game_nt)
    }

    static {
      defaultInstance = new packetl2c_player_enter_game_nt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_player_enter_game_nt)
  }

  public interface packetl2c_line_status_ntOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_line_status_nt];
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_line_status_nt];</code>
     */
    boolean hasPacketId();
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_line_status_nt];</code>
     */
    game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId();

    // optional int32 seat_pos = 2;
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *某个位置
     * </pre>
     */
    boolean hasSeatPos();
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *某个位置
     * </pre>
     */
    int getSeatPos();

    // optional int32 line_status = 3;
    /**
     * <code>optional int32 line_status = 3;</code>
     *
     * <pre>
     *上下线状态 0：离线 1：上线
     * </pre>
     */
    boolean hasLineStatus();
    /**
     * <code>optional int32 line_status = 3;</code>
     *
     * <pre>
     *上下线状态 0：离线 1：上线
     * </pre>
     */
    int getLineStatus();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.packetl2c_line_status_nt}
   *
   * <pre>
   *某个玩家的上下线通知
   * </pre>
   */
  public static final class packetl2c_line_status_nt extends
      com.google.protobuf.GeneratedMessage
      implements packetl2c_line_status_ntOrBuilder {
    // Use packetl2c_line_status_nt.newBuilder() to construct.
    private packetl2c_line_status_nt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private packetl2c_line_status_nt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final packetl2c_line_status_nt defaultInstance;
    public static packetl2c_line_status_nt getDefaultInstance() {
      return defaultInstance;
    }

    public packetl2c_line_status_nt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private packetl2c_line_status_nt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                packetId_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seatPos_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lineStatus_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_line_status_nt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_line_status_nt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt.Builder.class);
    }

    public static com.google.protobuf.Parser<packetl2c_line_status_nt> PARSER =
        new com.google.protobuf.AbstractParser<packetl2c_line_status_nt>() {
      public packetl2c_line_status_nt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new packetl2c_line_status_nt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<packetl2c_line_status_nt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_line_status_nt];
    public static final int PACKET_ID_FIELD_NUMBER = 1;
    private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_;
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_line_status_nt];</code>
     */
    public boolean hasPacketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_line_status_nt];</code>
     */
    public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
      return packetId_;
    }

    // optional int32 seat_pos = 2;
    public static final int SEAT_POS_FIELD_NUMBER = 2;
    private int seatPos_;
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *某个位置
     * </pre>
     */
    public boolean hasSeatPos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat_pos = 2;</code>
     *
     * <pre>
     *某个位置
     * </pre>
     */
    public int getSeatPos() {
      return seatPos_;
    }

    // optional int32 line_status = 3;
    public static final int LINE_STATUS_FIELD_NUMBER = 3;
    private int lineStatus_;
    /**
     * <code>optional int32 line_status = 3;</code>
     *
     * <pre>
     *上下线状态 0：离线 1：上线
     * </pre>
     */
    public boolean hasLineStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 line_status = 3;</code>
     *
     * <pre>
     *上下线状态 0：离线 1：上线
     * </pre>
     */
    public int getLineStatus() {
      return lineStatus_;
    }

    private void initFields() {
      packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_line_status_nt;
      seatPos_ = 0;
      lineStatus_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seatPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lineStatus_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, packetId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatPos_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lineStatus_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.packetl2c_line_status_nt}
     *
     * <pre>
     *某个玩家的上下线通知
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_ntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_line_status_nt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_line_status_nt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt.class, game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_line_status_nt;
        bitField0_ = (bitField0_ & ~0x00000001);
        seatPos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        lineStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_packetl2c_line_status_nt_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt build() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt result = new game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetId_ = packetId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seatPos_ = seatPos_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lineStatus_ = lineStatus_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt.getDefaultInstance()) return this;
        if (other.hasPacketId()) {
          setPacketId(other.getPacketId());
        }
        if (other.hasSeatPos()) {
          setSeatPos(other.getSeatPos());
        }
        if (other.hasLineStatus()) {
          setLineStatus(other.getLineStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.packetl2c_line_status_nt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_line_status_nt];
      private game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_line_status_nt;
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_line_status_nt];</code>
       */
      public boolean hasPacketId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_line_status_nt];</code>
       */
      public game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type getPacketId() {
        return packetId_;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_line_status_nt];</code>
       */
      public Builder setPacketId(game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .game_guanyuan_protocols.e_server_msg_type packet_id = 1 [default = e_mst_l2c_line_status_nt];</code>
       */
      public Builder clearPacketId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetId_ = game_guanyuan_protocols.GameGuanyuanDef.e_server_msg_type.e_mst_l2c_line_status_nt;
        onChanged();
        return this;
      }

      // optional int32 seat_pos = 2;
      private int seatPos_ ;
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *某个位置
       * </pre>
       */
      public boolean hasSeatPos() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *某个位置
       * </pre>
       */
      public int getSeatPos() {
        return seatPos_;
      }
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *某个位置
       * </pre>
       */
      public Builder setSeatPos(int value) {
        bitField0_ |= 0x00000002;
        seatPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_pos = 2;</code>
       *
       * <pre>
       *某个位置
       * </pre>
       */
      public Builder clearSeatPos() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seatPos_ = 0;
        onChanged();
        return this;
      }

      // optional int32 line_status = 3;
      private int lineStatus_ ;
      /**
       * <code>optional int32 line_status = 3;</code>
       *
       * <pre>
       *上下线状态 0：离线 1：上线
       * </pre>
       */
      public boolean hasLineStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 line_status = 3;</code>
       *
       * <pre>
       *上下线状态 0：离线 1：上线
       * </pre>
       */
      public int getLineStatus() {
        return lineStatus_;
      }
      /**
       * <code>optional int32 line_status = 3;</code>
       *
       * <pre>
       *上下线状态 0：离线 1：上线
       * </pre>
       */
      public Builder setLineStatus(int value) {
        bitField0_ |= 0x00000004;
        lineStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 line_status = 3;</code>
       *
       * <pre>
       *上下线状态 0：离线 1：上线
       * </pre>
       */
      public Builder clearLineStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lineStatus_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.packetl2c_line_status_nt)
    }

    static {
      defaultInstance = new packetl2c_line_status_nt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.packetl2c_line_status_nt)
  }

  public interface msg_chi_card_infoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 start_card = 1;
    /**
     * <code>optional int32 start_card = 1;</code>
     *
     * <pre>
     *吃牌的起始位置
     * </pre>
     */
    boolean hasStartCard();
    /**
     * <code>optional int32 start_card = 1;</code>
     *
     * <pre>
     *吃牌的起始位置
     * </pre>
     */
    int getStartCard();

    // optional int32 eated_card = 2;
    /**
     * <code>optional int32 eated_card = 2;</code>
     *
     * <pre>
     *被吃的牌
     * </pre>
     */
    boolean hasEatedCard();
    /**
     * <code>optional int32 eated_card = 2;</code>
     *
     * <pre>
     *被吃的牌
     * </pre>
     */
    int getEatedCard();
  }
  /**
   * Protobuf type {@code game_guanyuan_protocols.msg_chi_card_info}
   */
  public static final class msg_chi_card_info extends
      com.google.protobuf.GeneratedMessage
      implements msg_chi_card_infoOrBuilder {
    // Use msg_chi_card_info.newBuilder() to construct.
    private msg_chi_card_info(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private msg_chi_card_info(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final msg_chi_card_info defaultInstance;
    public static msg_chi_card_info getDefaultInstance() {
      return defaultInstance;
    }

    public msg_chi_card_info getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private msg_chi_card_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              startCard_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              eatedCard_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_chi_card_info_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_chi_card_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.Builder.class);
    }

    public static com.google.protobuf.Parser<msg_chi_card_info> PARSER =
        new com.google.protobuf.AbstractParser<msg_chi_card_info>() {
      public msg_chi_card_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new msg_chi_card_info(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<msg_chi_card_info> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 start_card = 1;
    public static final int START_CARD_FIELD_NUMBER = 1;
    private int startCard_;
    /**
     * <code>optional int32 start_card = 1;</code>
     *
     * <pre>
     *吃牌的起始位置
     * </pre>
     */
    public boolean hasStartCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 start_card = 1;</code>
     *
     * <pre>
     *吃牌的起始位置
     * </pre>
     */
    public int getStartCard() {
      return startCard_;
    }

    // optional int32 eated_card = 2;
    public static final int EATED_CARD_FIELD_NUMBER = 2;
    private int eatedCard_;
    /**
     * <code>optional int32 eated_card = 2;</code>
     *
     * <pre>
     *被吃的牌
     * </pre>
     */
    public boolean hasEatedCard() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 eated_card = 2;</code>
     *
     * <pre>
     *被吃的牌
     * </pre>
     */
    public int getEatedCard() {
      return eatedCard_;
    }

    private void initFields() {
      startCard_ = 0;
      eatedCard_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, startCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, eatedCard_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, startCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, eatedCard_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code game_guanyuan_protocols.msg_chi_card_info}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_chi_card_info_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_chi_card_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.class, game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.Builder.class);
      }

      // Construct using game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        startCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        eatedCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.internal_static_game_guanyuan_protocols_msg_chi_card_info_descriptor;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info getDefaultInstanceForType() {
        return game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.getDefaultInstance();
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info build() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info buildPartial() {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info result = new game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startCard_ = startCard_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eatedCard_ = eatedCard_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info) {
          return mergeFrom((game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info other) {
        if (other == game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info.getDefaultInstance()) return this;
        if (other.hasStartCard()) {
          setStartCard(other.getStartCard());
        }
        if (other.hasEatedCard()) {
          setEatedCard(other.getEatedCard());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (game_guanyuan_protocols.GameGuanyunProtocol.msg_chi_card_info) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 start_card = 1;
      private int startCard_ ;
      /**
       * <code>optional int32 start_card = 1;</code>
       *
       * <pre>
       *吃牌的起始位置
       * </pre>
       */
      public boolean hasStartCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 start_card = 1;</code>
       *
       * <pre>
       *吃牌的起始位置
       * </pre>
       */
      public int getStartCard() {
        return startCard_;
      }
      /**
       * <code>optional int32 start_card = 1;</code>
       *
       * <pre>
       *吃牌的起始位置
       * </pre>
       */
      public Builder setStartCard(int value) {
        bitField0_ |= 0x00000001;
        startCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 start_card = 1;</code>
       *
       * <pre>
       *吃牌的起始位置
       * </pre>
       */
      public Builder clearStartCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 eated_card = 2;
      private int eatedCard_ ;
      /**
       * <code>optional int32 eated_card = 2;</code>
       *
       * <pre>
       *被吃的牌
       * </pre>
       */
      public boolean hasEatedCard() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 eated_card = 2;</code>
       *
       * <pre>
       *被吃的牌
       * </pre>
       */
      public int getEatedCard() {
        return eatedCard_;
      }
      /**
       * <code>optional int32 eated_card = 2;</code>
       *
       * <pre>
       *被吃的牌
       * </pre>
       */
      public Builder setEatedCard(int value) {
        bitField0_ |= 0x00000002;
        eatedCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 eated_card = 2;</code>
       *
       * <pre>
       *被吃的牌
       * </pre>
       */
      public Builder clearEatedCard() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eatedCard_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:game_guanyuan_protocols.msg_chi_card_info)
    }

    static {
      defaultInstance = new msg_chi_card_info(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:game_guanyuan_protocols.msg_chi_card_info)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetc2l_check_state_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetc2l_check_state_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_check_state_result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_check_state_result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetc2l_get_scene_info_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetc2l_get_scene_info_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_get_scene_info_result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_get_scene_info_result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_msg_base_room_rule_info_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_msg_base_room_rule_info_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_msg_user_info_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_msg_user_info_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_msg_status_gaming_info_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_msg_status_gaming_info_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_msg_room_info_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_msg_room_info_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_msg_dis_room_info_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_msg_dis_room_info_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetc2l_ready_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetc2l_ready_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_ready_result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_ready_result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_msg_circle_over_info_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_msg_circle_over_info_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_msg_circle_over_detail_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_msg_circle_over_detail_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_msg_game_over_info_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_msg_game_over_info_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetc2l_leave_room_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetc2l_leave_room_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_leave_room_result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_leave_room_result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetc2l_action_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetc2l_action_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_action_result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_action_result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetc2l_gps_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetc2l_gps_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_gps_result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_gps_result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_msg_gps_info_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_msg_gps_info_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetc2l_dis_room_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetc2l_dis_room_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetc2l_dis_room_result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetc2l_dis_room_result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_msg_create_room_param_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_msg_create_room_param_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_game_start_nt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_game_start_nt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_circle_start_nt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_circle_start_nt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_dice_nt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_dice_nt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_init_card_nt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_init_card_nt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_trun_index_nt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_trun_index_nt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_replace_flower_nt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_replace_flower_nt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_player_action_nt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_player_action_nt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_msg_action_type_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_msg_action_type_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_action_nt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_action_nt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_hu_info_nt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_hu_info_nt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_circle_result_nt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_circle_result_nt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_msg_player_circle_result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_msg_player_circle_result_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_msg_hu_detail_info_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_msg_hu_detail_info_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_player_enter_game_nt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_player_enter_game_nt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_packetl2c_line_status_nt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_packetl2c_line_status_nt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_game_guanyuan_protocols_msg_chi_card_info_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_game_guanyuan_protocols_msg_chi_card_info_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033game_guanyun_protocol.proto\022\027game_guan" +
      "yuan_protocols\032\027game_guanyuan_def.proto\032" +
      "\022msg_type_def.proto\"m\n\025packetc2l_check_s" +
      "tate\022T\n\tpacket_id\030\001 \001(\0162*.game_guanyuan_" +
      "protocols.e_server_msg_type:\025e_mst_c2l_c" +
      "heck_state\"\216\001\n\034packetl2c_check_state_res" +
      "ult\022[\n\tpacket_id\030\001 \001(\0162*.game_guanyuan_p" +
      "rotocols.e_server_msg_type:\034e_mst_l2c_ch" +
      "eck_state_result\022\021\n\006result\030\002 \001(\005:\0010\"s\n\030p" +
      "acketc2l_get_scene_info\022W\n\tpacket_id\030\001 \001",
      "(\0162*.game_guanyuan_protocols.e_server_ms" +
      "g_type:\030e_mst_c2l_get_scene_info\"\237\005\n\037pac" +
      "ketl2c_get_scene_info_result\022^\n\tpacket_i" +
      "d\030\001 \001(\0162*.game_guanyuan_protocols.e_serv" +
      "er_msg_type:\037e_mst_l2c_get_scene_info_re" +
      "sult\022=\n\006result\030\002 \001(\0162\036.msg_type_def.e_ms" +
      "g_result_def:\re_rmt_success\022;\n\006status\030\003 " +
      "\001(\0162+.game_guanyuan_protocols.e_game_sta" +
      "tus_type\022:\n\nuser_infos\030\004 \003(\0132&.game_guan" +
      "yuan_protocols.msg_user_info\022M\n\023base_roo",
      "m_rule_info\030\005 \001(\01320.game_guanyuan_protoc" +
      "ols.msg_base_room_rule_info\022D\n\013gaming_in" +
      "fo\030\006 \001(\0132/.game_guanyuan_protocols.msg_s" +
      "tatus_gaming_info\022A\n\rdis_room_info\030\007 \001(\013" +
      "2*.game_guanyuan_protocols.msg_dis_room_" +
      "info\022G\n\020circle_over_info\030\010 \001(\0132-.game_gu" +
      "anyuan_protocols.msg_circle_over_info\022C\n" +
      "\016game_over_info\030\t \001(\0132+.game_guanyuan_pr" +
      "otocols.msg_game_over_info\"\351\001\n\027msg_base_" +
      "room_rule_info\022\024\n\014circle_count\030\001 \001(\005\022\021\n\t",
      "card_cost\030\002 \001(\005\022\021\n\tcost_type\030\003 \001(\005\022\022\n\nba" +
      "se_score\030\004 \001(\005\022\020\n\010hua_type\030\005 \001(\005\022\020\n\010bao_" +
      "type\030\006 \001(\005\022\017\n\007hu_type\030\007 \001(\005\022\017\n\007room_id\030\010" +
      " \001(\r\022\022\n\ncreator_id\030\t \001(\004\022\023\n\013create_time\030" +
      "\n \001(\003\022\017\n\007baseHua\030\013 \001(\005\"\230\001\n\rmsg_user_info" +
      "\022\020\n\010seat_pos\030\001 \001(\005\022\020\n\010playerId\030\002 \001(\005\022\021\n\t" +
      "user_name\030\003 \001(\t\022\014\n\004gold\030\004 \001(\005\022\021\n\thead_ic" +
      "on\030\005 \001(\t\022\013\n\003sex\030\006 \001(\005\022\r\n\005score\030\007 \001(\005\022\023\n\013" +
      "line_status\030\010 \001(\005\"\220\002\n\026msg_status_gaming_" +
      "info\0229\n\troom_info\030\001 \003(\0132&.game_guanyuan_",
      "protocols.msg_room_info\022\024\n\014angang_cards\030" +
      "\002 \003(\005\022\022\n\nhand_hards\030\003 \003(\005\022\020\n\010host_pos\030\004 " +
      "\001(\005\022\022\n\nactive_pos\030\005 \001(\005\022\025\n\rleft_card_num" +
      "\030\006 \001(\005\022\031\n\021last_out_card_pos\030\007 \001(\005\022\025\n\rlas" +
      "t_out_card\030\010 \001(\005\022\022\n\ncircle_idx\030\t \001(\005\022\016\n\006" +
      "my_pos\030\n \001(\005\"\371\001\n\rmsg_room_info\022\025\n\rhand_c" +
      "ard_num\030\001 \001(\005\022\022\n\nwall_cards\030\002 \003(\005\022\022\n\ngan" +
      "g_cards\030\003 \003(\005\022\027\n\017angang_card_num\030\004 \001(\005\022\022" +
      "\n\npeng_cards\030\005 \003(\005\022<\n\010chiCards\030\006 \003(\0132*.g" +
      "ame_guanyuan_protocols.msg_chi_card_info",
      "\022\024\n\014flower_cards\030\007 \003(\005\022\020\n\010hu_cards\030\010 \003(\005" +
      "\022\026\n\016jiao_ting_card\030\t \001(\005\"M\n\021msg_dis_room" +
      "_info\022\020\n\010playerId\030\001 \001(\005\022\023\n\013agree_poses\030\002" +
      " \003(\005\022\021\n\texpire_tm\030\003 \001(\003\"\202\001\n\017packetc2l_re" +
      "ady\022N\n\tpacket_id\030\001 \001(\0162*.game_guanyuan_p" +
      "rotocols.e_server_msg_type:\017e_mst_c2l_re" +
      "ady\022\020\n\010seat_pos\030\002 \001(\005\022\r\n\005ready\030\003 \001(\010\"\220\001\n" +
      "\026packetl2c_ready_result\022U\n\tpacket_id\030\001 \001" +
      "(\0162*.game_guanyuan_protocols.e_server_ms" +
      "g_type:\026e_mst_l2c_ready_result\022\020\n\010seat_p",
      "os\030\002 \001(\005\022\r\n\005ready\030\003 \001(\010\"\342\001\n\024msg_circle_o" +
      "ver_info\022\014\n\004type\030\001 \001(\005\022\016\n\006hu_pos\030\002 \001(\005\022\020" +
      "\n\010last_pos\030\003 \001(\005\022\022\n\ncircle_num\030\004 \001(\005\022\017\n\007" +
      "hu_card\030\005 \001(\005\022\034\n\024next_circle_start_tm\030\006 " +
      "\001(\004\022\026\n\016is_last_circle\030\007 \001(\010\022?\n\006detail\030\010 " +
      "\003(\0132/.game_guanyuan_protocols.msg_circle" +
      "_over_detail\"\261\001\n\026msg_circle_over_detail\022" +
      "\013\n\003pos\030\001 \001(\005\022\021\n\tting_card\030\002 \001(\005\022\017\n\007hu_na" +
      "me\030\003 \001(\t\022\013\n\003fen\030\004 \001(\005\022\013\n\003hua\030\005 \001(\005\022\022\n\nha" +
      "nd_cards\030\006 \003(\005\022\022\n\nwall_cards\030\007 \003(\005\022\021\n\tou",
      "t_cards\030\010 \003(\005\022\021\n\thua_cards\030\t \003(\005\"\024\n\022msg_" +
      "game_over_info\"k\n\024packetc2l_leave_room\022S" +
      "\n\tpacket_id\030\001 \001(\0162*.game_guanyuan_protoc" +
      "ols.e_server_msg_type:\024e_mst_c2l_leave_r" +
      "oom\"\312\001\n\033packetl2c_leave_room_result\022Z\n\tp" +
      "acket_id\030\001 \001(\0162*.game_guanyuan_protocols" +
      ".e_server_msg_type:\033e_mst_l2c_leave_room" +
      "_result\022=\n\006result\030\002 \001(\0162\036.msg_type_def.e" +
      "_msg_result_def:\re_rmt_success\022\020\n\010seat_p" +
      "os\030\003 \001(\005\"\257\001\n\020packetc2l_action\022O\n\tpacket_",
      "id\030\001 \001(\0162*.game_guanyuan_protocols.e_ser" +
      "ver_msg_type:\020e_mst_c2l_action\022;\n\013action" +
      "_type\030\002 \001(\0162&.game_guanyuan_protocols.e_" +
      "action_type\022\r\n\005cards\030\003 \003(\005\"\222\002\n\027packetl2c" +
      "_action_result\022V\n\tpacket_id\030\001 \001(\0162*.game" +
      "_guanyuan_protocols.e_server_msg_type:\027e" +
      "_mst_l2c_action_result\022=\n\006result\030\002 \001(\0162\036" +
      ".msg_type_def.e_msg_result_def:\re_rmt_su" +
      "ccess\022;\n\013action_type\030\003 \001(\0162&.game_guanyu" +
      "an_protocols.e_action_type\022\014\n\004card\030\004 \001(\005",
      "\022\025\n\rleft_card_num\030\005 \001(\005\"\226\001\n\rpacketc2l_gp" +
      "s\022L\n\tpacket_id\030\001 \001(\0162*.game_guanyuan_pro" +
      "tocols.e_server_msg_type:\re_mst_c2l_gps\022" +
      "7\n\010gps_info\030\002 \001(\0132%.game_guanyuan_protoc" +
      "ols.msg_gps_info\"\344\001\n\024packetl2c_gps_resul" +
      "t\022S\n\tpacket_id\030\001 \001(\0162*.game_guanyuan_pro" +
      "tocols.e_server_msg_type:\024e_mst_l2c_gps_" +
      "result\022=\n\006result\030\002 \001(\0162\036.msg_type_def.e_" +
      "msg_result_def:\re_rmt_success\0228\n\tgps_inf" +
      "os\030\003 \003(\0132%.game_guanyuan_protocols.msg_g",
      "ps_info\"[\n\014msg_gps_info\022\013\n\003lng\030\001 \001(\001\022\013\n\003" +
      "lat\030\002 \001(\001\022\016\n\006status\030\003 \001(\005\022\017\n\007address\030\004 \001" +
      "(\t\022\020\n\010seat_pos\030\005 \001(\005\"g\n\022packetc2l_dis_ro" +
      "om\022Q\n\tpacket_id\030\001 \001(\0162*.game_guanyuan_pr" +
      "otocols.e_server_msg_type:\022e_mst_c2l_dis" +
      "_room\"u\n\031packetc2l_dis_room_result\022X\n\tpa" +
      "cket_id\030\001 \001(\0162*.game_guanyuan_protocols." +
      "e_server_msg_type:\031e_mst_l2c_dis_room_re" +
      "sult\"\232\001\n\025msg_create_room_param\022\024\n\014circle" +
      "_count\030\001 \001(\005\022\021\n\tcost_type\030\002 \001(\005\022\022\n\nbase_",
      "score\030\003 \001(\005\022\017\n\007baseHua\030\004 \001(\005\022\020\n\010hua_type" +
      "\030\005 \001(\005\022\020\n\010bao_type\030\006 \001(\005\022\017\n\007hu_type\030\007 \001(" +
      "\005\"\203\001\n\027packetl2c_game_start_nt\022V\n\tpacket_" +
      "id\030\001 \001(\0162*.game_guanyuan_protocols.e_ser" +
      "ver_msg_type:\027e_mst_l2c_game_start_nt\022\020\n" +
      "\010start_tm\030\002 \001(\005\"\263\001\n\031packetl2c_circle_sta" +
      "rt_nt\022X\n\tpacket_id\030\001 \001(\0162*.game_guanyuan" +
      "_protocols.e_server_msg_type:\031e_mst_l2c_" +
      "circle_start_nt\022\020\n\010host_pos\030\002 \001(\005\022\022\n\ncir" +
      "cle_idx\030\003 \001(\005\022\026\n\016east_start_pos\030\004 \001(\005\"\212\001",
      "\n\021packetl2c_dice_nt\022P\n\tpacket_id\030\001 \001(\0162*" +
      ".game_guanyuan_protocols.e_server_msg_ty" +
      "pe:\021e_mst_l2c_dice_nt\022\020\n\010fire_pos\030\002 \001(\005\022" +
      "\021\n\tdice_list\030\003 \003(\005\"\225\001\n\026packetl2c_init_ca" +
      "rd_nt\022U\n\tpacket_id\030\001 \001(\0162*.game_guanyuan" +
      "_protocols.e_server_msg_type:\026e_mst_l2c_" +
      "init_card_nt\022\r\n\005cards\030\002 \003(\005\022\025\n\rleft_card" +
      "_num\030\003 \001(\005\"\252\001\n\027packetl2c_trun_index_nt\022V" +
      "\n\tpacket_id\030\001 \001(\0162*.game_guanyuan_protoc" +
      "ols.e_server_msg_type:\027e_mst_l2c_trun_in",
      "dex_nt\022\013\n\003pos\030\002 \001(\005\022\025\n\rleft_card_num\030\003 \001" +
      "(\005\022\023\n\013time_expire\030\004 \001(\005\"\267\001\n\033packetl2c_re" +
      "place_flower_nt\022Z\n\tpacket_id\030\001 \001(\0162*.gam" +
      "e_guanyuan_protocols.e_server_msg_type:\033" +
      "e_mst_l2c_replace_flower_nt\022\020\n\010seat_pos\030" +
      "\002 \001(\005\022\024\n\014flower_cards\030\003 \003(\005\022\024\n\014replace_c" +
      "ard\030\004 \001(\005\"\266\001\n\032packetl2c_player_action_nt" +
      "\022Y\n\tpacket_id\030\001 \001(\0162*.game_guanyuan_prot" +
      "ocols.e_server_msg_type:\032e_mst_l2c_playe" +
      "r_action_nt\022=\n\013action_type\030\002 \003(\0132(.game_",
      "guanyuan_protocols.msg_action_type\"c\n\017ms" +
      "g_action_type\022A\n\013action_type\030\001 \001(\0162,.gam" +
      "e_guanyuan_protocols.e_player_ation_type" +
      "\022\r\n\005cards\030\002 \003(\005\"\306\001\n\023packetl2c_action_nt\022" +
      "R\n\tpacket_id\030\001 \001(\0162*.game_guanyuan_proto" +
      "cols.e_server_msg_type:\023e_mst_l2c_action" +
      "_nt\022\020\n\010seat_pos\030\002 \001(\005\022\014\n\004card\030\003 \001(\005\022;\n\013a" +
      "ction_type\030\004 \001(\0162&.game_guanyuan_protoco" +
      "ls.e_action_type\"\274\001\n\024packetl2c_hu_info_n" +
      "t\022S\n\tpacket_id\030\001 \001(\0162*.game_guanyuan_pro",
      "tocols.e_server_msg_type:\024e_mst_l2c_hu_i" +
      "nfo_nt\022\016\n\006hu_pos\030\002 \001(\005\022\020\n\010fire_pos\030\003 \001(\005" +
      "\022\014\n\004card\030\004 \001(\005\022\017\n\007hu_type\030\005 \001(\005\022\016\n\006scroe" +
      "s\030\006 \003(\005\"\322\002\n\032packetl2c_circle_result_nt\022Y" +
      "\n\tpacket_id\030\001 \001(\0162*.game_guanyuan_protoc" +
      "ols.e_server_msg_type:\032e_mst_l2c_circle_" +
      "result_nt\022\017\n\007hu_type\030\002 \001(\005\022\016\n\006hu_pos\030\003 \001" +
      "(\005\022\020\n\010hued_pos\030\004 \001(\005\022\023\n\013circleN_idx\030\005 \001(" +
      "\005\022\034\n\024next_circle_start_tm\030\006 \001(\005\022\017\n\007hu_ca" +
      "rd\030\007 \001(\005\022\027\n\017best_pao_player\030\010 \001(\005\022I\n\016pla",
      "yers_result\030\t \003(\01321.game_guanyuan_protoc" +
      "ols.msg_player_circle_result\"\346\001\n\030msg_pla" +
      "yer_circle_result\022\022\n\nhide_cards\030\001 \003(\005\022\022\n" +
      "\ngang_cards\030\002 \003(\005\022\024\n\014angang_cards\030\003 \003(\005\022" +
      "\022\n\npeng_cards\030\004 \003(\005\022\024\n\014flower_cards\030\005 \003(" +
      "\005\022\r\n\005score\030\006 \001(\005\022\021\n\tting_card\030\007 \001(\005\022@\n\013d" +
      "etail_info\030\010 \003(\0132+.game_guanyuan_protoco" +
      "ls.msg_hu_detail_info\"=\n\022msg_hu_detail_i" +
      "nfo\022\r\n\005hu_id\030\001 \001(\005\022\013\n\003fen\030\002 \001(\005\022\013\n\003hua\030\003" +
      " \001(\005\"\272\001\n\036packetl2c_player_enter_game_nt\022",
      "]\n\tpacket_id\030\001 \001(\0162*.game_guanyuan_proto" +
      "cols.e_server_msg_type:\036e_mst_l2c_player" +
      "_enter_room_nt\0229\n\tuser_info\030\002 \001(\0132&.game" +
      "_guanyuan_protocols.msg_user_info\"\232\001\n\030pa" +
      "cketl2c_line_status_nt\022W\n\tpacket_id\030\001 \001(" +
      "\0162*.game_guanyuan_protocols.e_server_msg" +
      "_type:\030e_mst_l2c_line_status_nt\022\020\n\010seat_" +
      "pos\030\002 \001(\005\022\023\n\013line_status\030\003 \001(\005\";\n\021msg_ch" +
      "i_card_info\022\022\n\nstart_card\030\001 \001(\005\022\022\n\neated" +
      "_card\030\002 \001(\005*\332\001\n\re_action_type\022\021\n\re_actio",
      "n_skip\020\001\022\025\n\021e_action_out_card\020\002\022\025\n\021e_act" +
      "ion_eat_card\020\003\022\021\n\re_action_gang\020\004\022\021\n\re_a" +
      "ction_peng\020\005\022\021\n\re_action_ting\020\006\022\017\n\013e_act" +
      "ion_hu\020\007\022\022\n\016e_action_ready\020\010\022\024\n\020e_action" +
      "_unready\020\t\022\024\n\020e_action_mo_card\020\n*\266\001\n\023e_p" +
      "layer_ation_type\022\027\n\023e_player_ation_peng\020" +
      "\001\022\025\n\021e_player_ation_hu\020\002\022\027\n\023e_player_ati" +
      "on_ting\020\003\022\032\n\026e_player_ation_gang_an\020\004\022\034\n" +
      "\030e_player_ation_gang_wang\020\005\022\034\n\030e_player_" +
      "ation_gang_ming\020\006*|\n\022e_game_status_type\022",
      "\022\n\016e_game_waiting\020\001\022\020\n\014e_game_ready\020\002\022\022\n" +
      "\016e_game_gameing\020\003\022\026\n\022e_game_circle_over\020" +
      "\004\022\024\n\020e_game_game_over\020\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_game_guanyuan_protocols_packetc2l_check_state_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_game_guanyuan_protocols_packetc2l_check_state_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetc2l_check_state_descriptor,
              new java.lang.String[] { "PacketId", });
          internal_static_game_guanyuan_protocols_packetl2c_check_state_result_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_game_guanyuan_protocols_packetl2c_check_state_result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_check_state_result_descriptor,
              new java.lang.String[] { "PacketId", "Result", });
          internal_static_game_guanyuan_protocols_packetc2l_get_scene_info_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_game_guanyuan_protocols_packetc2l_get_scene_info_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetc2l_get_scene_info_descriptor,
              new java.lang.String[] { "PacketId", });
          internal_static_game_guanyuan_protocols_packetl2c_get_scene_info_result_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_game_guanyuan_protocols_packetl2c_get_scene_info_result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_get_scene_info_result_descriptor,
              new java.lang.String[] { "PacketId", "Result", "Status", "UserInfos", "BaseRoomRuleInfo", "GamingInfo", "DisRoomInfo", "CircleOverInfo", "GameOverInfo", });
          internal_static_game_guanyuan_protocols_msg_base_room_rule_info_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_game_guanyuan_protocols_msg_base_room_rule_info_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_msg_base_room_rule_info_descriptor,
              new java.lang.String[] { "CircleCount", "CardCost", "CostType", "BaseScore", "HuaType", "BaoType", "HuType", "RoomId", "CreatorId", "CreateTime", "BaseHua", });
          internal_static_game_guanyuan_protocols_msg_user_info_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_game_guanyuan_protocols_msg_user_info_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_msg_user_info_descriptor,
              new java.lang.String[] { "SeatPos", "PlayerId", "UserName", "Gold", "HeadIcon", "Sex", "Score", "LineStatus", });
          internal_static_game_guanyuan_protocols_msg_status_gaming_info_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_game_guanyuan_protocols_msg_status_gaming_info_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_msg_status_gaming_info_descriptor,
              new java.lang.String[] { "RoomInfo", "AngangCards", "HandHards", "HostPos", "ActivePos", "LeftCardNum", "LastOutCardPos", "LastOutCard", "CircleIdx", "MyPos", });
          internal_static_game_guanyuan_protocols_msg_room_info_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_game_guanyuan_protocols_msg_room_info_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_msg_room_info_descriptor,
              new java.lang.String[] { "HandCardNum", "WallCards", "GangCards", "AngangCardNum", "PengCards", "ChiCards", "FlowerCards", "HuCards", "JiaoTingCard", });
          internal_static_game_guanyuan_protocols_msg_dis_room_info_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_game_guanyuan_protocols_msg_dis_room_info_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_msg_dis_room_info_descriptor,
              new java.lang.String[] { "PlayerId", "AgreePoses", "ExpireTm", });
          internal_static_game_guanyuan_protocols_packetc2l_ready_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_game_guanyuan_protocols_packetc2l_ready_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetc2l_ready_descriptor,
              new java.lang.String[] { "PacketId", "SeatPos", "Ready", });
          internal_static_game_guanyuan_protocols_packetl2c_ready_result_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_game_guanyuan_protocols_packetl2c_ready_result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_ready_result_descriptor,
              new java.lang.String[] { "PacketId", "SeatPos", "Ready", });
          internal_static_game_guanyuan_protocols_msg_circle_over_info_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_game_guanyuan_protocols_msg_circle_over_info_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_msg_circle_over_info_descriptor,
              new java.lang.String[] { "Type", "HuPos", "LastPos", "CircleNum", "HuCard", "NextCircleStartTm", "IsLastCircle", "Detail", });
          internal_static_game_guanyuan_protocols_msg_circle_over_detail_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_game_guanyuan_protocols_msg_circle_over_detail_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_msg_circle_over_detail_descriptor,
              new java.lang.String[] { "Pos", "TingCard", "HuName", "Fen", "Hua", "HandCards", "WallCards", "OutCards", "HuaCards", });
          internal_static_game_guanyuan_protocols_msg_game_over_info_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_game_guanyuan_protocols_msg_game_over_info_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_msg_game_over_info_descriptor,
              new java.lang.String[] { });
          internal_static_game_guanyuan_protocols_packetc2l_leave_room_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_game_guanyuan_protocols_packetc2l_leave_room_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetc2l_leave_room_descriptor,
              new java.lang.String[] { "PacketId", });
          internal_static_game_guanyuan_protocols_packetl2c_leave_room_result_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_game_guanyuan_protocols_packetl2c_leave_room_result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_leave_room_result_descriptor,
              new java.lang.String[] { "PacketId", "Result", "SeatPos", });
          internal_static_game_guanyuan_protocols_packetc2l_action_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_game_guanyuan_protocols_packetc2l_action_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetc2l_action_descriptor,
              new java.lang.String[] { "PacketId", "ActionType", "Cards", });
          internal_static_game_guanyuan_protocols_packetl2c_action_result_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_game_guanyuan_protocols_packetl2c_action_result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_action_result_descriptor,
              new java.lang.String[] { "PacketId", "Result", "ActionType", "Card", "LeftCardNum", });
          internal_static_game_guanyuan_protocols_packetc2l_gps_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_game_guanyuan_protocols_packetc2l_gps_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetc2l_gps_descriptor,
              new java.lang.String[] { "PacketId", "GpsInfo", });
          internal_static_game_guanyuan_protocols_packetl2c_gps_result_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_game_guanyuan_protocols_packetl2c_gps_result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_gps_result_descriptor,
              new java.lang.String[] { "PacketId", "Result", "GpsInfos", });
          internal_static_game_guanyuan_protocols_msg_gps_info_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_game_guanyuan_protocols_msg_gps_info_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_msg_gps_info_descriptor,
              new java.lang.String[] { "Lng", "Lat", "Status", "Address", "SeatPos", });
          internal_static_game_guanyuan_protocols_packetc2l_dis_room_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_game_guanyuan_protocols_packetc2l_dis_room_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetc2l_dis_room_descriptor,
              new java.lang.String[] { "PacketId", });
          internal_static_game_guanyuan_protocols_packetc2l_dis_room_result_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_game_guanyuan_protocols_packetc2l_dis_room_result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetc2l_dis_room_result_descriptor,
              new java.lang.String[] { "PacketId", });
          internal_static_game_guanyuan_protocols_msg_create_room_param_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_game_guanyuan_protocols_msg_create_room_param_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_msg_create_room_param_descriptor,
              new java.lang.String[] { "CircleCount", "CostType", "BaseScore", "BaseHua", "HuaType", "BaoType", "HuType", });
          internal_static_game_guanyuan_protocols_packetl2c_game_start_nt_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_game_guanyuan_protocols_packetl2c_game_start_nt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_game_start_nt_descriptor,
              new java.lang.String[] { "PacketId", "StartTm", });
          internal_static_game_guanyuan_protocols_packetl2c_circle_start_nt_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_game_guanyuan_protocols_packetl2c_circle_start_nt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_circle_start_nt_descriptor,
              new java.lang.String[] { "PacketId", "HostPos", "CircleIdx", "EastStartPos", });
          internal_static_game_guanyuan_protocols_packetl2c_dice_nt_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_game_guanyuan_protocols_packetl2c_dice_nt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_dice_nt_descriptor,
              new java.lang.String[] { "PacketId", "FirePos", "DiceList", });
          internal_static_game_guanyuan_protocols_packetl2c_init_card_nt_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_game_guanyuan_protocols_packetl2c_init_card_nt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_init_card_nt_descriptor,
              new java.lang.String[] { "PacketId", "Cards", "LeftCardNum", });
          internal_static_game_guanyuan_protocols_packetl2c_trun_index_nt_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_game_guanyuan_protocols_packetl2c_trun_index_nt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_trun_index_nt_descriptor,
              new java.lang.String[] { "PacketId", "Pos", "LeftCardNum", "TimeExpire", });
          internal_static_game_guanyuan_protocols_packetl2c_replace_flower_nt_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_game_guanyuan_protocols_packetl2c_replace_flower_nt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_replace_flower_nt_descriptor,
              new java.lang.String[] { "PacketId", "SeatPos", "FlowerCards", "ReplaceCard", });
          internal_static_game_guanyuan_protocols_packetl2c_player_action_nt_descriptor =
            getDescriptor().getMessageTypes().get(30);
          internal_static_game_guanyuan_protocols_packetl2c_player_action_nt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_player_action_nt_descriptor,
              new java.lang.String[] { "PacketId", "ActionType", });
          internal_static_game_guanyuan_protocols_msg_action_type_descriptor =
            getDescriptor().getMessageTypes().get(31);
          internal_static_game_guanyuan_protocols_msg_action_type_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_msg_action_type_descriptor,
              new java.lang.String[] { "ActionType", "Cards", });
          internal_static_game_guanyuan_protocols_packetl2c_action_nt_descriptor =
            getDescriptor().getMessageTypes().get(32);
          internal_static_game_guanyuan_protocols_packetl2c_action_nt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_action_nt_descriptor,
              new java.lang.String[] { "PacketId", "SeatPos", "Card", "ActionType", });
          internal_static_game_guanyuan_protocols_packetl2c_hu_info_nt_descriptor =
            getDescriptor().getMessageTypes().get(33);
          internal_static_game_guanyuan_protocols_packetl2c_hu_info_nt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_hu_info_nt_descriptor,
              new java.lang.String[] { "PacketId", "HuPos", "FirePos", "Card", "HuType", "Scroes", });
          internal_static_game_guanyuan_protocols_packetl2c_circle_result_nt_descriptor =
            getDescriptor().getMessageTypes().get(34);
          internal_static_game_guanyuan_protocols_packetl2c_circle_result_nt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_circle_result_nt_descriptor,
              new java.lang.String[] { "PacketId", "HuType", "HuPos", "HuedPos", "CircleNIdx", "NextCircleStartTm", "HuCard", "BestPaoPlayer", "PlayersResult", });
          internal_static_game_guanyuan_protocols_msg_player_circle_result_descriptor =
            getDescriptor().getMessageTypes().get(35);
          internal_static_game_guanyuan_protocols_msg_player_circle_result_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_msg_player_circle_result_descriptor,
              new java.lang.String[] { "HideCards", "GangCards", "AngangCards", "PengCards", "FlowerCards", "Score", "TingCard", "DetailInfo", });
          internal_static_game_guanyuan_protocols_msg_hu_detail_info_descriptor =
            getDescriptor().getMessageTypes().get(36);
          internal_static_game_guanyuan_protocols_msg_hu_detail_info_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_msg_hu_detail_info_descriptor,
              new java.lang.String[] { "HuId", "Fen", "Hua", });
          internal_static_game_guanyuan_protocols_packetl2c_player_enter_game_nt_descriptor =
            getDescriptor().getMessageTypes().get(37);
          internal_static_game_guanyuan_protocols_packetl2c_player_enter_game_nt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_player_enter_game_nt_descriptor,
              new java.lang.String[] { "PacketId", "UserInfo", });
          internal_static_game_guanyuan_protocols_packetl2c_line_status_nt_descriptor =
            getDescriptor().getMessageTypes().get(38);
          internal_static_game_guanyuan_protocols_packetl2c_line_status_nt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_packetl2c_line_status_nt_descriptor,
              new java.lang.String[] { "PacketId", "SeatPos", "LineStatus", });
          internal_static_game_guanyuan_protocols_msg_chi_card_info_descriptor =
            getDescriptor().getMessageTypes().get(39);
          internal_static_game_guanyuan_protocols_msg_chi_card_info_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_game_guanyuan_protocols_msg_chi_card_info_descriptor,
              new java.lang.String[] { "StartCard", "EatedCard", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          game_guanyuan_protocols.GameGuanyuanDef.getDescriptor(),
          msg_type_def.MsgTypeDef.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
