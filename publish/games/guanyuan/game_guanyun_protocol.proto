package game_guanyuan_protocols;

import "game_guanyuan_def.proto"; 
import "msg_type_def.proto"; 

//房间信息    
message msg_room_info{
	optional int32 roomid = 1;		
}

//获得房间信息
message packetc2l_get_room_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_info];
}

//房间信息返回
message packetl2c_get_room_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_info_result];
	repeated msg_room_info room_list = 2;	
}

//进入房间
message packetc2l_enter_room {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_room];
	optional int32 roomid = 2;
}

//进入桌子返回
message packetl2c_enter_room_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_room_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
}

//牌路信息
message history_info {
	optional bool is_tie = 1;			//是否和
	optional bool is_player_win = 2;	//是否闲胜
	optional bool is_player_pair = 3;	//是否闲对
	optional bool is_banker_pair = 4;	//是否庄对
	optional bool is_banker_win = 5;	//是否庄胜
	optional int32 win_point = 6;			//胜者点数
}

//请求桌子内场景信息
message packetc2l_get_room_scene_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_scene_info];
}

//获得桌子内场景信息		//进入桌子跟断线重连情况下调用
message packetl2c_get_room_scene_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_scene_info];
	optional int32 room_id = 2;
	optional e_game_state room_state = 3;
	optional int32 cd_time = 4;
	repeated msg_betinfo bet_info_list = 5;
	optional int32 remain_card_count = 6;
	optional int32 banker_continue_count = 7;
	repeated history_info history_list = 8;
	optional player_info banker_info = 9;
	optional int64 banker_win_gold = 10;
	optional bool is_can_rob_banker = 11;
	repeated int64 self_bet_golds = 12;	
	optional int64 self_golds = 13;	
}

//离开桌子
message packetc2l_leave_room {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];
}

//离开桌子返回
message packetl2c_leave_room_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
	optional int64 player_gold = 3;
}

//下注
message packetc2l_add_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_add_bet];
	optional int32 bet_index = 2;
	optional int32 bet_count = 3;
}

//下注返回
message packetl2c_add_bet_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_add_bet];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail ];
	optional int32 bet_index = 3;
	optional int32 bet_count = 4;
}

//续压
message packetc2l_repeat_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_repeat_bet];
}

//续压返回
message packetl2c_repeat_bet_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_repeat_bet];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail ];
}

//清零
message packetc2l_clear_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_clear_bet];
}

//清零返回
message packetl2c_clear_bet_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_clear_bet];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success ];
}

//申请上庄
message packetc2l_ask_for_banker {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_for_banker];
}

//申请上庄返回
message packetl2c_ask_for_banker_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_for_banker];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success ];
}

//申请离开上庄列表
message packetc2l_leave_list_banker {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_list_banker];
}

//申请离开上庄列表返回
message packetl2c_leave_list_banker_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_list_banker];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success ];
}


//下庄
message packetc2l_leave_banker {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_banker];
}

//下庄返回
message packetl2c_leave_banker_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_banker];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success ];
}

//抢庄
message packetc2l_ask_for_first_banker {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_first_for_banker];
}

//抢庄返回
message packetl2c_ask_for_first_banker_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_first_for_banker];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success ];
}

//玩家信息
message player_info {
	optional int32 player_id = 1;				//玩家ID
	optional string player_nickname = 2;		//玩家昵称
	optional int32 player_head_frame = 3;		//头像框
	optional string player_head_custom = 4;		//玩家头像
	optional int64 player_gold = 5;				//玩家金币
	optional int32 player_sex = 6;				// 玩家性别	
	optional int32 player_vip_lv = 7;			// Vip等级
}

//请求玩家列表
message packetc2l_ask_for_player_list {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_player_list];
}

//请求玩家列表返回
message packetl2c_ask_for_player_list_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_player_list];
	repeated player_info player_list = 2;
}

//请求上庄列表
message packetc2l_ask_for_banker_list {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_banker_list];
}

//请求上庄列表返回
message packetl2c_ask_for_banker_list_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_banker_list];
	repeated player_info banker_list = 2;
}

//请求牌路
message packetc2l_ask_for_history_list {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_history_list];
}

//请求牌路返回
message packetl2c_ask_for_history_list_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_history_list];
	repeated history_info history_list = 2;
}

//通知开始押注
message packetl2c_bc_begin_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_begin_bet];
	optional bool is_can_rob_banker = 2;
}

//牌数据
message msg_card_info{
	optional e_card_flower card_flower = 1;
	optional int32 card_point = 2;
}

//参与开奖玩家
message msg_player_award {
	optional int32 player_id = 1;	//玩家ID
	optional string name = 2;		//昵称
	optional int64 gold = 3;		//输赢金币
	repeated int64 other_win = 4;		//输赢金币
}

//通知开奖
message packetl2c_bc_begin_award {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_begin_award];
	repeated bool result_list = 2;
	repeated msg_card_info player_card = 3;
	repeated msg_card_info banker_card = 4;
	repeated msg_player_award player_list = 5;
	optional int64 banker_win_gold = 6;
	optional int64 banker_gold_count = 7;
	optional bool is_refresh_history = 8;
	optional int32 cd_time = 9;
}

message msg_master_bets {
	optional int32 player_id = 1;
	optional int64 player_bets = 2; 
}

message msg_betinfo {
	optional int64 bet_golds = 1; 
	optional int64 max_bet_count = 2;
	repeated msg_master_bets master_bets = 3; 
}

//通知所有玩家下注信息
message packetl2c_bc_total_bet_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_total_bet_info];
	repeated msg_betinfo bets = 2;
}

//通知抢庄信息
message packetl2c_bc_rob_banker_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_rob_banker_info];
	optional int32 player_id = 2;
	optional int32 pay_count = 3;
}

//通知更换庄家
message packetl2c_bc_change_banker {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_change_banker];
	optional player_info banker_info = 2;
	optional bool is_rob = 3;
	optional int32 old_banker_id = 4;
	optional int32 system_draw_water = 5;
}

//检测游戏状态		//重连之后判断是否在桌子中
message packetc2l_check_state {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
}

//检测状态
message packetl2c_check_state_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
	optional bool is_intable = 2 [default = false];//是否在桌子中
}

//GM
message packetc2l_gm {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm];
	optional int32 gm_max = 2;
}

message packetl2c_attention_needLeave {
	optional e_server_msg_type packet_id = 1 [default = e_mst_attention_needLeave];
}

//玩家信息
message msg_player_info{
	optional int32 player_id = 1;			//玩家ID
	optional string player_name = 2;		//玩家昵称
	optional int32 head_frame = 3;			//头像框
	optional string head_custom = 4;		//玩家头像
	optional int64 player_gold = 5;			//玩家金币
	optional int32 player_sex = 6;			// 玩家性别	
	optional int32 vip_level = 7;			// Vip等级
	
	optional int32 win_count = 8;			// 获胜数
	optional int32 bets = 9;				// 下注数
	optional int32 play_cnt = 10;			// 局数
	
	repeated int32 other_bets = 11;			// 5个区域 下注
	repeated int32 other_win = 12;			// 5个区域 赢
}

//请求玩家列表
message packetc2l_ask_playerlist {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_playerlist];
}

//玩家列表结果
message packetl2c_playerlist_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_playerlist_result];
	repeated msg_player_info player_infos = 2;
}

//调试
message packetl2c_debug {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_debug];
	optional int32 kill_cnt = 2 [default = 0];
	optional int32 kill_type = 3 [default = 0];  //1:定制 2:通杀 3和 4闲 5闲对 6庄对 7庄
	repeated int32 custom_cards = 4;//定制的数据 不支持
}

message packetl2c_debug_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_debug_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];	
}

message msg_player_betinfo {
	optional int32 player_id = 1;
	optional string player_name = 2;
	repeated int32 bet_gold = 3; 
	optional int64 player_gold = 4;	
}

message packetl2c_notify_sceneinfo {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_notify_sceneinfo];
	optional int32 main_id = 2;
	optional int32 banker_type = 3;//庄家类型 1系统小庄 2 机器人  3 玩家
	optional string banker_name = 4;
	repeated msg_player_betinfo player_betinfos = 5;
	optional int64 earn_gold = 6;
	optional int64 stock_gold = 7;
	optional int64 banker_gold = 8;    
	optional int32 count_down = 9;	
	optional int32 retain_cnt = 10;	
}

message msg_yuan_room_rule
{
	optional int32 hua_type 						= 1;//0:四花,	1:20花	2:28花
    optional int32 bao_type       				= 2;    // 0:1包1     1：一包三
    optional int32 hu_type						= 3;		//0:截胡  1：一炮多胡
}

//---------------------------推送消息----------------------------------------
message packetl2c_circle_start_nt {
	optional e_server_msg_type packet_id 			= 1 [default = e_mst_l2c_game_start_nt];
	optional int32 host_pos 						= 2;				//庄家位置
	optional int32 circle_count  					= 3;    //第几圈
    optional int32 circle_info   					= 4;    //预留，局的方向；  //东风位置
	optional int32 curMul							= 5;	//当前局是否是比下胡	
}

message packetl2c_card_send_nt {
	optional e_server_msg_type packet_id 			= 1 [default = e_mst_l2c_game_start_nt]; 
	repeated int32 cards 							= 2;				//每人的牌的集合
	optional int32 leftCard 						= 3;				//余下的牌
}

message packetl2c_action_nt {
	optional e_server_msg_type packet_id 			= 1 [default = e_mst_l2c_game_start_nt];
	optional int32 pos 								= 2;		//触发的位置
	repeated int32 action_list						= 3;		//动作类型，如果是空，则是等待命令
	optional int32 left_card_count					= 4;		//当前余下的牌的数量
	repeated int32 wan_gan_list						= 5;		//当前可以弯杠的列表
	repeated int32 an_gan_list						= 6;		//当前可以暗杠的列表
	optional int32 time_expire						= 7;		//此命令过期时间戳
}


message packetl2c_dice_nt {
	optional int32 pos 								=	1;				//哪家丢的色子
	repeated int32 dice_list						=	2;				//当前色子的值，
}
