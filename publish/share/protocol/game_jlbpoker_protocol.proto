package game_jlbpoker_protocols;

import "game_jlbpoker_def.proto"; 
import "msg_type_def.proto"; 

//牌数据
message msg_card_info{
	optional e_flower_type card_flower = 1;
	optional int32 card_point = 2;
}

//玩家信息
message player_info {
	optional int32 player_id = 1;				//玩家ID  0:庄家
	optional string player_nickname = 2;		//玩家昵称
	optional int32 player_head_frame = 3;		//头像框
	optional string player_head_custom = 4;		//玩家头像
	optional int64 player_golds = 5;				//玩家金币
	optional int32 player_sex = 6;				// 玩家性别	
	optional int32 player_vip_lv = 7;			// Vip等级
	
	//游戏数据
	optional int32 base_golds = 8;				// 底注
	optional int32 add_status = 9 ;				//1:加注  2:弃牌 
	
	//开奖数据
	repeated msg_card_info cards = 10;		//5张牌 庄家1/5张牌
	optional e_card_type card_type = 11;	//牌型
	optional int64 award_golds = 12;		//自己最终输赢金额 （已除去抽水）
	
	optional int32 seat_id = 13;		//座位号 0,1,2
}

//进入房间
message packetc2l_enter_room {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_room];
	optional int32 roomid = 2;
}

//进入桌子返回
message packetl2c_enter_room_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_room_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
}

//离开桌子
message packetc2l_leave_room {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];
}

//离开桌子返回
message packetl2c_leave_room_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
	optional int64 player_golds = 3;
}

//检测游戏状态		//重连之后判断是否在桌子中
message packetc2l_check_state {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
}

//检测状态
message packetl2c_check_state_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
	optional bool is_intable = 2 [default = false];//是否在桌子中
}

//请求桌子内场景信息
message packetc2l_ask_room_scene_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_room_scene_info];
}

//获得桌子内场景信息		//进入桌子跟断线重连情况下调用
message packetl2c_ask_room_scene_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_room_scene_info_result];
	optional int32 room_id = 2;
	optional e_game_state room_state = 3;
	optional int32 cd_time = 4;
}

//请求下注
message packetc2l_ask_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_bet];
	optional int64 bet_count = 2;
}

//请求下注返回
message packetl2c_ask_bet_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_bet];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail ];
	optional int64 bet_count = 3;
}

//请求加注
message packetc2l_ask_add_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_add_bet];
	optional int32 add_status = 2 ;				//1:加注  2:弃牌 
}

//请求加注返回
message packetl2c_ask_add_bet_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_add_bet];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail ];
}

//请求发牌
message packetc2l_ask_deal_card {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_deal_card];
}

//请求发牌返回
message packetl2c_ask_deal_card_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_deal_card];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail ];
}

//通知游戏状态变更
message packetl2c_bc_game_state {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_game_state];
	optional e_game_state room_state = 2;
	optional int32 cd_time = 3;	
}

//通知玩家信息
message packetl2c_bc_player_data {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_player_data];
	repeated player_info player_list = 2;	//玩家信息
}

//GM
message packetc2l_gm {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm];
	optional int32 gm_max = 2;
}

//调试
message packetl2c_debug {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_debug];
	optional int32 kill_cnt = 2 [default = 0]; //不支持
	optional int32 kill_type = 3 [default = 0];  //1:定制 2:通杀
	repeated int32 custom_cards = 4;//定制的数据 不支持
}

message packetl2c_debug_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_debug_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];	
}

message packetl2c_notify_sceneinfo {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_notify_sceneinfo];
	optional int32 main_id = 2;
	repeated player_info player_list = 3;	//玩家信息
	optional int64 earn_gold = 4;
	optional int64 stock_gold = 5;
	optional int32 count_down = 6;	//一直返回0
}
