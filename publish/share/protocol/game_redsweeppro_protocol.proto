package game_redsweeppro_protocols;

import "game_redsweeppro_def.proto"; 
import "msg_type_def.proto"; 

//玩家信息
message player_info {
	optional int32 player_id = 1;				//玩家ID
	optional string player_nickname = 2;		//玩家昵称
	optional int32 player_head_frame = 3;		//头像框
	optional string player_head_custom = 4;		//玩家头像
	optional int64 player_golds = 5;				//玩家金币
	optional int32 player_sex = 6;				// 玩家性别	
	optional int32 player_vip_lv = 7;			// Vip等级
	
	optional int64 distribute_golds = 8;		// 本次进入房间起发红包金额
	optional int64 grab_golds = 9;				// 本次进入房间抢红包金额
	optional int32 avert_mine_times = 10;		// 20局避雷局数
	optional int32 grab_red_count = 11;			// 本次进入房间抢红包数量
	
	//开奖数据
	optional int64 red_golds = 12;	//开的红包金额
	optional int64 award_golds = 13;	//自己最终输赢金额 （不包含彩金，已除去抽水）
}

//红包信息
message red_info {
	optional e_game_state game_state = 1;
	optional int32 cd_time = 2;
	repeated player_info red_player_list = 3;	//参与抢红包的玩家列表 按参与先后顺序 结算阶段为空
	optional player_info banker_info = 4;	//庄家
	optional int64 red_golds = 5;	//红包金额
	optional int32 red_type = 6;	//红包类型  1:10个红包 2:7个红包 3:5个红包
	optional int32 mine_id = 7;	//雷号
	optional int32 red_id = 8;	//红包id 0~4
}

//进入房间
message packetc2l_enter_room {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_room];
	optional int32 roomid = 2;
}

//进入桌子返回
message packetl2c_enter_room_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_room_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
}

//离开桌子
message packetc2l_leave_room {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];
}

//离开桌子返回
message packetl2c_leave_room_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
	optional int64 player_golds = 3;
}

//检测游戏状态		//重连之后判断是否在桌子中
message packetc2l_check_state {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
}

//检测状态
message packetl2c_check_state_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
	optional bool is_intable = 2 [default = false];//是否在桌子中
}

//请求桌子内场景信息
message packetc2l_ask_room_scene_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_room_scene_info];
}

//获得桌子内场景信息		//进入桌子跟断线重连情况下调用
message packetl2c_ask_room_scene_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_room_scene_info_result];
	optional int32 room_id = 2;
	repeated red_info reds_info = 3;        //所有红包的信息
	optional int64 red_total_golds = 4 ;	//已发红包金额 
	optional int64 demo_golds = 5 ;			//试玩金额（除去已发红包）
}

//请求玩家列表
message packetc2l_ask_for_player_list {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_player_list];
}

//请求玩家列表返回
message packetl2c_ask_for_player_list_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_player_list_result];
	repeated player_info player_list = 2;    //根据数据前端自己排序
}

//请求自己历史信息
message packetc2l_ask_for_my_history {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_my_history];
}

//收红包信息
message history_grab_info {
	optional string nickname = 1;	//庄家昵称
	optional int64 win_gold = 2;	//自己输赢金额 （红包+中雷）
	optional int32 status = 3;		//1:中雷 10:最佳 11:中雷+最佳
}

//发红包信息
message history_distribute_info {
	optional int32 red_type = 1;	//红包-类型 1:10个红包 2:7个红包 3:5个红包
	optional int64 win_gold = 2;	//自己输赢金额 （红包+中雷）
	optional int32 status = 3;		//中雷个数
}

//请求自己历史信息返回 包含所有场次
message packetl2c_ask_for_my_history_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_my_history_result];
	optional int64 grab_red_golds = 2;	//抢到的红包的数值 包括触雷的红包
	optional int32 grab_red_times = 3;  //抢红包次数
	optional int32 grab_red_best_times = 4;  //手气最佳次数
	optional int32 hit_mine_times = 5;  //中雷次数
	repeated history_grab_info grab_info = 6;    //抢红包最新50条
	
	optional int64 distribute_red_golds = 7;	//发出的红包的总数值
	optional int32 distribute_red_times = 8;  //发红包次数
	optional int32 other_hit_mine_times = 9;  //他人中雷次数
	repeated history_distribute_info distribute_info = 10;    //发红包最新50条
}

//请求抢红包
message packetc2l_ask_grab_red {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_grab_red];
	optional int32 red_id = 2;	//红包id 0~4
}

//请求抢红包返回
message packetl2c_ask_grab_red_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_grab_red_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail ];
	optional int32 red_id = 3;	//红包id 0~4
}

//请求发红包
message packetc2l_ask_distribute_red {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_distribute_red];
	optional int64 red_gold = 2 ;				//红包金额 
	optional int32 red_num = 3 [default = 1];	//次数 
	optional int32 mine_id = 4 [default = -1];	//雷号 -1:随机
	optional int32 red_type = 5;	//红包类型 1:10个红包 2:7个红包 3:5个红包
}

//请求发红包返回
message packetl2c_ask_distribute_red_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_distribute_red_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail ];
	optional int64 red_total_golds = 3 ;	//发红包花费金额 
	optional int64 red_gold = 4 ;			//红包金额 
	optional int32 red_num = 5;				//次数 
	optional int32 mine_id = 6;				//雷号 -1:随机
	optional int32 red_type = 7;			//红包类型 1:10个红包 2:7个红包 3:5个红包
}

//请求取消发红包
message packetc2l_ask_cancel_red {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_cancel_red];
}

//请求取消发红包返回
message packetl2c_ask_cancel_red_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_cancel_red_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail ];
	optional int64 refund_red_golds = 3 ;				//取消发红包返还金额 
}

//通知开始抢红包
message packetl2c_bc_begin_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_begin_bet];
	optional red_info red_begin_info = 2;
}

//通知玩家抢红包
message packetl2c_bc_bet_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_bet_info];
	optional int32 remain_reds = 2;	//剩余红包数
	optional int32 player_id = 3;	//玩家ID
	optional int32 red_id = 4;		//红包编号 0~4
	optional string player_nickname = 5;	//玩家昵称
}

//通知开奖
message packetl2c_bc_begin_award {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_begin_award];
	optional red_info red_award_info = 2;
}

//更新庄家列表
message packetl2c_bc_banker_list {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_banker_list];
	repeated string nickname = 2;	//庄家昵称
	repeated int64 win_golds = 3;	//红包金额
	repeated int32 player_id = 4;	//庄家id
}

//GM
message packetc2l_gm {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm];
	optional int32 gm_max = 2;
}

//调试
message packetl2c_debug {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_debug];
	optional int32 kill_cnt = 2 [default = 0]; //不支持
	optional int32 kill_type = 3 [default = 0];  //1:定制 2:通杀
	repeated int32 custom_cards = 4;//定制的数据 不支持
}

message packetl2c_debug_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_debug_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];	
}

message msg_player_betinfo {
	optional int32 player_id = 1;
	optional string player_name = 2;
	repeated int32 bet_gold = 3; //2个数据，1：是否抢红包  2：tableID 
	optional int64 player_gold = 4;	
}

message packetl2c_notify_sceneinfo {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_notify_sceneinfo];
	optional int32 main_id = 2;
	optional int32 banker_type = 3;//庄家类型 1系统小庄 2 机器人  3 玩家
	optional string banker_name = 4;
	repeated msg_player_betinfo player_betinfos = 5;
	optional int64 earn_gold = 6;
	optional int64 stock_gold = 7;
	optional int64 banker_gold = 8;    
	optional int32 count_down = 9;	//一直返回0
	optional int32 retain_cnt = 10;	//一直返回0
}
