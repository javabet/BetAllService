package game_oneyuanfortune_protocols;

import "game_oneyuanfortune_def.proto"; 
import "msg_type_def.proto"; 

//房间信息    
message msg_room_info{
	optional int32 roomid = 1;		
}

message msg_bet_info
{
	optional int32 player_id = 1;	//玩家ID
	optional int64 bet_gold = 2;	//下注金额
	optional int32 rate = 3;		//中奖概率,万分比 1等于1/10000
	optional int32 bet_count = 4;	//下注次数
}

message msg_bet_info2
{
	optional int32 player_id = 1;	//玩家ID
	optional int64 bet_gold = 2;	//下注金额
	optional int32 rate = 3;		//中奖概率,万分比 1等于1/10000
	optional int32 bet_count = 4;	//下注次数
	optional int64 gold = 5;		//携带金币
	optional int32 table_id = 6;	//桌子id
}

//获得房间信息
message packetc2l_get_room_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_info];
}

//房间信息返回
message packetl2c_get_room_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_info_result];
	repeated msg_room_info room_list = 2;	
}

//进入房间
message packetc2l_enter_room {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_room];
	optional int32 roomid = 2;
}

//进入桌子返回
message packetl2c_enter_room_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_room_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
}

//牌路信息
message history_info {
	optional string nickname = 1;	//玩家昵称
	optional int32 rate = 2;		//中奖概率
	optional int64 gold = 3;		//金额
	optional int32 viplevel = 4;	//vip等级
	optional int32 player_id = 5;	//玩家ID
	optional string player_head = 6;//玩家头像
	optional int32 player_head_frame = 7;//头像框
}

//请求桌子内场景信息
message packetc2l_get_room_scene_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_scene_info];
}

//获得桌子内场景信息		//进入桌子跟断线重连情况下调用
message packetl2c_get_room_scene_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_scene_info];
	optional int32 room_id = 2;
	optional e_game_state room_state = 3;
	optional int32 cd_time = 4;
	repeated msg_bet_info bet_info_list = 5;
	optional int32 remain_bet_count = 6;	//剩余投注次数
	optional int32 self_remain_count = 7;	//自己剩余的投注次数
	repeated player_info player_list = 8;	//参与下注的玩家列表
	optional bool timing = 9 [default = false];	//下注正在计时
}

//离开桌子
message packetc2l_leave_room {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];
}

//离开桌子返回
message packetl2c_leave_room_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
	optional int64 player_gold = 3;
}

//下注
message packetc2l_add_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_add_bet];
	optional int32 bet_count = 2;
}

//下注返回
message packetl2c_add_bet_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_add_bet];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail ];
	optional int32 bet_count = 3;
}


//玩家信息
message player_info {
	optional int32 player_id = 1;				//玩家ID
	optional string player_nickname = 2;		//玩家昵称
	optional int32 player_head_frame = 3;		//头像框
	optional string player_head_custom = 4;		//玩家头像
	optional int64 player_gold = 5;				//玩家金币
	optional int32 player_sex = 6;				// 玩家性别	
	optional int32 player_vip_lv = 7;			// Vip等级
}

//请求玩家列表
message packetc2l_ask_for_player_list {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_player_list];
}

//请求玩家列表返回
message packetl2c_ask_for_player_list_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_player_list];
	repeated player_info player_list = 2;
}

//请求牌路
message packetc2l_ask_for_history_list {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_history_list];
}

//请求牌路返回
message packetl2c_ask_for_history_list_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_history_list];
	repeated history_info history_list = 2;
	optional history_info lucky_player = 3;
}

//通知开始押注
message packetl2c_bc_begin_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_begin_bet];
}

//通知下注计时开始
message packetl2c_timing_starts
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_l2c_timing_starts];
	optional int32 cd_time = 2;
}

//通知开奖
message packetl2c_bc_begin_award {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_begin_award];
	optional int32 winner_id = 2;			//获奖玩家ID
	optional int64 total_bet = 3;			//总下注
	repeated player_info player_list = 4;	//参与开奖的玩家
	optional int32 cd_time = 5;
	optional int32 random_seed = 6;			//随机种子,用来生成摇奖列表
	optional int32 reward_gold = 7;			//获胜金额,扣除抽水
}

//通知玩家下注
message packetl2c_bc_bet_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_bet_info];
	optional msg_bet_info bet_info_list = 2;
	optional player_info pinfo = 3;
}

//检测游戏状态		//重连之后判断是否在桌子中
message packetc2l_check_state {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
}

//检测状态
message packetl2c_check_state_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
	optional bool is_intable = 2 [default = false];//是否在桌子中
}

//GM
message packetc2l_gm {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm];
	optional int32 gm_max = 2;
}

//调试
message packetl2c_debug {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_debug];
	optional int32 kill_cnt = 2 [default = 0]; //不支持
	optional int32 kill_type = 3 [default = 0];  //1:定制 2:通杀
	repeated int32 custom_cards = 4;//定制的数据 不支持
}

message packetl2c_debug_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_debug_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];	
}

message msg_player_betinfo {
	optional int32 player_id = 1;
	optional string player_name = 2;
	repeated int32 bet_gold = 3; //4个数据，1：下注金额  2：tableID 3:胜率 4：剩余下注次数
	optional int64 player_gold = 4;	
}

message packetl2c_notify_sceneinfo {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_notify_sceneinfo];
	optional int32 main_id = 2;
	optional int32 banker_type = 3;//庄家类型 1系统小庄 2 机器人  3 玩家
	optional string banker_name = 4;
	repeated msg_player_betinfo player_betinfos = 5;
	optional int64 earn_gold = 6;
	optional int64 stock_gold = 7;
	optional int64 banker_gold = 8;    
	optional int32 count_down = 9;	//一直返回0
	optional int32 retain_cnt = 10;	//一直返回0
}
