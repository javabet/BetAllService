package fishpark_protocols;

import "fishpark_def.proto"; 
import "msg_type_def.proto";

//游戏逻辑
//获取场景信息
message packetc2l_get_scene_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];
}

//房间信息
message msg_scene_info{
	optional int32 sceneid = 1;
	optional int32 roomid = 2;
	repeated msg_seat_info seat_info = 3;
}

message msg_seat_info
{
	optional int32 seat_index = 1;
	optional int32 player_id = 2;
	optional string nickname = 3;
	optional int32 player_gold = 4;
	optional int32 turret_rate = 5;

	optional int32 turret_id = 6;

	optional int32 photo_frame = 7;			//外框id
	optional string icon_custom = 8;	//自定义头像
	optional int32 sex = 9;			// 性别
	optional int32 vip = 10;

	optional int32 player_ticket = 11;
}

//返回场景信息
message packetl2c_get_scene_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_scene_info_result];
	optional msg_scene_info scene_info = 2;
}

//请求改变座位
message packetc2l_change_seat {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_change_seat];
	optional int32 player_id = 2;
	optional int32 seat_index = 3;
}

//请求改变座位
message packetc2l_change_rate {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_change_rate];
	optional int32 turret_rate = 2;
}

//请求改变座位结果
message packetl2c_change_seat_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_change_seat_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
}

//广播有玩家进入
message packetl2c_bc_enter_seat {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_enter_seat];
	optional msg_seat_info seat_info = 2;
}

//广播有玩家离开
message packetl2c_bc_leave_seat {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_leave_seat];
	optional int32 player_id = 2;
}

//机器人进入
message packetl2c_robot_enter {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_robot_enter];
	optional msg_seat_info seat_info = 2;
	optional int32 scene_id = 3;
}

//机器人离开
message packetl2c_robot_leave {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_robot_leave];
	optional int32 player_id = 2;
}

//广播玩家倍率修改
message packetl2c_bc_change_rate {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_change_rate];
	optional int32 player_id = 2;
	optional int32 turret_rate = 3;
}

//广播玩家金币变更(任务,充值等)
message packetl2c_bc_change_attr {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_change_attr];
	optional int32 player_id = 2;
	optional int32 change_gold = 3;
	optional int32 change_vip = 4;
	optional int32 change_ticket = 5;
}

message msg_fish_info
{
	optional int32 id = 1;
	optional int32 fish_id = 2;
	optional int32 route_id = 3;
	optional bool is_camouflage = 4 [default = false];
}

message packetl2c_bc_create_fish
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_create_fish];
	optional msg_fish_info fish_info = 2;
}

//鱼阵
message packetl2c_bc_create_generator
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_create_generator];
	optional int32 generator_id = 2;
	optional int32 start_id = 3;
	optional int32 route_id = 4 [default = 0];
	optional bool is_red = 5 [default = false];
	optional int32 pos_x = 6;
	optional int32 pos_y = 7;
	optional bool is_flash = 8 [default = false];
}

//请求开炮
message packetc2l_manual_fire {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_manual_fire];
	optional int32 bullet_id = 2;
	optional int32 bullet_angle = 3;
	optional int32 bullet_rate = 4;
}

//请求开炮
message packetl2c_bc_manual_fire {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_manual_fire];
	optional int32 bullet_id = 2;
	optional int32 player_id = 3;
	optional int32 bullet_angle = 4;
}

//击中鱼
message packetc2l_hit_fish {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_hit_fish];
	//optional int32 player_id = 2;
	optional int32 bullet_id = 3;
	optional int32 fish_id = 4;
}

//激光击中鱼
message packetc2l_hit_fishs {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_hit_fishs];
	optional int32 hit_type = 2;		//击中类型,1激光,2火龙珠,3渔网,4冻结,5闪电链
	optional int32 bullet_id = 3;
	repeated int32 fish_ids = 4;
}

//鱼死亡
message packetl2c_bc_fish_die {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_fish_die];
	optional int32 fish_id = 2;
	optional int32 kill_id = 3;
	optional int32 base_score = 4;
	optional int32 add_score = 5 [default = 0];
	optional int32 ticket = 6 [default = 0];
	optional bool getstar = 7 [default = false];
}

//火龙珠死亡
message packetl2c_bc_specialfish_die {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_specialfish_die];
	optional int32 fish_id = 2;
	optional int32 player_id = 3;
	optional int32 bullet_id = 4;
	optional int32 base_score = 5;
	optional int32 add_score = 6 [default = 0];
	optional int32 ticket = 7 [default = 0];
	optional bool getstar = 8 [default = false];
}

//大群鱼死亡
message packetl2c_bc_fishs_die {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_fishs_die];
	optional int32 player_id = 2;	
	optional int32 die_type = 3;	//死亡类型,1红鱼,2全屏炸弹
	repeated int32 die_params = 4;	//死亡参数,1.红鱼ID 位置X 位置Y 2,全屏炸弹ID 位置X 位置Y
	optional int32 total_score = 5;
	optional int32 base_rate = 6;
	optional int32 add_rate = 7 [default = 0];
	optional int32 ticket = 8 [default = 0];
	optional bool getstar = 9 [default = false];
}

//刷水
message packetl2c_bc_change_scene {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_change_scene];
	optional int32 scene_id = 2;
	optional int32 large_fish_id = 3;
}

//广播定时
message packetl2c_bc_freeze {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_freeze];
	optional int32 freeze_Time = 2;
	optional bool is_show = 3;
}

//切换背景
message packetl2c_bc_change_scene_bg {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_change_scene_bg];
	optional int32 scene_id = 2;
}

//场景倒计时
message packetl2c_bc_scene_time {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_scene_time];
	optional int32 scene_time = 2;
}

//击中鱼
message packetl2c_bc_hit_fishs {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_hit_fishs];
	optional int32 player_id = 2;
	optional int32 hit_type = 3;		//1冰冻，2闪电链
	repeated int32 fish_ids = 4;
	repeated int32 params = 5;
}

//击中鱼
message packetl2c_bc_turret_rotate {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_turret_rotate];
	optional int32 player_id = 2;	
	optional int32 rotate_angle = 3;
}