package game_crocodile_protocols;

import "game_crocodile_def.proto"; 
import "msg_type_def.proto"; 

//房间信息
message msg_room_info{
	optional int32 roomid = 1;		
}

//获得房间信息
message packetc2l_get_room_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_info];
}

//房间信息返回
message packetl2c_get_room_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_info_result];
	repeated msg_room_info room_list = 2;	
}

//进入桌子
message packetc2l_join_table {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_join_table];
	optional int32 roomid = 2;
}

//进入桌子返回
message packetl2c_join_table_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_join_table_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
}

//请求桌子内场景信息
message packetc2l_get_table_scene_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_table_scene_info];
}

//获得桌子内场景信息		//进入桌子跟断线重连情况下调用
message packetl2c_get_table_scene_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_table_scene_info];
	optional e_game_state table_game_state = 4;
	optional int32 cd_time = 5;
	optional int32 rate_index = 6;
	repeated int32 history_list = 7;
	repeated int64 bet_info_list = 8;
	optional int32 room_id = 9;
}

//离开桌子
message packetc2l_leave_table {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_table];
}

//离开桌子返回
message packetl2c_leave_table_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_table_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
	optional int64 player_gold = 3;
}

//下注
message packetc2l_add_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_add_bet];
	optional int32 bet_index = 2;
	optional int32 bet_count = 3;
}

//下注返回
message packetl2c_add_bet_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_add_bet];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail ];
	optional int32 bet_index = 3;
	optional int32 bet_count = 4;
}

//续压
message packetc2l_repeat_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_repeat_bet];
}

//续压返回
message packetl2c_repeat_bet_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_repeat_bet];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail ];
}

//清零
message packetc2l_clear_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_clear_bet];
}

//清零返回
message packetl2c_clear_bet_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_clear_bet];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success ];
}

//玩家信息
message player_info {
	optional int32 player_id = 1;				//玩家ID
	optional string player_nickname = 2;		//玩家昵称
	optional int32 player_head_frame = 3;		//头像框
	optional string player_head_custom = 4;		//玩家头像
	optional int64 player_gold = 5;				//玩家金币
	optional int32 player_sex = 6;				// 玩家性别	
	optional int32 player_vip_lv = 7;			// Vip等级
}

//请求玩家列表
message packetc2l_ask_for_player_list {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_player_list];
}

//请求玩家列表返回
message packetl2c_ask_for_player_list_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_player_list];
	repeated player_info player_list = 2;
	optional int32 player_count = 3;
}

//通知开始押注
message packetl2c_bc_begin_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_begin_bet];
	optional int32 cd_time = 2;
	optional int32 rate_index = 3;
}

//通知开奖
message packetl2c_bc_begin_award {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_begin_award];
	optional e_award_type_def m_award_type = 2;
	repeated int32 m_award_param_list = 3;		//普通、人人有奖、彩金模式都是一个，射灯模式为多个
	optional int32 m_award_param = 4 [default = 0];		//彩金模式为彩金倍数
	optional int32 show_index = 5 [default = 1];		//表现方式的序号
	optional int64 win_gold = 6;
	optional int32 win_ticket = 7;
}

//通知所以玩家下注信息
message packetl2c_bc_total_bet_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_total_bet_info];
	repeated int64 bet_info_list = 2;
}

//检测游戏状态		//重连之后判断是否在桌子中
message packetc2l_check_state {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
}

//检测状态
message packetl2c_check_state_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
	optional bool is_intable = 2 [default = false];//是否在桌子中
}

//通知桌子内玩家收到礼物
message packetl2c_bc_accept_gift {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_accept_gift];
	optional int32 player_id = 2;
	optional int32 gift_id = 3;
}

//换桌
message packetc2l_change_table {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_change_table];
}

//换桌返回
message packetl2c_change_table_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_change_table_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
}

//GM
message packetc2l_gm {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm];
	optional int32 gm_id = 2;
}

//test
message packetc2l_test {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_test];
	optional int32 test_count = 2;
}


//游戏控制
message packetc2l_game_control {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_game_control];

	optional int32 control = 2[default = 0]; //控制类型 0-11下注类型 12人人有奖 13射灯 14彩金
}

//debug信息
message packetl2c_bc_debuginfo {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_debuginfo];
	optional int32 player_id = 2;	
	optional int64 total_profit = 3[default = 0];		//抽水
	optional int64 total_stock = 4[default = 0];		//库存
    optional int64 total_Rate = 6[default = 0];		//抽水率

	optional string debug_infos = 5; //调试信息 lua
}


message msg_bet_info
{
	optional int32 bet_index = 1;
	optional int64 bet_count = 2;
}

message gm_msg_bet_info
{
	optional player_info player_info=1;
	repeated msg_bet_info bet_info=2;
}

//通知所有玩家下注信息
message packetl2c_notice_all_bet_info 
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_notice_gm_all_bet_info];
	repeated gm_msg_bet_info bet_info_list = 2;
}