package game_prizeClaw_protocols;

import "game_prizeClaw_def.proto"; 
import "msg_type_def.proto"; 


//请求玩家状态
message packetc2l_get_player_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_player_info];
}

//获得玩家状态		//进入房间跟断线重连情况下调用
message packetl2c_get_player_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_player_info];
	optional int32 game_state = 2;	//game_state
	optional int32 type = 3;		//投注类型
	optional int32 cd_time = 4;		//剩余时间
	optional int32 count = 5;		//剩余次数
	optional int32 catch_ret = 6;	//抓取结果
}

//开始游戏
message packetc21_req_start_game {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_req_start_game];
	optional int32 type = 2;		//房间ID
}

//开始游戏返回
message packet12c_req_start_game_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_req_start_game];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];	
	optional int32 type = 3;
}

//请求结束游戏
message packetc2l_req_leave_game {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_req_leave_game ];
}

//请求结束游戏返回
message packetl2c_req_leave_game_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_req_leave_game];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
}

//请求开始关卡
message packetc21_req_begin_pass {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_req_begin_pass];
}

//请求开始关卡返回
message packet12c_req_begin_pass_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_req_begin_pass];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
	optional int32 count = 3;			
}

//抓中娃娃
message packetc21_claw {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_claw];
	optional int32 item_id = 3;
}

//抓中娃娃返回
message packet12c_claw_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_claw];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
	optional int32 count = 3;		
}

//没抓中娃娃
message packetc21_miss {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_miss];
}

//没抓中返回
message packet12c_miss_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_12c_miss];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];	
	optional int32 count = 3;
}