package game_5dragons_protocols;

import "game_5dragons_def.proto"; 

//是否在游戏
message packetc2l_check_state
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
}

//是否在游戏 - 回执
message packetc2l_check_state_result
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];

	//大于0表示正在游戏中   0:不在游戏
	optional int32 room_id = 2 ; 
	//玩家等级
	optional int32 player_lv = 3;
	//玩家经验
	optional int32 player_exp = 4;
}

//购买等级
message packetc2l_buy_lv
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_buy_lv];
	//直接买到多少级
	optional int32 req_level = 2;
}

//购买等级 - 回执
message packetc2l_buy_lv_result
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_buy_lv_result];
	optional int32 result = 2;
}

//翻倍是否成功
message packetc2l_double_game
{    
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_double_game];
	
	//点击的哪个翻倍 0:存到数据库，返回翻倍后的金币
	optional int32 tag = 2;  


}

//翻倍是否成功 - 回执
message packetc2l_double_game_result
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_double_game_result];
	optional int64 result = 2;
}


//购买翻倍次数
message packetc2l_buy_double_times
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_buy_double_times];
	
	// -1:确定购买
    // -2:取消购买
	optional int32 buy_type = 2;
}
//购买翻倍次数 - 回执
message packetc2l_buy_double_times_result
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_buy_double_times_result];
	 
	//购买翻倍次数结果
	optional int32 result = 2;
}


//进入游戏 
message packetc2l_enter_game   
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_game];
	optional int32 room_id = 2;
}

//进入游戏 - 回执
message packetc2l_enter_game_result
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_game_result];
	optional int32 result = 2;
}


//离开游戏 
message packetc2l_leave_game
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_game];
	optional int32 room_id = 2;
}

//离开游戏 - 回执
message packetc2l_leave_game_result
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_game_result];
	optional int32 result = 2;
}


//开始游戏 
message packetc2l_star_game
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_star_game];

	//单注索引
	optional int32 bet_gold_idx = 2;

	//点击了哪个免费游戏
	optional int32 free_game_idx = 3;
}

 
//开始游戏 - 回执
message packetc2l_star_game_result
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_star_game_result];

	// tag 0:没有特殊   2:元宝   3:福袋头尾加元宝  4:福袋头尾
	optional int32 tag = 2;

	//图标ID数组
	optional string arr = 3;

	//赢的金币
	optional int64 win_gold = 4;

	//可能翻倍(免费模式)
	optional int32 may_odds = 5;

	//免费游戏次数
	optional int32 free_game_times = 6;

	//福袋头尾的赔率
	optional int32 fd_odds = 8;

	//赔率
	optional int32 odds = 9;

	//结果
	optional int32 result = 10;

 

}

//测试N次游戏协议
message packetc2l_test_game
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_test_game];

	//单注索引
	optional int32 bet_gold_idx = 2;

	//多少次游戏
	optional int32 test_count = 3;
}

 
//测试N次游戏协议 - 回执
message packetc2l_test_game_result
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_test_game_result];

	//结果
	optional int32 result = 10;
}


//debug信息
message packetl2c_debuginfo {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_debuginfo];

	optional string debug_infos = 2; //调试信息 lua
}
