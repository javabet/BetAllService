package game_rouletteak_protocols;

import "game_rouletteak_def.proto"; 
import "msg_type_def.proto"; 

//房间信息    
message msg_room_info{
	optional int32 roomid = 1;		
}

//获得房间信息
message packetc2l_get_room_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_room_info];
}

//房间信息返回
message packetl2c_get_room_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_room_info_result];
	repeated msg_room_info room_list = 2;	
}

//进入房间
message packetc2l_enter_room {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_enter_room];
	optional int32 roomid = 2;
}

//进入房间返回
message packetl2c_enter_room_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_room_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
	optional msg_scene_info scene_info = 3;
	optional int64 self_gold = 4;
}

//离开房间
message packetc2l_leave_room {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_leave_room];
}

//离开房间返回
message packetl2c_leave_room_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_room_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_success];
	optional int64 player_gold = 3;
}

//玩家信息
message msg_player_info{
	optional int32 player_id = 1;				//玩家ID
	optional string player_name = 2;		//玩家昵称
	optional int32 head_frame = 3;			//头像框
	optional string head_custom = 4;		//玩家头像
	optional int64 player_gold = 5;			//玩家金币
	optional int32 player_sex = 6;			//玩家性别	
	optional int32 vip_level = 7;				//Vip等级
	optional int32 history_bet_gold = 8;	//历史下注金币
	optional int32 win_count = 9;				//最近胜场数（最近20场内）
	optional int32 bet_count = 10;			//当前局数
}

//下注信息
message msg_bet_info{
	optional int32 player_id = 1;				//玩家ID
	optional int32 bet_pos = 2;					//下注位置
	optional int64 bet_gold = 3;				//下注额度
	optional int64 cur_gold = 4;				//当前金币
	optional int32 chip_index = 5;				//下注筹码索引（当前房间）
}

//玩家输赢,下注结果
message msg_player_gold
{
	optional int32 player_id = 1;				//玩家ID
	optional int64 win_gold = 2;				//赢取金币
	optional int64 cur_gold = 3;				//当前金币
	optional int32 history_bet_gold = 4;		//历史下注金币
	optional int64 win_count = 5;				//最新的胜场数（最近20场内）
}

//结果信息
message msg_result_info{
	optional int32 number = 1;					//转盘结果
	repeated msg_player_gold player_golds = 2;	//玩家输赢结果
}

//房间信息
message msg_scene_info{
	optional int32 roomid = 1;
	optional int32 scene_state = 2;						//0:未开始  1:准备 2:下注 3:转盘 4:结果
	optional int32 cd = 3;								//cd time
	repeated msg_player_info player_list = 4;			//玩家列表
	repeated msg_bet_info bet_infos = 5;				//玩家下注信息
	optional msg_result_info result_info = 6;			//结果
	repeated int32 pos_list = 7;						//历史珠子位置0~36
	optional int64 bet_gold_room = 8;					//房间总下注
	optional int64 bet_gold_self = 9;					//自己下注
	optional int32 gambling_gold_id = 10;				//房间内赌神ID
	repeated int64 regal_id_list = 11;					//房间内前六名富豪玩家ID
}

//游戏逻辑
//获取场景信息
message packetc2l_get_scene_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];
}

//返回场景信息
message packetl2c_get_scene_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_get_scene_info_result];
	optional msg_scene_info scene_info = 2;
	optional int64 self_gold = 3;
}

//请求玩家列表
message packetc2l_ask_player_list {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_player_list];
}

//返回玩家列表
message packetcl2c_ask_player_list_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_ask_player_list_result];
	repeated msg_player_info player_list = 2;			//玩家列表
}

//广播准备状态
message packetl2c_bc_scene_prepare_into {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_scene_prepare_into];
	optional int32 cd = 2;
}

//广播下注状态
message packetl2c_bc_scene_bet_into {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_scene_bet_into];
	optional int32 cd = 2;
	optional int32 gambling_gold_id = 3;				//房间内赌神ID
	repeated int64 regal_id_list = 4;					//房间内前六富豪玩家ID
}

//广播同步下注状态
message packetl2c_bc_sync_scene_bet_into {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_sync_scene_bet_into];
	repeated msg_bet_info bet_list = 2;	//玩家下注列表
}	

//广播转盘状态
message packetl2c_bc_scene_deal_into {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_scene_deal_into];
	optional int32 cd = 2;
	optional int32 number = 3;
}

//广播结果状态
message packetl2c_bc_scene_result_into {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_scene_result_into];
	optional int32 cd = 2;
	optional msg_result_info result_info = 3;
}

//下注
message packetc2l_ask_bet_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ask_bet_info];
	optional int32 bet_pos = 2;		//下注位置
	optional int64 bet_gold = 3;	//下注金额
	optional int32 chip_index = 4;	//下注筹码索引（当前房间）
}

//下注结果
message packetl2c_bet_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bet_info_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
	optional msg_bet_info bet_info = 3;		//下注信息(使用统一结构)
	//optional int32 bet_pos = 3;	//下注位置
	//optional int32 bet_gold = 4;	//下注金额
	//optional int64 cur_gold = 5;	//当前金币
	//optional int32 chip_index = 6;//下注筹码索引（当前房间）
}

//桌子进玩家通知
message packetl2c_enter_player_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_enter_player_info];
	optional msg_player_info player_info = 2;
}

//桌子退玩家通知
message packetl2c_leave_player_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_leave_player_info];
	optional int32 player_id = 2;
}

//广播玩家属性变更（例如金币变化，包括充值，任务等）
message packetl2c_bc_change_attr {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_bc_change_attr];
	optional int32 player_id = 2;
	optional int32 item_type = 3;		//1.金币 非1.其他（金币以外的类型暂时没有用到）
	optional int64 change_value = 4;	//变动值
}

//请求补充试玩金币
message packetc2l_supply_chip {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_supply_chip];
}

//请求补充试玩金币返回
message packetl2c_supply_chip_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_supply_chip_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
	optional int64 gold = 6;
}

// 是否在游戏
message packetc2l_check_state
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
}

// 是否在游戏 - 回执
message packetc2l_check_state_result
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
	//大于0表示正在游戏中   0:不在游戏
	optional int32 room_id = 2 ; 
}

//房间牌路
message msg_room_history
{
	optional int32 room_id = 1;
	optional int32 state = 2;			//房间状态 2.开始下注（非下注都显示为结算中）
	optional int32 cd = 3;				//状态持续时间（只有下注中要展示）
	repeated int32 pos_list = 4;		//历史珠子位置0~36
}

//请求所有房间的牌路
message packetc2l_room_history_list {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_room_history_list];
}

//请求所有房间的牌路返回
message packetl2c_room_history_list_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_room_history_list_result];
	repeated msg_room_history history_list = 2;
}

//大厅房间信息更新（包括 开始下注 和 开奖）
message packetl2c_notify_history
{
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_notify_history];
	optional int32 room_id = 2;
	optional int32 state = 3;			//2.下注开始 3.结束下注（用于给前端把状态调整为结算中）4.结果 时间通知
	optional int32 cd = 4;				//只在 2.下注开始 状态时关心
	optional int32 pos = 5;				//只在 4.结果 状态时关心
}

//请求续压
message packetc2l_continue_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_continue_bet];
}

//请求续压返回
message packetl2c_continue_bet_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_continue_bet_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
	optional int64 cur_gold = 3;				//当前金币
	repeated msg_bet_info bet_list = 4;			//玩家下注列表
}

//取消押注
message packetc2l_cancel_bet {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_cancel_bet];
	optional int32 bet_pos = 2 [default = -1];
}

//取消押注返回（广播）
message packetl2c_cancel_bet_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_cancel_bet_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
	optional int32 player_id = 3;				//玩家ID	
	optional int64 cur_gold = 4;				//当前金币
	optional int32 bet_pos = 5;					//下注位置
	optional int64 change_gold = 6;				//下注金币
}

//房间信息
message room_player{
	optional int32 player_id = 1;
	optional int64 gold = 2;
	optional int64 profit_today = 3;
}

//前端控制 获取房间信息
message packetl2c_gm_get_room_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm_get_room_info];
}

//前端控制 获取房间信息返回
message packetl2c_gm_get_room_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_gm_get_room_info_result];
	optional int32 result = 2;//结果
	optional int32 bead_num = 3 [default = -1];	//当前GM控制开牌珠子pos
	repeated room_player players = 4;//玩家列表
	optional int64 stock = 5;	//库存
	optional int64 water = 6;	//抽水
	optional int32 kill = 7;	//杀分
}

//前端控制 设置开奖pos
message packetl2c_gm_set_bead {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm_set_bead];
	optional int32 bead_num = 2; //GM控制开牌珠子pos（只生效一次）
	optional int32 kill = 3; 	 //GM控制杀分（只生效一次）
}

//前端控制 设置开奖pos返回
message packetl2c_gm_set_bead_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_gm_set_bead_result];
	optional int32 result = 2;//结果
	optional int32 bead_num = 3; //GM控制开牌珠子pos（只生效一次）
	optional int32 kill = 4; 	 //GM控制杀分（只生效一次）
}

//调试
message packetl2c_debug {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_debug];
	optional int32 kill_cnt = 2 [default = 0];
	optional int32 kill_type = 3 [default = 0];  //1:定制 2:通杀 
	repeated int32 custom_cards = 4;//定制的数据 不支持
}

message packetl2c_debug_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_debug_result];
	optional msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];	
}

message msg_player_betinfo {
	optional int32 player_id = 1;
	optional string player_name = 2;
	repeated int32 bet_gold = 3; 
	optional int64 player_gold = 4;	
}

message packetl2c_notify_sceneinfo {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_notify_sceneinfo];
	optional int32 main_id = 2;
	optional int32 banker_type = 3;
	optional string banker_name = 4;
	repeated msg_player_betinfo player_betinfos = 5;
	optional int64 earn_gold = 6;
	optional int64 stock_gold = 7;
	optional int32 banker_gold = 8;    
	optional int32 count_down = 9;	
	optional int32 retain_cnt = 10;	   
}

message packetl2c_online_cnt {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_online_cnt];
	optional int32 cnt = 2;
}
