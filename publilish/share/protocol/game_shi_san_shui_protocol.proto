package game_shi_san_shui_protocols;

import "game_shi_san_shui_def.proto"; 
import "msg_type_def.proto"; 

//玩家信息
message msg_player_info{
	optional int32 player_id = 1;			//玩家ID
	optional string player_name = 2;		//玩家昵称
	optional int32 head_frame = 3;			//头像框
	optional string head_custom = 4;		//玩家头像
	optional int64 player_gold = 5;			//玩家金币
	optional int32 player_sex = 6;			//玩家性别	
	optional int32 vip_level = 7;			//Vip等级
}

//检测游戏状态		//重连之后判断是否在桌子中
message packetc2l_check_state {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_check_state];
}

//检测状态
message packetl2c_check_state_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_check_state_result];
	optional int32 result = 2 [default = 0]; // 0:不在,1:在room中,2:在table中
}

//获取场景信息
message packetc2l_get_scene_info {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_get_scene_info];
}

//playing场景信息
message msg_playing_scene_info {
	optional int32 remain_seconds = 1;			//剩余秒数
	repeated bool user_trustee = 2;				//[6]托管信息
	repeated int32 cards = 3;					//[5, 5, 3]	牌数据
	repeated bool open_cards = 4;				//[6]是否开牌
}

//场景信息返回
message packetl2c_scene_info_result {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_scene_info_result];
	optional int32 room_type = 2; 	//房间类型	
	optional msg_playing_scene_info scene_info = 3;		// 游戏中的场景信息
	optional packetl2c_game_end game_end = 4;			// 结算结果
	optional int32 game_status = 5;						// 游戏状态
}

//玩家托管请求
message packetc2l_user_trustee {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_user_trustee];
	optional bool trustee = 2;		// 托 不托
}

//玩家托管通知
message packetl2c_user_trustee_notify {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_user_trustee];
	optional int32 chair_id = 2;			//坐位号
	optional bool trustee = 3;				//托 不托
	optional int32 remain_seconds = 4;		//剩余秒数, trustee == false 时有效
}

//玩家已准备
message packetc2l_ready {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_ready];
	optional bool change_table = 2;			//换桌
}

//发送所有玩家信息
message packetl2c_send_all_playerinfos {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_send_all_playerinfos];
	repeated msg_player_info player_info = 2;		//[2]玩家信息
}

//发送单个玩家信息
message packetl2c_send_playerinfo {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_send_playerinfo];
	optional msg_player_info player_info = 2;		//玩家信息
	optional int32 chair_id = 3;					//坐位号
}

//扑克列表
message cards_data {
	repeated int32 card = 1;				//[5, 5, 3]扑克列表
}

//每道牌型
message lane_data {
	optional int32 lane_type = 1;			//牌型
	optional int32 win_shui_cnt = 2;		//水数
}

//打枪列表
message da_qiang_data {
	optional int32 chair_id = 1;			//坐位号
	repeated int32 shui_cnt = 2;			//[3]3道水数
}

//报道列表
message bao_dao_data {
	optional int32 chair_id = 1;			//坐位号
	optional int32 shui_cnt = 2;			//水数
}

//结算结果
message win_result {
	repeated int32 cards = 1;				//[5, 5, 3]扑克列表
	repeated lane_data lane_type = 2;		//[3]3道牌型
	repeated da_qiang_data da_qiang = 3;	//打枪列表
	optional int64 game_score = 4;			//当前金币
	optional int32 win_account = 5;			//输赢金币
	repeated bao_dao_data bao_dao = 6;		//报道列表

	optional int32 total_shui_cnt = 7;		//总水数
}

//游戏开始
message packetl2c_game_start {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_start];
	repeated cards_data cards = 2;			//[6]6家扑克列表
}

//操作提示
message packetl2c_operate_notify {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_operate_notify];
	optional int32 chair_idx = 2;				//坐位号
}

//用户操作
message packetc2l_operate_card {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_operate_card];
	repeated int32 cards = 2;				//[5, 5, 3]扑克列表 或者 [1]指定报道
}

//游戏结束
message packetl2c_game_end {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_end];
	repeated win_result win = 2;			//[4]4家结算
}

//玩家通知消息
message packetl2c_game_notify {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_game_notify];
	optional e_notify_type notify_type = 2;		//通知类型
	optional int32 notify_param = 3;			//通知类型参数
}

//玩家信息
message gm_player_info {
	optional int32 player_id = 1;			//玩家ID
	optional string player_name = 2;		//玩家昵称
	optional int64 player_gold = 3;			//玩家金币
	optional int32 player_room = 4;			//玩家房间
	optional int64 player_profit = 5;		//玩家赢利
	optional int64 player_kill_type = 6;	//(0:弱, 1:强)
	optional int64 player_kill_cnt = 7;		//
}

//gm_list 请求
message packetc2l_gm_list {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm_list];
	optional int32 hours = 2;				//小时数
}

//房间信息
message gm_room_info {
	optional int32 id = 1;
	optional int32 player_fee = 2;			//赢利
	optional int64 player_win = 3;			//库存
}

//gm_list 数据
message packetl2c_gm_list {
	optional e_server_msg_type packet_id = 1 [default = e_mst_l2c_gm_list];
	repeated gm_player_info players = 2;		//
	repeated gm_room_info rooms = 3;		//
}

//gm_kill 请求
message packetc2l_gm_kill {
	optional e_server_msg_type packet_id = 1 [default = e_mst_c2l_gm_kill];
	optional int32 player_id = 2;				//(0:所有玩家, x:指定玩家)
	optional int32 kill_type = 3;				//(0:弱, 1:强, -1:无)
	optional int32 kill_cnt = 4;				//
}

